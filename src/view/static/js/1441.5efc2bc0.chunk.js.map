{"version":3,"file":"static/js/1441.5efc2bc0.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/NumberFormat.tsx","components/Table.tsx","feautures/Admin/Task/Accounting/PettyCash.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/icons-material/Save.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        sx={{\n          minWidth: \"200px\",\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { useReducer, useContext, useState, useRef } from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Autocomplete,\n  MenuItem,\n  Select,\n  Box,\n} from \"@mui/material\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, QueryClient } from \"react-query\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { wait } from \"../../../../lib/wait\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\n\nconst initialState = {\n  sub_refNo: \"\",\n  refNo: \"\",\n  datePetty: new Date(),\n  payee: \"\",\n  explanation: \"\",\n  transactionPurpose: \"\",\n  transactionCode: \"\",\n  transactionTitle: \"\",\n  transactionShort: \"\",\n  clientName: \"\",\n  clientID: \"\",\n  amount: \"\",\n  invoice: \"\",\n  option: \"non-vat\",\n  search: \"\",\n  pettyCashMode: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst selectedCollectionColumns = [\n  { field: \"purpose\", headerName: \"Purpose\", flex: 1, minWidth: 400 },\n  { field: \"amount\", headerName: \"Amount\", minWidth: 170 },\n  {\n    field: \"usage\",\n    headerName: \"Usage\",\n    flex: 1,\n    minWidth: 300,\n  },\n  { field: \"accountID\", headerName: \"Account ID\", flex: 1, minWidth: 300 },\n  { field: \"sub_account\", headerName: \"Sub Account\", minWidth: 80 },\n  { field: \"clientID\", headerName: \"ID No\", minWidth: 100 },\n  // hide\n  { field: \"clientName\", headerName: \"Name\", flex: 1, minWidth: 300 },\n  { field: \"accountCode\", headerName: \"Accoount Code\", minWidth: 200 },\n  {\n    field: \"accountShort\",\n    headerName: \"Account Short\",\n    flex: 1,\n    minWidth: 200,\n  },\n  { field: \"vatType\", headerName: \"Vat Type\", flex: 1, minWidth: 100 },\n  { field: \"invoice\", headerName: \"Invoice\", flex: 1, minWidth: 100 },\n  { field: \"TempID\", headerName: \"TempId\", hide: true },\n];\n\nexport default function PettyCash() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [editTransaction, setEditTransaction] = useState({\n    edit: false,\n    updateId: \"\",\n  });\n  const [pettyCash, setPettyCash] = useState<GridRowSelectionModel>([]);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const payeeInputRef = useRef<HTMLInputElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n  const invoiceInputRef = useRef<HTMLInputElement>(null);\n  let creditTransactionRef = useRef<HTMLInputElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n  const pdcSearchInput = useRef<HTMLInputElement>(null);\n  const queryClient = new QueryClient();\n  const isDisableField = state.pettyCashMode === \"\";\n  const table = useRef<any>(null);\n\n  const {\n    isLoading: loadingPettyCashIdGenerator,\n    refetch: refetchettyCashIdGenerator,\n  } = useQuery({\n    queryKey: \"petty-cash-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-petty-cash-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      if(user?.department === \"UCSMI\"){\n        return\n      }\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: response.data.pettyCashId[0].petty_cash_id,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: response.data.pettyCashId[0].petty_cash_id,\n      });\n    },\n  });\n  const {\n    isLoading: loadingAddUpdatePettyCash,\n    mutate: mutateAddUpdatePettyCash,\n  } = useMutation({\n    mutationKey: \"add-update-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/task/accounting/add-petty-cash`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (data) => {\n      const response = data as any;\n      if (response.data.success) {\n        initialState.pettyCashMode = \"\";\n        setNewStateValue(dispatch, initialState);\n        refetchettyCashIdGenerator();\n        setPettyCash([]);\n        queryClient.invalidateQueries(\"petty-cash-search\");\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    isLoading: isLoadingLoadSelectedPettyCash,\n    mutate: mutateLoadSelectedPettyCash,\n  } = useMutation({\n    mutationKey: \"load-selected-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(\n        `/task/accounting/load-selected-petty-cash`,\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (data) => {\n      const response = data as any;\n      const loadPettyCash = response.data.loadSelectedPettyCash;\n\n      setNewStateValue(dispatch, {\n        ...state,\n        ...{\n          sub_refNo: loadPettyCash[0].PC_No,\n          refNo: loadPettyCash[0].PC_No,\n          datePetty: loadPettyCash[0].PC_Date,\n          payee: loadPettyCash[0].Payee,\n          explanation: loadPettyCash[0].Explanation,\n          pettyCashMode: \"edit\",\n        },\n      });\n      setPettyCash(loadPettyCash);\n    },\n  });\n  const { isLoading: loadingPettyLog, data: pettyLogRes } = useQuery({\n    queryKey: \"petty-log\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-petty-log`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"clientName\",\n        value: selectedRowData[0].Name,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"clientID\",\n        value: selectedRowData[0].IDNo,\n      });\n      closeCliendIDsModal();\n    },\n    searchRef: pdcSearchInput,\n  });\n  const {\n    ModalComponent: ModalSearchPettyCash,\n    openModal: openModalSearchPettyCash,\n    isLoading: isLoadingModalSearchPettyCash,\n    closeModal: closeModalSearchPettyCash,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-petty-cash\",\n      queryUrlName: \"searchPettyCash\",\n    },\n    columns: [\n      { field: \"PC_Date\", headerName: \"Type\", width: 130 },\n      { field: \"PC_No\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Payee\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"petty-cash-search\",\n    uniqueId: \"PC_No\",\n    responseDataKey: \"searchPettyCash\",\n    onSelected: (selectedRowData) => {\n      mutateLoadSelectedPettyCash({ PC_No: selectedRowData[0].PC_No });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"pettyCashMode\",\n        value: \"edit\",\n      });\n      closeModalSearchPettyCash();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: pdcSearchInput,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave() {\n    if (state.payee.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Payee is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.invoice.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.amount.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Amount is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.clientID.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Usage is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.payee === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide payee!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          payeeInputRef.current?.focus();\n        });\n      });\n    }\n    if (state.explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (pettyCash.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction entry!\",\n        timer: 1500,\n      });\n    }\n    if (state.pettyCashMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateAddUpdatePettyCash({\n            refNo: state.refNo,\n            datePetty: state.datePetty,\n            payee: state.payee,\n            explanation: state.explanation,\n            hasSelected: state.pettyCashMode === \"edit\",\n            pettyCash,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAddUpdatePettyCash({\n            refNo: state.refNo,\n            datePetty: state.datePetty,\n            payee: state.payee,\n            explanation: state.explanation,\n            hasSelected: state.pettyCashMode === \"edit\",\n            pettyCash,\n          });\n        },\n      });\n    }\n  }\n  function handleAddTransaction() {\n    if (state.transactionCode === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          creditTransactionRef.current?.focus();\n        });\n      });\n    }\n    if (state.clientID === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide usage\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          openCliendIDsModal();\n        });\n      });\n    }\n    if (state.amount === \"\" || parseFloat(state.amount.replace(/,/g, \"\")) < 1) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide proper amount\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          amountRef.current?.focus();\n        });\n      });\n    }\n    setPettyCash((d) => {\n      let FirstTempId = \"\";\n      if (editTransaction.edit) {\n        FirstTempId = editTransaction.updateId;\n      } else {\n        FirstTempId = generateID(\n          d.length ? (d[d.length - 1] as any).TempID : \"000\"\n        );\n      }\n\n      const addPettyCashTransaction: Array<any> = [];\n      d = d.filter((item: any) => item.TempID !== FirstTempId);\n\n      addPettyCashTransaction.push({\n        purpose: state.transactionPurpose,\n        amount: parseFloat(state.amount).toLocaleString(\"en-US\", {\n          style: \"decimal\",\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n        usage: `${state.clientName} > ${state.clientID} > HO`,\n        accountID: `${state.transactionShort} > ${state.transactionCode}`,\n        sub_account: \"HO\",\n        clientID: state.clientID,\n        clientName: state.clientName,\n        accountCode: state.transactionCode,\n        accountShort: state.transactionShort,\n        vatType: state.option.toUpperCase(),\n        invoice: state.invoice,\n        TempID: FirstTempId,\n      });\n\n      if (state.transactionPurpose !== \"Input Tax\" && state.option === \"vat\") {\n        const SecondTempId = generateID((d[d.length - 1] as any).TempID);\n        const taxableAmount = parseFloat(state.amount.replace(/,/g, \"\")) / 1.12;\n        const inputTax = taxableAmount * 0.12;\n        addPettyCashTransaction.push({\n          purpose: state.transactionPurpose,\n          amount: parseFloat(inputTax.toFixed(2)).toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          }),\n          usage: `${state.clientName} > ${state.clientID} > HO`,\n          accountID: `${state.transactionShort} > ${state.transactionCode}`,\n          sub_account: \"HO\",\n          clientID: state.clientID,\n          clientName: state.clientName,\n          accountCode: \"1.06.02\",\n          accountShort: \"Input Tax\",\n          vatType: state.option.toUpperCase(),\n          invoice: state.invoice,\n          TempID: SecondTempId,\n        });\n      }\n\n      function generateID(lastItem: any) {\n        const numericPart = (parseInt(lastItem.match(/\\d+/)[0]) + 1)\n          .toString()\n          .padStart(3, \"0\");\n        return numericPart;\n      }\n\n      d = [...d, ...addPettyCashTransaction];\n      return d;\n    });\n    initialState.datePetty = state.datePetty;\n    initialState.payee = state.payee;\n    initialState.explanation = state.explanation;\n    initialState.pettyCashMode = state.pettyCashMode;\n    initialState.sub_refNo = state.sub_refNo;\n    initialState.refNo = state.refNo;\n    setNewStateValue(dispatch, initialState);\n    setEditTransaction({ edit: false, updateId: \"\" });\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {isLoadingModalSearchPettyCash ? (\n          <LoadingButton loading={isLoadingModalSearchPettyCash} />\n        ) : (\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return openModalSearchPettyCash(\n                  (e.target as HTMLInputElement).value\n                );\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n        {state.pettyCashMode === \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            id=\"entry-header-save-button\"\n            onClick={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"pettyCashMode\",\n                value: \"add\",\n              });\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={handleOnSave}\n          disabled={state.pettyCashMode === \"\"}\n          startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          loading={loadingAddUpdatePettyCash}\n        >\n          {state.pettyCashMode === \"edit\" ? \"Update\" : \"Save\"}\n        </LoadingButton>\n        {state.pettyCashMode !== \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  initialState.pettyCashMode = \"\";\n                  setNewStateValue(dispatch, initialState);\n                  refetchettyCashIdGenerator();\n                  setPettyCash([]);\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          display: \"flex\",\n          marginTop: \"10px\",\n          gap: \"10px\",\n          padding: \"15px\",\n        }}\n      >\n        {loadingPettyCashIdGenerator ? (\n          <LoadingButton loading={loadingPettyCashIdGenerator} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={isDisableField}\n          >\n            <InputLabel htmlFor=\"return-check-id-field\">Ref. No.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              disabled={isDisableField}\n              label=\"Ref. No.\"\n              name=\"refNo\"\n              value={state.refNo}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleOnSave();\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"return-check-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    ref={reloadIDButtonRef}\n                    disabled={isDisableField}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchettyCashIdGenerator();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          fullWidth={false}\n          disabled={isDisableField}\n          label=\"Date\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"datePetty\",\n              value: value,\n            });\n          }}\n          value={new Date(state.datePetty)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          datePickerRef={datePickerRef}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Payee\"\n          size=\"small\"\n          name=\"payee\"\n          value={state.payee}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return handleOnSave();\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\", width: \"280px\" },\n          }}\n          sx={{\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n          inputRef={payeeInputRef}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Explanation\"\n          size=\"small\"\n          name=\"explanation\"\n          value={state.explanation}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return handleOnSave();\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n          }}\n          sx={{\n            flex: 1,\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n          inputRef={explanationInputRef}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          marginTop: \"10px\",\n          padding: \"15px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          {loadingPettyLog ? (\n            <LoadingButton loading={loadingPettyLog} />\n          ) : (\n            <Autocomplete\n              fullWidth\n              freeSolo\n              options={pettyLogRes?.data.pettyLog}\n              onChange={(_, value) => {\n                if (value) {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"transactionCode\",\n                    value: value.Acct_Code,\n                  });\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"transactionTitle\",\n                    value: value.Acct_Title,\n                  });\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"transactionShort\",\n                    value: value.Short,\n                  });\n                }\n              }}\n              onInputChange={(event, newInputValue, reason) => {\n                if (reason === \"clear\") {\n                  return dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"transactionPurpose\",\n                    value: \"\",\n                  });\n                }\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"transactionPurpose\",\n                  value: newInputValue,\n                });\n              }}\n              inputValue={state.transactionPurpose}\n              getOptionLabel={(option: any) => {\n                return option.Purpose;\n              }}\n              sx={{\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                },\n                \".MuiInputBase-input\": {\n                  width: \"100% !important\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                \".MuiAutocomplete-input \": {\n                  position: \"absolute\",\n                },\n              }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  label=\"Transaction\"\n                  name=\"transactionPurpose\"\n                  InputProps={{\n                    ...params.InputProps,\n                    inputRef: creditTransactionRef,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  onChange={handleInputChange}\n                />\n              )}\n              disabled={isDisableField}\n              // onKeyDown={(e) => {\n              //   if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              //     e.preventDefault();\n              //     return handleAddTransaction();\n              //   }\n              // }}\n            />\n          )}\n\n          {isLoadingClientIdsModal ? (\n            <LoadingButton loading={isLoadingClientIdsModal} />\n          ) : (\n            <FormControl\n              sx={{\n                minWidth: \"400px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n            >\n              <InputLabel htmlFor=\"client-list\">Usage</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                disabled={isDisableField}\n                label=\"Usage\"\n                name=\"clientName\"\n                value={state.clientName}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openCliendIDsModal(state.clientName);\n                  }\n                }}\n                id=\"client-list\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openCliendIDsModal(state.clientName);\n                      }}\n                    >\n                      <PersonSearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <Select\n            labelId=\"label-selection-reason\"\n            value={state.option}\n            name=\"option\"\n            onChange={handleInputChange}\n            disabled={isDisableField}\n            autoWidth\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n              width: \"200px\",\n            }}\n          >\n            <MenuItem value=\"vat\">VAT</MenuItem>\n            <MenuItem value={\"non-vat\"}>NON-VAT</MenuItem>\n          </Select>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          <TextField\n            sx={{\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            disabled={isDisableField}\n            name=\"amount\"\n            label=\"Amount\"\n            size=\"small\"\n            value={state.amount}\n            onChange={handleInputChange}\n            placeholder=\"0.00\"\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              inputRef: amountRef,\n              style: { height: \"27px\", fontSize: \"14px\", width: \"200px\" },\n            }}\n            onBlur={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"amount\",\n                value: parseFloat(state.amount.replace(/,/g, \"\")).toFixed(2),\n              });\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleAddTransaction();\n              }\n            }}\n          />\n          <TextField\n            sx={{\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            InputProps={{\n              inputRef: amountRef,\n              style: { height: \"27px\", fontSize: \"14px\", width: \"300px\" },\n            }}\n            disabled={isDisableField}\n            label=\"Invoice\"\n            size=\"small\"\n            name=\"invoice\"\n            value={state.invoice}\n            onChange={handleInputChange}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleAddTransaction();\n              }\n            }}\n            inputRef={invoiceInputRef}\n          />\n          <Button\n            disabled={isDisableField}\n            color=\"success\"\n            variant=\"contained\"\n            style={{ gridArea: \"button\", height: \"27px\", fontSize: \"14px\" }}\n            startIcon={<AddIcon />}\n            onClick={() => {\n              handleAddTransaction();\n            }}\n          >\n            {editTransaction.edit ? \"Update Transaction\" : \"add Transaction\"}\n          </Button>\n        </div>\n      </fieldset>\n      <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={\n              loadingAddUpdatePettyCash || isLoadingLoadSelectedPettyCash\n            }\n            columns={selectedCollectionColumns}\n            rows={pettyCash}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                setEditTransaction({\n                  edit: false,\n                  updateId: \"\",\n                });\n                setNewStateValue(dispatch, {\n                  ...state,\n                  ...{\n                    transactionPurpose: \"\",\n                    transactionCode: \"\",\n                    transactionTitle: \"\",\n                    transactionShort: \"\",\n                    clientName: \"\",\n                    clientID: \"\",\n                    amount: \"\",\n                    invoice: \"\",\n                    option: \"non-vat\",\n                  },\n                });\n                return;\n              }\n\n              if (code === \"Delete\" || code === \"Backspace\") {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: `You won't to delete this Check No. ${rowSelected.Check_No}`,\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    return setPettyCash((dt) => {\n                      return dt.filter(\n                        (item: any) => item.TempID !== selection[0]\n                      );\n                    });\n                  }\n                  table.current?.removeSelection();\n                });\n                return;\n              }\n              setNewStateValue(dispatch, {\n                ...state,\n                ...{\n                  transactionPurpose: rowSelected.purpose,\n                  transactionCode: rowSelected.accountCode,\n                  transactionTitle: rowSelected.purpose,\n                  transactionShort: rowSelected.DRShort,\n                  clientName: rowSelected.clientName,\n                  clientID: rowSelected.clientID,\n                  amount: rowSelected.amount,\n                  invoice: rowSelected.invoice,\n                  option: rowSelected.vatType.toLowerCase(),\n                },\n              });\n              setEditTransaction({\n                edit: true,\n                updateId: rowSelected.TempID,\n              });\n            }}\n          />\n        </Box>\n      </div>\n      {ModalClientIDs}\n      {ModalSearchPettyCash}\n    </div>\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","ref","slotProps","size","sx","minWidth","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","marginBottom","InputProps","e","_searchRef$current","code","preventDefault","current","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","sub_refNo","refNo","datePetty","Date","payee","explanation","transactionPurpose","transactionCode","transactionTitle","transactionShort","clientName","clientID","amount","invoice","option","search","pettyCashMode","reducer","state","action","type","_defineProperty","field","selectedCollectionColumns","headerName","PettyCash","_queryFn","_mutationFn","_mutationFn2","_queryFn2","_refParent$current","refParent","useRef","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","dispatch","edit","updateId","editTransaction","setEditTransaction","_useState3","_useState4","pettyCash","setPettyCash","reloadIDButtonRef","payeeInputRef","explanationInputRef","invoiceInputRef","creditTransactionRef","amountRef","pdcSearchInput","queryClient","QueryClient","isDisableField","table","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","response","department","pettyCashId","petty_cash_id","loadingPettyCashIdGenerator","refetchettyCashIdGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","success","setNewStateValue","invalidateQueries","Swal","icon","message","timer","loadingAddUpdatePettyCash","mutateAddUpdatePettyCash","mutate","_useMutation2","_x2","_callee3","_context3","loadPettyCash","loadSelectedPettyCash","PC_No","PC_Date","Payee","Explanation","isLoadingLoadSelectedPettyCash","mutateLoadSelectedPettyCash","_useQuery2","_callee4","_context4","loadingPettyLog","pettyLogRes","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","selectedRowData","Name","IDNo","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","closeModalSearchPettyCash","onCloseFunction","ModalSearchPettyCash","openModalSearchPettyCash","isLoadingModalSearchPettyCash","handleInputChange","_e$target","handleOnSave","then","result","wait","_payeeInputRef$curren","_explanationInputRef$","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","hasSelected","saveCondfirmationAlert","isConfirm","handleAddTransaction","_creditTransactionRef","parseFloat","replace","_amountRef$current","d","FirstTempId","generateID","TempID","addPettyCashTransaction","push","purpose","toLocaleString","minimumFractionDigits","maximumFractionDigits","usage","accountID","sub_account","accountCode","accountShort","vatType","toUpperCase","SecondTempId","inputTax","toFixed","lastItem","parseInt","match","toString","padStart","LoadingButton","Button","startIcon","AddIcon","disabled","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","border","borderRadius","marginTop","gap","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","readOnly","endAdornment","InputAdornment","edge","RestartAltIcon","timeout","setTimeout","_datePickerRef$curren","_datePickerRef$curren2","click","clearTimeout","InputLabelProps","Autocomplete","freeSolo","options","pettyLog","_","Acct_Code","Acct_Title","Short","onInputChange","newInputValue","reason","inputValue","getOptionLabel","Purpose","renderInput","params","PersonSearchIcon","Select","labelId","autoWidth","MenuItem","placeholder","inputComponent","onBlur","gridArea","getBoundingClientRect","overflowX","rowSelected","undefined","DRShort","toLowerCase","Check_No","_table$current","dt","obj","Object","entries","CustomizeAxiosFunc","_x3","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","res","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r"],"sourceRoot":""}