{"version":3,"file":"static/js/193.4105bd99.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/PrintPreview/dataCore.ts","feautures/Admin/Reports/Accounting/DepositedCollections.tsx","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        sx={{\n          minWidth: \"200px\",\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","export function getTableCellHeight(\r\n  tempCell: HTMLTableCellElement,\r\n  content: string,\r\n  columnWidth: string,\r\n  contentElment: Element,\r\n  tempTable: HTMLTableElement\r\n) {\r\n  tempCell.style.width = columnWidth;\r\n  tempCell.textContent = content;\r\n  contentElment.appendChild(tempTable);\r\n}\r\n\r\nexport function defaultArrangeDataCore({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  fontSize = \"11px\",\r\n  summaryHeight = 0,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  fontSize: string;\r\n  summaryHeight?: number;\r\n}) {\r\n  const newData: Array<any> = [];\r\n  let trHeight = 0;\r\n  let temp: Array<any> = [];\r\n  const contentElment = document.querySelector(\".content\") as Element;\r\n  const maxHeight =\r\n    contentElment.getBoundingClientRect().height - adjustMaxHeight;\r\n\r\n  data.forEach((itm: any, idx: number) => {\r\n    itm = beforeArrangeData(itm);\r\n    const contentElment = document.querySelector(\".content\") as Element;\r\n    const tempTable = document.createElement(\"table\");\r\n    const tempRow = tempTable.insertRow();\r\n\r\n    if (itm.summaryReport) {\r\n      if (maxHeight - trHeight <= summaryHeight + 20) {\r\n        trHeight += maxHeight - trHeight;\r\n      }\r\n    }\r\n    column.forEach((col) => {\r\n      const tempCell = tempRow.insertCell();\r\n      tempTable.style.visibility = \"hidden\";\r\n      tempTable.style.width = `100%`;\r\n      tempTable.style.fontSize = fontSize;\r\n\r\n      getTableCellHeight(\r\n        tempCell,\r\n        itm[col.datakey],\r\n        col.width,\r\n        contentElment,\r\n        tempTable\r\n      );\r\n    });\r\n    trHeight += tempRow.getBoundingClientRect().height;\r\n    contentElment.removeChild(tempTable);\r\n    temp.push(itm);\r\n    if (\r\n      trHeight >= maxHeight ||\r\n      (idx === data.length - 1 && trHeight < maxHeight)\r\n    ) {\r\n      newData.push(temp);\r\n      trHeight = 0;\r\n      temp = [];\r\n    }\r\n  });\r\n\r\n  return newData;\r\n}\r\nexport const arrangeData = async ({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  cb,\r\n  fontSize = \"11px\",\r\n  summaryHeight,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  cb?: ({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n  }: {\r\n    data: any;\r\n    column: Array<any>;\r\n    beforeArrangeData: (itm: any) => any;\r\n    adjustMaxHeight: number;\r\n  }) => any[];\r\n  fontSize?: string;\r\n  summaryHeight?: number;\r\n}) => {\r\n  if (data === undefined) return [];\r\n  if (cb) {\r\n    return cb({\r\n      data,\r\n      column,\r\n      beforeArrangeData,\r\n      adjustMaxHeight,\r\n    });\r\n  }\r\n\r\n  return defaultArrangeDataCore({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n    fontSize,\r\n    summaryHeight,\r\n  });\r\n};\r\n","import { useContext, useRef, Fragment } from \"react\";\nimport {\n  FormControl,\n  MenuItem,\n  Select,\n  TextField,\n  InputLabel,\n  Box,\n} from \"@mui/material\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport PrintPreview, {\n  columnSelection,\n  copiedByHeaderOnDoubleClick,\n} from \"../../../../components/PrintPreview/PrintPreview\";\nimport { arrangeData } from \"../../../../components/PrintPreview/dataCore\";\nimport { format } from \"date-fns\";\nimport ReactDOMServer from \"react-dom/server\";\n\nconst initialState = {\n  dateFormat: \"Monthly\",\n  date: new Date(),\n  sub_acct: \"All\",\n  title: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst column = [\n  {\n    datakey: \"Temp_SlipDate\",\n    header: \"DATE\",\n    width: \"80px\",\n  },\n  {\n    datakey: \"Slip_Code\",\n    header: \"SLIP CODE\",\n    width: \"90px\",\n  },\n  {\n    datakey: \"acct_name\",\n    header: \"ACCOUNT NAME\",\n    width: \"130px\",\n  },\n  {\n    datakey: \"IDNo\",\n    header: \"IDENTITY\",\n    width: \"300px\",\n  },\n  {\n    datakey: \"Bank\",\n    header: \"BANK/BRANCH\",\n    width: \"130px\",\n  },\n  {\n    datakey: \"cCheck_No\",\n    header: \"CHECK #\",\n    width: \"100px\",\n  },\n  {\n    datakey: \"Debit\",\n    header: \"DEBIT\",\n    width: \"100px\",\n    type: \"number\",\n  },\n  {\n    datakey: \"Credit\",\n    header: \"CREDIT\",\n    width: \"100px\",\n    type: \"number\",\n  },\n  {\n    datakey: \"Ref_No\",\n    header: \"REF #\",\n    width: \"100px\",\n  },\n];\n\nfunction setupTitle(state: any, department: string) {\n  return `${\n    department === \"UMIS\"\n      ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n      : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n  }\\n${state.dateFormat} Deposited Collections\\n${DateToStringFormat(state)}`;\n}\n\nfunction DateToStringFormat(state: any) {\n  let dateString = \"\";\n  if (state.dateFormat === \"Daily\") {\n    dateString = state.date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  } else if (state.dateFormat === \"Monthly\") {\n    dateString = state.date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n    });\n  }\n\n  return dateString.toString();\n}\n\nfunction Setting({ state, dispatch }: { state: any; dispatch: any }) {\n  const dateFromRef = useRef<HTMLElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const { data: dataSubAccounts, isLoading: isLoadingSubAccounts } = useQuery({\n    queryKey: \"sub-accounts\",\n    queryFn: async () =>\n      await myAxios.get(\"/reports/accounting/get-sub-account-acronym\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"50px 20px\",\n      }}\n    >\n      <TextField\n        label=\"Title\"\n        fullWidth\n        name=\"title\"\n        value={state.title}\n        onChange={handleInputChange}\n        rows={6}\n        multiline\n        InputProps={{\n          style: { height: \"140px\", fontSize: \"12px\" },\n        }}\n        sx={{\n          flex: 1,\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n        }}\n      />\n      <Box\n        sx={(theme) => ({\n          height: \"100%\",\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(1,1fr)\",\n          gap: \"10px\",\n          margin: \"10px 0\",\n          [theme.breakpoints.down(\"sm\")]: {\n            gridTemplateColumns: \"repeat(1,1fr)\",\n          },\n        })}\n      >\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"date_format\">Report</InputLabel>\n          <Select\n            labelId=\"date_format\"\n            value={state.dateFormat}\n            label=\"Report\"\n            name=\"dateFormat\"\n            onChange={(e) => {\n              handleInputChange(e);\n              state.dateFormat = e.target.value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={\"Daily\"}>Daily</MenuItem>\n            <MenuItem value={\"Monthly\"}>Monthly</MenuItem>\n          </Select>\n        </FormControl>\n        {isLoadingSubAccounts ? (\n          <LoadingButton loading={isLoadingSubAccounts} />\n        ) : (\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"sub_account_id\">Sub Account</InputLabel>\n            <Select\n              labelId=\"sub_account_id\"\n              value={state.sub_acct}\n              label=\"Sub Account\"\n              name=\"sub_acct\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={\"All\"}>All</MenuItem>\n              {dataSubAccounts?.data.sub_account.map(\n                (itm: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={itm.Acronym}>\n                      {itm.Acronym}\n                    </MenuItem>\n                  );\n                }\n              )}\n            </Select>\n          </FormControl>\n        )}\n        {state.dateFormat === \"Monthly\" && (\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              slotProps={{\n                textField: {\n                  size: \"small\",\n                  name: \"\",\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                },\n              }}\n              label={\"Date\"}\n              views={[\"month\", \"year\"]}\n              value={state.date}\n              onChange={(value) => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"date\",\n                  value: value,\n                });\n                state.date = value;\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"title\",\n                  value: setupTitle(state, user?.department as string),\n                });\n              }}\n            />\n          </LocalizationProvider>\n        )}\n        {state.dateFormat === \"Daily\" && (\n          <CustomDatePicker\n            fullWidth={true}\n            label=\"Date From\"\n            onChange={(value: any) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"date\",\n                value: value,\n              });\n              state.date = value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n            value={new Date(state.date)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  dateFromRef.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={dateFromRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default function DepositedCollections() {\n  const { user, myAxios } = useContext(AuthContext);\n  initialState.title = setupTitle(initialState, user?.department as string);\n\n  async function onReportSubmit(setData: any, setLoading: any, state: any) {\n    const response = await myAxios.post(\n      \"/reports/accounting/deposited-collection-report\",\n      state,\n      {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }\n    );\n    const jsonData = await response.data;\n    const SummaryTable = () => (\n      <table>\n        <tbody>\n          {jsonData.summary.map((rowItem: any, rowIdx: number) => {\n            if (\n              rowItem.summ &&\n              !rowItem.header &&\n              !rowItem.footer &&\n              !rowItem.signature\n            ) {\n              return (\n                <Fragment key={rowIdx}>\n                  <tr>\n                    <td\n                      colSpan={3}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"500\",\n                        textAlign: \"right\",\n                      }}\n                    ></td>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"500\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {rowItem.acct_name}\n                    </td>\n                    <td\n                      colSpan={1}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"500\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {rowItem.Debit}\n                    </td>\n                    <td\n                      colSpan={1}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"500\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {rowItem.Credit}\n                    </td>\n                  </tr>\n                </Fragment>\n              );\n            }\n            if (rowItem.summ && rowItem.header) {\n              return (\n                <Fragment key={rowIdx}>\n                  <tr>\n                    <td\n                      colSpan={3}\n                      style={{\n                        fontSize: \"11.5px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"right\",\n                      }}\n                    ></td>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11.5px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      {rowItem.IDNo}\n                    </td>\n                    <td\n                      colSpan={1}\n                      style={{\n                        fontSize: \"11.5px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {rowItem.Debit}\n                    </td>\n                    <td\n                      colSpan={1}\n                      style={{\n                        fontSize: \"11.5px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {rowItem.Credit}\n                    </td>\n                  </tr>\n                </Fragment>\n              );\n            }\n            if (rowItem.summ && rowItem.footer) {\n              return (\n                <Fragment key={rowIdx}>\n                  <tr>\n                    <td\n                      colSpan={3}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"right\",\n                      }}\n                    ></td>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {rowItem.ORNo}\n                    </td>\n                    <td\n                      colSpan={1}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"right\",\n                        borderTop: \"1px solid black\",\n                        borderBottom: \"2px solid black\",\n                      }}\n                    >\n                      {rowItem.Debit}\n                    </td>\n                    <td\n                      colSpan={1}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"right\",\n                        borderTop: \"1px solid black\",\n                        borderBottom: \"2px solid black\",\n                      }}\n                    >\n                      {rowItem.Credit}\n                    </td>\n                  </tr>\n                </Fragment>\n              );\n            }\n            if (rowItem.summ && rowItem.signature) {\n              return (\n                <Fragment key={rowIdx}>\n                  <tr style={{ height: \"40px\" }}></tr>\n                  <tr>\n                    <td\n                      colSpan={column.length}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      Prepared: ________________ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      Checked: ________________\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Approved: ________________\n                    </td>\n                  </tr>\n                </Fragment>\n              );\n            }\n            if (rowItem.summary) {\n              return (\n                <Fragment key={rowIdx}>\n                  <tr style={{ height: \"15px\" }}></tr>\n                  <tr>\n                    <td\n                      colSpan={3}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bolder\",\n                        textAlign: \"right\",\n                      }}\n                    >\n                      {rowItem.acct_name}\n                    </td>\n                  </tr>\n                  <tr style={{ height: \"15px\" }}></tr>\n                </Fragment>\n              );\n            }\n\n            return <Fragment key={rowIdx}></Fragment>;\n          })}\n        </tbody>\n      </table>\n    );\n    const componentAsString = ReactDOMServer.renderToString(<SummaryTable />);\n    const summaryContainer = document.createElement(\"div\");\n    summaryContainer.innerHTML = componentAsString;\n    document.body.appendChild(summaryContainer);\n    const summaryHeight = summaryContainer.getBoundingClientRect().height;\n    document.body.removeChild(summaryContainer);\n\n    arrangeData({\n      data: jsonData.report,\n      column: column,\n      beforeArrangeData: (itm) => {\n        const debit = parseFloat(\n          (itm.Debit ?? \"0.00\").toString().replace(/,/, \"\")\n        );\n        const credit = parseFloat(\n          (itm.Credit ?? \"0.00\").toString().replace(/,/, \"\")\n        );\n        if (!isNaN(debit)) {\n          itm.Debit = debit.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          });\n        }\n        if (!isNaN(credit)) {\n          itm.Credit = credit.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          });\n        }\n\n        return itm;\n      },\n      adjustMaxHeight: 150,\n      summaryHeight: summaryHeight,\n    }).then((newData) => {\n      setData(newData);\n      setLoading(false);\n    });\n  }\n\n  return (\n    <PrintPreview\n      column={column}\n      initialState={initialState}\n      Setting={(state, dispatch) => (\n        <Setting state={state} dispatch={dispatch} />\n      )}\n      onReportSubmit={onReportSubmit}\n      scaleDefaultValue={90}\n      drawTable={(data, state) => {\n        return data.map((pages: any, pageNumber: number) => {\n          return (\n            <div className=\"page out-page\" key={pageNumber}>\n              <div className=\"header\" style={{ height: \"50px\" }}></div>\n              <div className=\"content\">\n                <table>\n                  <thead>\n                    {state.title.split(\"\\n\").map((t: string, idx: number) => {\n                      return (\n                        <tr key={idx}>\n                          <th\n                            style={{\n                              fontSize: \"14px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            colSpan={column.length}\n                          >\n                            {t}\n                          </th>\n                        </tr>\n                      );\n                    })}\n                    <tr style={{ height: \"40px\" }}></tr>\n                    <tr>\n                      {column.map((itm: any, rowIdx: number) => {\n                        return (\n                          <th\n                            onDoubleClick={(e) =>\n                              copiedByHeaderOnDoubleClick(e, itm.datakey, data)\n                            }\n                            style={{\n                              width: itm.width,\n                              fontSize: \"10.5px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            key={rowIdx}\n                          >\n                            {itm.header}\n                          </th>\n                        );\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {pages.map((rowItem: any, rowIdx: number) => {\n                      if (\n                        rowItem.summ &&\n                        !rowItem.header &&\n                        !rowItem.footer &&\n                        !rowItem.signature\n                      ) {\n                        return (\n                          <Fragment key={rowIdx}>\n                            <tr>\n                              <td\n                                colSpan={3}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"500\",\n                                  textAlign: \"right\",\n                                }}\n                              ></td>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"500\",\n                                  textAlign: \"left\",\n                                }}\n                              >\n                                {rowItem.acct_name}\n                              </td>\n                              <td\n                                colSpan={1}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"500\",\n                                  textAlign: \"right\",\n                                }}\n                              >\n                                {rowItem.Debit}\n                              </td>\n                              <td\n                                colSpan={1}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"500\",\n                                  textAlign: \"right\",\n                                }}\n                              >\n                                {rowItem.Credit}\n                              </td>\n                            </tr>\n                          </Fragment>\n                        );\n                      }\n                      if (rowItem.summ && rowItem.header) {\n                        return (\n                          <Fragment key={rowIdx}>\n                            <tr>\n                              <td\n                                colSpan={3}\n                                style={{\n                                  fontSize: \"11.5px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"right\",\n                                }}\n                              ></td>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11.5px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"center\",\n                                }}\n                              >\n                                {rowItem.IDNo}\n                              </td>\n                              <td\n                                colSpan={1}\n                                style={{\n                                  fontSize: \"11.5px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"left\",\n                                }}\n                              >\n                                {rowItem.Debit}\n                              </td>\n                              <td\n                                colSpan={1}\n                                style={{\n                                  fontSize: \"11.5px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"left\",\n                                }}\n                              >\n                                {rowItem.Credit}\n                              </td>\n                            </tr>\n                          </Fragment>\n                        );\n                      }\n                      if (rowItem.summ && rowItem.footer) {\n                        return (\n                          <Fragment key={rowIdx}>\n                            <tr>\n                              <td\n                                colSpan={3}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"right\",\n                                }}\n                              ></td>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"right\",\n                                }}\n                              >\n                                {rowItem.ORNo}\n                              </td>\n                              <td\n                                colSpan={1}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"right\",\n                                  borderTop: \"1px solid black\",\n                                  borderBottom: \"2px solid black\",\n                                }}\n                              >\n                                {rowItem.Debit}\n                              </td>\n                              <td\n                                colSpan={1}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"right\",\n                                  borderTop: \"1px solid black\",\n                                  borderBottom: \"2px solid black\",\n                                }}\n                              >\n                                {rowItem.Credit}\n                              </td>\n                            </tr>\n                          </Fragment>\n                        );\n                      }\n                      if (rowItem.summ && rowItem.signature) {\n                        return (\n                          <Fragment key={rowIdx}>\n                            <tr style={{ height: \"40px\" }}></tr>\n                            <tr>\n                              <td\n                                colSpan={column.length}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"center\",\n                                }}\n                              >\n                                Prepared: ________________\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Checked:\n                                ________________\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Approved:\n                                ________________\n                              </td>\n                            </tr>\n                          </Fragment>\n                        );\n                      }\n\n                      if (rowItem.summary) {\n                        return (\n                          <Fragment key={rowIdx}>\n                            <tr style={{ height: \"15px\" }}></tr>\n                            <tr>\n                              <td\n                                colSpan={3}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bolder\",\n                                  textAlign: \"right\",\n                                }}\n                              >\n                                {rowItem.acct_name}\n                              </td>\n                            </tr>\n                            <tr style={{ height: \"15px\" }}></tr>\n                          </Fragment>\n                        );\n                      }\n\n                      if (rowItem.follows) {\n                        return (\n                          <Fragment key={rowIdx}>\n                            <tr style={{ height: \"10px\" }}></tr>\n                            <tr>\n                              <td\n                                colSpan={column.length}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"500\",\n                                  textAlign: \"center\",\n                                }}\n                              >\n                                {rowItem.cCheck_No}\n                              </td>\n                            </tr>\n                          </Fragment>\n                        );\n                      }\n                      return (\n                        <tr key={rowIdx}>\n                          {column.map((colItem: any, colIdx: number) => {\n                            return (\n                              <Fragment key={colIdx}>\n                                {(rowItem.total &&\n                                  colItem.datakey === \"DRTitle\") ||\n                                (rowItem.total &&\n                                  colItem.datakey === \"CRTitle\") ? (\n                                  <></>\n                                ) : (\n                                  <td\n                                    onClick={columnSelection}\n                                    className={`editable not-looking page-${pageNumber}  row-${rowIdx}_col-${colIdx}`}\n                                    style={{\n                                      fontSize: \"11px\",\n                                      fontWeight: rowItem.total\n                                        ? \"bold\"\n                                        : \"500\",\n                                      width: `${colItem.width} !important`,\n                                      textAlign:\n                                        colItem.type === \"number\"\n                                          ? \"right\"\n                                          : \"left\",\n                                      borderTop:\n                                        (rowItem.total &&\n                                          colItem.datakey === \"Debit\") ||\n                                        (rowItem.total &&\n                                          colItem.datakey === \"Credit\")\n                                          ? \"1px solid black\"\n                                          : \"\",\n                                      padding: \"0 5px\",\n                                    }}\n                                  >\n                                    {rowItem[colItem.datakey]}\n                                  </td>\n                                )}\n                              </Fragment>\n                            );\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n              <div\n                className=\"footer\"\n                style={{\n                  height: \"50px\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  {format(new Date(), \"dd/MM/yyyy\")}\n                </p>\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  Page {pageNumber + 1} of {data.length}\n                </p>\n              </div>\n            </div>\n          );\n        });\n      }}\n      pageHeight={\"8.5in\"}\n      pageWidth={\"13in\"}\n    />\n  );\n}\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\n// TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('span', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n  const {\n      children,\n      disabled = false,\n      id: idProp,\n      loading = false,\n      loadingIndicator: loadingIndicatorProp,\n      loadingPosition = 'center',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is shown and the button becomes disabled.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","ref","slotProps","size","sx","minWidth","fontSize","top","defaultArrangeDataCore","data","column","beforeArrangeData","adjustMaxHeight","_ref$fontSize","_ref$summaryHeight","summaryHeight","newData","trHeight","temp","maxHeight","document","querySelector","getBoundingClientRect","height","forEach","itm","idx","contentElment","tempTable","createElement","tempRow","insertRow","summaryReport","col","tempCell","insertCell","style","visibility","width","content","columnWidth","textContent","appendChild","getTableCellHeight","datakey","removeChild","push","length","arrangeData","_x","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","cb","_ref2$fontSize","wrap","_context","prev","next","undefined","abrupt","stop","apply","arguments","initialState","dateFormat","date","Date","sub_acct","title","reducer","state","action","type","_defineProperty","field","header","setupTitle","department","concat","dateString","toLocaleDateString","year","month","day","toString","DateToStringFormat","Setting","_queryFn","dispatch","dateFromRef","useRef","_useContext","useContext","AuthContext","myAxios","user","_useQuery","useQuery","queryKey","queryFn","get","headers","Authorization","accessToken","sent","dataSubAccounts","isLoadingSubAccounts","isLoading","handleInputChange","e","_e$target","target","_jsxs","padding","TextField","rows","multiline","InputProps","flex","Box","theme","display","gridTemplateColumns","gap","margin","breakpoints","down","FormControl","variant","background","zIndex","InputLabel","id","Select","labelId","MenuItem","LoadingButton","loading","sub_account","map","Acronym","InputLabelProps","views","code","timeout","setTimeout","_dateFromRef$current","_dateFromRef$current$","current","click","clearTimeout","DepositedCollections","_onReportSubmit","_useContext2","PrintPreview","_Setting","onReportSubmit","_x2","_x3","_callee2","setData","setLoading","response","jsonData","SummaryTable","componentAsString","summaryContainer","_context2","post","summary","rowItem","rowIdx","summ","footer","signature","Fragment","colSpan","fontWeight","textAlign","IDNo","Debit","Credit","ORNo","borderTop","borderBottom","acct_name","ReactDOMServer","innerHTML","body","report","_itm$Debit","_itm$Credit","debit","parseFloat","replace","credit","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","then","scaleDefaultValue","drawTable","pages","pageNumber","className","split","t","onDoubleClick","copiedByHeaderOnDoubleClick","follows","cCheck_No","colItem","colIdx","total","_Fragment","onClick","columnSelection","justifyContent","format","pageHeight","pageWidth","getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","root","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","color","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","_ref7","position","left","transform","vars","palette","disabled","right","React","inProps","useThemeProps","_props$disabled","idProp","_props$loading","loadingIndicatorProp","_props$loadingPositio","_props$variant","other","_objectWithoutPropertiesLoose","useId","CircularProgress","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","loadingButtonLoadingIndicator","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}