{"version":3,"file":"static/js/6813.d85cb15f.chunk.js","mappings":"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","sources":["feautures/Admin/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState, forwardRef, useRef } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { myAxios } from \"../../lib/axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../components/AuthContext\";\nimport \"../../style/dashboard.css\";\nimport _ from \"lodash\";\n\nfunction formatData(data: any) {\n  return data.map((itm: any) => {\n    itm.PrevBalance = parseFloat(itm.PrevBalance.toString().replace(/,/g, \"\"));\n    itm.CurrCredit = parseFloat(itm.CurrCredit.toString().replace(/,/g, \"\"));\n    itm.CurrDebit = parseFloat(itm.CurrDebit.toString().replace(/,/g, \"\"));\n    itm.TotalBalance = parseFloat(\n      itm.TotalBalance.toString().replace(/,/g, \"\")\n    );\n    return itm;\n  });\n}\n\nfunction formatNumber(num: any) {\n  const formattedPrice = new Intl.NumberFormat(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(num);\n\n  return formattedPrice;\n}\nconst GroupedReport = forwardRef(({ data }: any, ref: any) => {\n  data = formatData(data);\n  // Group by \"H\"\n  const groupedByH = _.groupBy(data, \"H\");\n\n  function getSum(data: any, property: string) {\n    const totalPrice = data.reduce(\n      (total: any, product: any) => total + product[property],\n      0\n    );\n\n    return totalPrice;\n  }\n\n  return (\n    <div ref={ref}>\n      {Object.keys(groupedByH).map((groupHKey) => {\n        const groupHT1 = _.groupBy(groupedByH[groupHKey], \"HT1\"); // Group by \"HT1\" inside each \"H\" group\n        const groupTotalH1 = Object.values(groupHT1).flat();\n\n        return (\n          <div key={groupHKey} className={`H`}>\n            <p\n              style={{ margin: 0, padding: \"10px\", color: \"black\" }}\n              className=\"p\"\n            >\n              {groupHKey}\n            </p>\n            {Object.keys(groupHT1).map((groupHT1Key) => {\n              const groupHT2 = _.groupBy(groupHT1[groupHT1Key], \"HT2\");\n              const groupTotal = Object.values(groupHT2).flat();\n              return (\n                <div\n                  key={groupHT1Key}\n                  style={{ marginLeft: \"20px\" }}\n                  className={`HT1`}\n                >\n                  <p\n                    style={{ margin: 0, padding: \"10px\", color: \"black\" }}\n                    className=\"p\"\n                  >\n                    {groupHT1Key}\n                  </p>\n                  {Object.keys(groupHT2).map((groupHT2Key) => {\n                    return (\n                      <div\n                        key={groupHT2Key}\n                        style={{ marginLeft: \"40px\" }}\n                        className={`HT2`}\n                      >\n                        <p\n                          style={{ margin: 0, padding: \"10px\", color: \"black\" }}\n                          className=\"p\"\n                        >\n                          {groupHT2Key}\n                        </p>\n                        {groupHT2[groupHT2Key].map((item, index) => (\n                          <div\n                            key={index}\n                            style={{ marginLeft: \"60px\", display: \"flex\" }}\n                            className=\"p\"\n                          >\n                            <div style={{ width: \"400px\" }}>{item.HT3}</div>\n                            <div style={{ width: \"150px\", textAlign: \"right\" }}>\n                              {formatNumber(item.PrevBalance)}\n                            </div>\n                            <div style={{ width: \"150px\", textAlign: \"right\" }}>\n                              {formatNumber(item.CurrDebit)}\n                            </div>\n                            <div style={{ width: \"150px\", textAlign: \"right\" }}>\n                              {formatNumber(item.CurrCredit)}\n                            </div>\n                            <div style={{ width: \"150px\", textAlign: \"right\" }}>\n                              {formatNumber(item.TotalBalance)}\n                            </div>\n                          </div>\n                        ))}\n                        <div\n                          style={{\n                            marginLeft: \"60px\",\n                            display: \"flex\",\n                          }}\n                          className=\"p\"\n                        >\n                          <div\n                            style={{ width: \"400px\", textAlign: \"left\" }}\n                          ></div>\n                          <div\n                            style={{\n                              width: \"150px\",\n                              borderTop: \"1px solid #94a3b8\",\n                              textAlign: \"right\",\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            {formatNumber(\n                              getSum(groupHT2[groupHT2Key], \"PrevBalance\")\n                            )}\n                          </div>\n                          <div\n                            style={{\n                              width: \"150px\",\n                              textAlign: \"right\",\n                              fontWeight: \"bold\",\n                              borderTop: \"1px solid #94a3b8\",\n                            }}\n                          >\n                            {formatNumber(\n                              getSum(groupHT2[groupHT2Key], \"CurrDebit\")\n                            )}\n                          </div>\n                          <div\n                            style={{\n                              width: \"150px\",\n                              textAlign: \"right\",\n                              fontWeight: \"bold\",\n                              borderTop: \"1px solid #94a3b8\",\n                            }}\n                          >\n                            {formatNumber(\n                              getSum(groupHT2[groupHT2Key], \"CurrCredit\")\n                            )}\n                          </div>\n                          <div\n                            style={{\n                              width: \"150px\",\n                              textAlign: \"right\",\n                              fontWeight: \"bold\",\n                              borderTop: \"1px solid #94a3b8\",\n                            }}\n                          >\n                            {formatNumber(\n                              getSum(groupHT2[groupHT2Key], \"TotalBalance\")\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                  <div\n                    style={{\n                      marginLeft: \"20px\",\n                      display: \"flex\",\n                      padding: \"10px 0px\",\n                    }}\n                    className=\"p\"\n                  >\n                    <div style={{ width: \"480px\", textAlign: \"left\" }}>\n                      <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n                        TOTAL {groupHT1Key}\n                      </p>\n                    </div>\n                    <div\n                      style={{\n                        width: \"150px\",\n                        textAlign: \"right\",\n                        fontWeight: \"bold\",\n                        borderBottom: \"1px solid black\",\n                      }}\n                    >\n                      {formatNumber(getSum(groupTotal, \"PrevBalance\"))}\n                    </div>\n                    <div\n                      style={{\n                        width: \"150px\",\n                        textAlign: \"right\",\n                        fontWeight: \"bold\",\n                        borderBottom: \"1px solid black\",\n                      }}\n                    >\n                      {formatNumber(getSum(groupTotal, \"CurrDebit\"))}\n                    </div>\n                    <div\n                      style={{\n                        width: \"150px\",\n                        textAlign: \"right\",\n                        fontWeight: \"bold\",\n                        borderBottom: \"1px solid black\",\n                      }}\n                    >\n                      {formatNumber(getSum(groupTotal, \"CurrCredit\"))}\n                    </div>\n                    <div\n                      style={{\n                        width: \"150px\",\n                        textAlign: \"right\",\n                        fontWeight: \"bold\",\n                        borderBottom: \"1px solid black\",\n                      }}\n                    >\n                      {formatNumber(getSum(groupTotal, \"TotalBalance\"))}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            <div\n              style={{\n                display: \"flex\",\n                padding: \"10px 0px\",\n              }}\n              className=\"p\"\n            >\n              <div style={{ width: \"520px\", textAlign: \"left\" }}>\n                <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n                  TOTAL{\" \"}\n                  {groupHKey !== \"ASSETS\"\n                    ? groupHKey + \"AND CAPITAL\"\n                    : groupHKey}\n                </p>\n              </div>\n              <div\n                style={{\n                  width: \"150px\",\n                  textAlign: \"right\",\n                  fontWeight: \"bold\",\n                  borderBottom: \"double black 5px\",\n                }}\n              >\n                {formatNumber(getSum(groupTotalH1, \"PrevBalance\"))}\n              </div>\n              <div\n                style={{\n                  width: \"150px\",\n                  textAlign: \"right\",\n                  fontWeight: \"bold\",\n                  borderBottom: \"double black 5px\",\n                }}\n              >\n                {formatNumber(getSum(groupTotalH1, \"CurrDebit\"))}\n              </div>\n              <div\n                style={{\n                  width: \"150px\",\n                  textAlign: \"right\",\n                  fontWeight: \"bold\",\n                  borderBottom: \"double black 5px\",\n                }}\n              >\n                {formatNumber(getSum(groupTotalH1, \"CurrCredit\"))}\n              </div>\n              <div\n                style={{\n                  width: \"150px\",\n                  textAlign: \"right\",\n                  fontWeight: \"bold\",\n                  borderBottom: \"double black 5px\",\n                }}\n              >\n                {formatNumber(getSum(groupTotalH1, \"TotalBalance\"))}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n});\n\nfunction convertElementToURL(page: Element) {\n  const elements = page as Element;\n  console.log(elements.getBoundingClientRect());\n  const elementString = new XMLSerializer().serializeToString(elements);\n  const height = elements.getBoundingClientRect().height;\n  const width = elements.getBoundingClientRect().width;\n  const viewBox = `0 0 ${width} ${height}`;\n  let scale = 100;\n\n  const dataURL =\n    \"data:image/svg+xml,\" +\n    encodeURIComponent(\n      `<svg xmlns=\"http://www.w3.org/2000/svg\"  width=\"${scale}%\" height=\"${scale}%\">\n          <foreignObject viewBox=\"${viewBox}\" width=\"100%\" height=\"100%\">\n              ${elementString}\n          </foreignObject>\n          <style>\n              .page{\n                  page-break-after: always;\n                  display: flex;\n                  flex-direction: column;\n                  height: 100vh;\n                  width: 100vw;\n              }\n              img{\n                  width: 100%;\n                  height: 100%;\n              }\n          </style> \n        </svg>`\n    );\n  return dataURL;\n}\n\nexport default function Dashboard() {\n  const report = useRef<HTMLDivElement>(null);\n  const { user } = useContext(AuthContext);\n  const [data, setData] = useState([]);\n  const handleClick = async () => {\n    const state = {\n      dateFormat: \"Monthly\",\n      format: 0,\n      date: \"2024-09-05T05:56:21.669Z\",\n      sub_acct: \"All\",\n      nominalAccount: 0,\n    };\n    const response = await myAxios.post(\n      \"/reports/accounting//balance-sheet-long-report\",\n      state,\n      {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }\n    );\n    const jsonData = await response.data;\n    setData(jsonData.data);\n  };\n  const handleLogic = () => {\n    const loopThroughChildren = (elements: Array<HTMLElement>) => {\n      const F_EL = elements[0];\n      const L_EL = elements[elements.length - 1];\n\n      let _EH = 0;\n      const _EL_C = [];\n      elements.forEach((child: HTMLElement, index) => {\n        const _H = Math.round(child.getBoundingClientRect().height);\n        _EH += _H;\n        if (_EH + _H > 900) {\n          _EH = 0;\n          _EL_C.push(child);\n          _EL_C.push(elements[index + 1]);\n          console.log(`============ ${index} - ${_EH} ================`, child);\n        }\n      });\n\n      _EL_C.unshift(F_EL);\n      _EL_C.push(L_EL);\n\n      const formatArrayToObjects = (arr: any) => {\n        let formattedArray = [];\n\n        // Loop through the array in steps of 2\n        for (let i = 0; i < arr.length; i += 2) {\n          formattedArray.push({\n            start: arr[i],\n            end: arr[i + 1],\n          });\n        }\n\n        return formattedArray;\n      };\n      const formatted = formatArrayToObjects(_EL_C);\n      const pageCuts = document.getElementById(\"cut-pages\");\n      const div = document.createElement(\"div\");\n      div.className = \"main\";\n      formatted.forEach((itm) => {\n        const page = document.createElement(\"div\");\n        page.className = \"page\";\n        page.style.height = \"11in\";\n        page.style.width = \"auto\";\n        page.style.fontSize = \"8px !important\";\n        page.style.padding = \"15px\";\n        const range = document.createRange();\n\n        range.setStartBefore(itm.start);\n        range.setEndAfter(itm.end);\n        const cutContent = range.cloneContents();\n        range.deleteContents();\n        page.appendChild(cutContent);\n        div.appendChild(page);\n      });\n      pageCuts?.appendChild(div);\n    };\n    const dd = report.current?.querySelectorAll(\".p\") as any;\n    loopThroughChildren(dd);\n  };\n\n  const captureElement = async (page: Element) => {\n    const imgData = convertElementToURL(page);\n    const tableIamge = '<img src=\"' + imgData + '\" />';\n    return `<div class=\"page\">${tableIamge}</div>`;\n  };\n\n  async function getPaperToPrint() {\n    let printString = \"\";\n    const pages: any = document.querySelectorAll(\"#cut-pages .page\");\n\n    for (const page of pages) {\n      page.style.fontSize = \"8px !important\";\n      printString += await captureElement(page);\n    }\n    return printString;\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}>Report</button>\n      <button\n        onClick={async () => {\n          await getPaperToPrint().then((printString) => {\n            const iframe = document.createElement(\n              \"iframe\"\n            ) as HTMLIFrameElement;\n            iframe.style.display = \"none\";\n            document.body.appendChild(iframe);\n            const iframeDocument =\n              iframe.contentDocument || iframe.contentWindow?.document;\n            const htmlContent = `\n                          <!DOCTYPE html>\n                          <html lang=\"en\">\n                          <head>\n                              <meta charset=\"UTF-8\">\n                              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                              <title>Printed HTML Content</title>\n                              <style>\n                              @import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n                              @media print {\n                                @page{\n                                    margin-top: 0mm;\n                                    margin-bottom: 0mm;\n                                    margin-left: 0mm;\n                                    margin-right: 0mm;\n                                }\n                                body {\n                                      margin: 0;\n                                      padding: 0;\n                                  }\n                                .page{\n                                    page-break-after: always;\n                                    height: 100vh;\n                                    width: 100vw;\n                                }\n                               \n                                 img{\n                                    width: 95%;\n                                    height: 100%;\n                                }\n                               \n                              }\n          \n                              </style>\n                          </head>\n                          <body>\n                                ${printString}\n                          </body>\n                          </html>\n                      `;\n            iframeDocument?.open();\n            iframeDocument?.write(htmlContent);\n            iframeDocument?.close();\n            setTimeout(function () {\n              iframe.contentWindow?.print();\n              iframe.parentNode?.removeChild(iframe);\n            }, 1000);\n          });\n        }}\n      >\n        Report Element\n      </button>\n      <button onClick={handleLogic}>Logic</button>\n      <GroupedReport data={data} ref={report} />\n      <div id=\"cut-pages\"></div>\n    </div>\n  );\n}\n\n// export default function Dashboard() {\n//   const { user } = useContext(AuthContext);\n//   const { data: renewalData, isLoading: isLoadingRenewal } = useQuery({\n//     queryKey: \"renewal-by-month\",\n//     queryFn: async () =>\n//       await myAxios.get(\"/get-renewal-this-month\", {\n//         headers: {\n//           Authorization: `Bearer ${user?.accessToken}`,\n//         },\n//       }),\n//   });\n//   const { data: claimsData, isLoading: isLoadingClaims } = useQuery({\n//     queryKey: \"claims-notice\",\n//     queryFn: async () =>\n//       await myAxios.get(\"/get-claims-notice\", {\n//         headers: {\n//           Authorization: `Bearer ${user?.accessToken}`,\n//         },\n//       }),\n//   });\n\n//   return (\n//     <div id=\"main\">\n\n//       {(user?.userAccess === \"PRODUCTION\" ||\n//         user?.userAccess === \"ACCOUNTING\" ||\n//         user?.userAccess === \"PRODUCTION_ACCOUNTING\" ||\n//         user?.userAccess === \"ADMIN\") && (\n//         <div className=\"section-content\">\n//           <h1 className=\"first\">RENEWAL</h1>\n//           <div id=\"content\">\n//             {isLoadingRenewal ? (\n//               <div>Loading...</div>\n//             ) : (\n//               <table id=\"table\">\n//                 <tbody>\n//                   {renewalData?.data.renewal?.length <= 0 && (\n//                     <tr className=\"header first\">\n//                       <td>Name</td>\n//                       <td>POLICY NO</td>\n//                       <td>SUM INSURED</td>\n//                       <td>DATE TO</td>\n//                       <td>CHASSIS</td>\n//                       <td>UNIT</td>\n//                     </tr>\n//                   )}\n//                   {renewalData?.data.renewal?.map((itm: any, idx: number) => {\n//                     return (\n//                       <React.Fragment key={idx}>\n//                         {itm.isHeader ? (\n//                           <>\n//                             <tr className=\"heading first\">\n//                               <td colSpan={6}>{itm.header}</td>\n//                             </tr>\n//                             <tr className=\"header first\">\n//                               <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n//                                 Name\n//                               </td>\n//                               <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n//                                 POLICY NO\n//                               </td>\n//                               <td>SUM INSURED</td>\n//                               <td>DATE TO</td>\n//                               {itm.isVPolicy === \"1\" && (\n//                                 <>\n//                                   <td>CHASSIS</td>\n//                                   <td>UNIT</td>\n//                                 </>\n//                               )}\n//                             </tr>\n//                           </>\n//                         ) : (\n//                           <tr>\n//                             <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n//                               {itm.AssuredName}\n//                             </td>\n//                             <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n//                               {itm.PolicyNo}\n//                             </td>\n//                             <td>{itm.InsuredValue}</td>\n//                             <td>{itm.DateExpired}</td>\n//                             {itm.isVPolicy === \"1\" && (\n//                               <>\n//                                 <td>{itm.ChassisNo}</td>\n//                                 <td>{itm.unit}</td>\n//                               </>\n//                             )}\n//                           </tr>\n//                         )}\n//                       </React.Fragment>\n//                     );\n//                   })}\n//                 </tbody>\n//               </table>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//       {(user?.userAccess === \"CLAIMS\" || user?.userAccess === \"ADMIN\") && (\n//         <div className=\"section-content\">\n//           <h1 className=\"second\">CLAIMS</h1>\n//           <div id=\"content\">\n//             {isLoadingClaims ? (\n//               <div>Loading...</div>\n//             ) : (\n//               <table id=\"table\">\n//                 <tbody>\n//                   <tr className=\"header second\">\n//                     <td>Claims ID.</td>\n//                     <td>Name</td>\n//                     <td>Policy No.</td>\n//                     <td>Date Accident</td>\n//                     <td>Date Reported</td>\n//                     <td>Claim Type</td>\n//                     <td>Status</td>\n//                   </tr>\n//                   {claimsData?.data.claims?.map((itm: any, idx: number) => {\n//                     return (\n//                       <tr key={idx}>\n//                         <td>{itm.claims_id}</td>\n//                         <td>{itm.AssuredName}</td>\n//                         <td>{itm.PolicyNo}</td>\n//                         <td>{itm.dateAccident}</td>\n//                         <td>{itm.dateReported}</td>\n//                         <td>{itm.claim_type}</td>\n//                         <td>{itm.status}</td>\n//                       </tr>\n//                     );\n//                   })}\n//                 </tbody>\n//               </table>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n"],"names":["formatNumber","num","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","GroupedReport","forwardRef","_ref","ref","data","map","itm","PrevBalance","parseFloat","toString","replace","CurrCredit","CurrDebit","TotalBalance","formatData","groupedByH","_","getSum","property","reduce","total","product","_jsx","children","Object","keys","groupHKey","groupHT1","groupTotalH1","values","flat","_jsxs","className","style","margin","padding","color","groupHT1Key","groupHT2","groupTotal","marginLeft","groupHT2Key","item","index","display","width","HT3","textAlign","borderTop","fontWeight","borderBottom","convertElementToURL","page","elements","console","log","getBoundingClientRect","elementString","XMLSerializer","serializeToString","height","viewBox","concat","encodeURIComponent","Dashboard","_ref2","_ref3","_getPaperToPrint","report","useRef","user","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","setData","captureElement","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","imgData","tableIamge","wrap","_context2","prev","next","abrupt","stop","apply","arguments","getPaperToPrint","_callee3","printString","pages","_iterator","_step","_context3","document","querySelectorAll","_createForOfIteratorHelper","s","n","done","value","fontSize","t0","sent","t1","e","f","finish","onClick","_callee","state","response","jsonData","_context","dateFormat","date","sub_acct","nominalAccount","myAxios","post","headers","Authorization","accessToken","_callee4","_context4","then","_iframe$contentWindow","iframe","createElement","body","appendChild","iframeDocument","contentDocument","contentWindow","htmlContent","open","write","close","setTimeout","_iframe$contentWindow2","_iframe$parentNode","print","parentNode","removeChild","_report$current","F_EL","L_EL","length","_EH","_EL_C","forEach","child","_H","Math","round","push","unshift","formatted","arr","formattedArray","i","start","end","formatArrayToObjects","pageCuts","getElementById","div","range","createRange","setStartBefore","setEndAfter","cutContent","cloneContents","deleteContents","loopThroughChildren","current","id"],"sourceRoot":""}