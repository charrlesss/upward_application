{"version":3,"file":"static/js/2810.b62884c4.chunk.js","mappings":"mKAyrCe,SAASA,IACtB,OAAOC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eACd,C","sources":["feautures/Admin/Template/renewal-template.tsx"],"sourcesContent":["// import React, {\n//   useState,\n//   CSSProperties,\n//   useContext,\n//   useReducer,\n//   useRef,\n// } from \"react\";\n// import jsPDF from \"jspdf\";\n// import {\n//   IconButton,\n//   Fab,\n//   TextField,\n//   Select,\n//   InputLabel,\n//   MenuItem,\n//   FormControl,\n//   Button,\n// } from \"@mui/material\";\n// import RoomPreferencesIcon from \"@mui/icons-material/RoomPreferences\";\n// import CloseIcon from \"@mui/icons-material/Close\";\n// import ReplyAllIcon from \"@mui/icons-material/ReplyAll\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useMutation } from \"react-query\";\n// import { AuthContext } from \"../../../components/AuthContext\";\n// // import DataGridTable from \"../../../components/DataGridTable\";\n// // import { GridRowSelectionModel } from \"@mui/x-data-grid\";\n// // import Swal from \"sweetalert2\";\n// import CustomDatePicker from \"../../../components/DatePicker\";\n// import { NumericFormatCustom } from \"../../../components/NumberFormat\";\n\n// export const columns = [\n//   { field: \"PolicyNo\", headerName: \"PolicyNo\", width: 150 },\n//   { field: \"Shortname\", headerName: \"Shortname\", flex: 1 },\n//   { field: \"PolicyType\", headerName: \"PolicyType\", width: 100 },\n// ];\n\n// const initialState = {\n//   injuryQuatationPremium: \"100,000.00\",\n//   damageQuatationPremium: \"100,000.00\",\n//   accidentQuatationPremiumInsured: \"100000\",\n//   accidentQuatationPremiumPremium: \"375\",\n//   passenger: \"10000\",\n//   vehicle: \"private\",\n//   datePrint: new Date(),\n// };\n\n// const privatePremiumsInjury = [\n//   {\n//     limit: \"50,000.00\",\n//     motorcycle: \"75.00\",\n//     heavy: \"345.00\",\n//     private: \"195.00\",\n//   },\n//   {\n//     limit: \"75,000.00\",\n//     motorcycle: \"90.00\",\n//     heavy: \"405.00\",\n//     private: \"225.00\",\n//   },\n//   {\n//     limit: \"100,000.00\",\n//     motorcycle: \"105.00\",\n//     heavy: \"465.00\",\n//     private: \"270.00\",\n//   },\n//   {\n//     limit: \"150,000.00\",\n//     motorcycle: \"120.00\",\n//     heavy: \"555.00\",\n//     private: \"345.00\",\n//   },\n//   {\n//     limit: \"200,000.00\",\n//     motorcycle: \"135.00\",\n//     heavy: \"660.00\",\n//     private: \"420.00\",\n//   },\n//   {\n//     limit: \"250,000.00\",\n//     motorcycle: \"150.00\",\n//     heavy: \"750.00\",\n//     private: \"510.00\",\n//   },\n//   { limit: \"300,000.00\", motorcycle: \"\", heavy: \"855.00\", private: \"585.00\" },\n//   { limit: \"400,000.00\", motorcycle: \"\", heavy: \"975.00\", private: \"675.00\" },\n//   { limit: \"500,000.00\", motorcycle: \"\", heavy: \"1,095.00\", private: \"780.00\" },\n//   { limit: \"750,000.00\", motorcycle: \"\", heavy: \"1,230.00\", private: \"915.00\" },\n//   {\n//     limit: \"1,000,000.00\",\n//     motorcycle: \"\",\n//     heavy: \"1,365.00\",\n//     private: \"1,050.00\",\n//   },\n// ];\n\n// const premiumsDamage = [\n//   {\n//     limit: \"50,000.00\",\n//     private: \"975.00\",\n//     heavy: \"1,200.00\",\n//     motorcycle: \"450.00\",\n//   },\n//   {\n//     limit: \"75,000.00\",\n//     private: \"1,035.00\",\n//     heavy: \"1,245.00\",\n//     motorcycle: \"510.00\",\n//   },\n//   {\n//     limit: \"100,000.00\",\n//     private: \"1,095.00\",\n//     heavy: \"1,290.00\",\n//     motorcycle: \"555.00\",\n//   },\n//   {\n//     limit: \"150,000.00\",\n//     private: \"1,170.00\",\n//     heavy: \"1,335.00\",\n//     motorcycle: \"645.00\",\n//   },\n//   {\n//     limit: \"200,000.00\",\n//     private: \"1,245.00\",\n//     heavy: \"1,395.00\",\n//     motorcycle: \"720.00\",\n//   },\n//   {\n//     limit: \"250,000.00\",\n//     private: \"1,320.00\",\n//     heavy: \"1,455.00\",\n//     motorcycle: \"795.00\",\n//   },\n//   {\n//     limit: \"300,000.00\",\n//     private: \"1,395.00\",\n//     heavy: \"1,515.00\",\n//     motorcycle: \"\",\n//   },\n//   {\n//     limit: \"400,000.00\",\n//     private: \"1,515.00\",\n//     heavy: \"1,590.00\",\n//     motorcycle: \"\",\n//   },\n//   {\n//     limit: \"500,000.00\",\n//     private: \"1,635.00\",\n//     heavy: \"1,680.00\",\n//     motorcycle: \"\",\n//   },\n//   {\n//     limit: \"750,000.00\",\n//     private: \"1,920.00\",\n//     heavy: \"2,205.00\",\n//     motorcycle: \"\",\n//   },\n//   {\n//     limit: \"1,000,000.00\",\n//     private: \"2,235.00\",\n//     heavy: \"2,730.00\",\n//     motorcycle: \"\",\n//   },\n// ];\n\n// export const reducer = (state: any, action: any) => {\n//   switch (action.type) {\n//     case \"UPDATE_FIELD\":\n//       return {\n//         ...state,\n//         [action.field]: action.value,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// export default function RenewalTemplate() {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const { myAxios, user } = useContext(AuthContext);\n//   const navigate = useNavigate();\n//   // const [rows, setRows] = useState<GridRowSelectionModel>([]);\n//   const [showSidebar, setShowSidebar] = useState(true);\n//   const [search, setSearch] = useState(\"\");\n//   const [src, setSrc] = useState<any>(\n//     `${process.env.REACT_APP_IMAGE_URL}compdf.pdf`\n//   );\n//   const datePickerRef = useRef<HTMLElement>(null);\n//   const [selectRow, setSelectRow] = useState([]);\n\n//   const { isLoading } = useMutation({\n//     mutationKey: \"renewal-notice-selected-search\",\n//     mutationFn: async (variable: any) =>\n//       await myAxios.post(\"/template/renewal-notice-selected-search\", variable, {\n//         headers: {\n//           Authorization: `Bearer ${user?.accessToken}`,\n//         },\n//       }),\n//     onSuccess(data, variables, context) {\n//       const response = data as any;\n//       if (response?.data.report.length <= 0) {\n//         return;\n//       }\n//       setSelectRow(response?.data.report);\n//       comComputation(response?.data.report[0]);\n//     },\n//   });\n\n//   // const { isLoading: isLoadingCLient } = useQuery({\n//   //   queryKey: \"clients-table\",\n//   //   queryFn: async () => await fetchClient(search),\n//   //   onSuccess: (data) => {\n//   //     const response = data as any;\n//   //     console.log(data);\n//   //     setRows(response.data.getClients);\n//   //   },\n//   // });\n\n//   async function fetchClient(search: string) {\n//     return await myAxios.get(`/template/renewal-notice?search=${search}`, {\n//       headers: {\n//         Authorization: `Bearer ${user?.accessToken}`,\n//       },\n//     });\n//   }\n\n//   function comComputation(selectedClient: any) {\n//     const {\n//       tl_prev_insured,\n//       acn_prev_insured,\n//       injury_prev_insured,\n//       damage_prev_insured,\n//       accident_prev_insured,\n//       tl_prev_premium,\n//       acn_prev_premium,\n//       injury_prev_premium,\n//       damage_prev_premium,\n//       accident_prev_premium,\n//       Shortname,\n//       address,\n//       PolicyNo,\n//       PlateNo,\n//       ChassisNo,\n//       MotorNo,\n//       DateTo,\n//       unitInsured,\n//       Mortgagee,\n//       SecIIPercent,\n//       Remarks,\n//     } = selectedClient;\n\n//     let tlPrevInsured = parseFloat(tl_prev_insured.replace(/,/g, \"\"));\n//     const quatationPremiumComputationPercentage =\n//       parseFloat(SecIIPercent) / 100;\n//     const injury = privatePremiumsInjury.filter(\n//       (item) => item.limit.trim() === state.injuryQuatationPremium.trim()\n//     );\n//     const damage = premiumsDamage.filter(\n//       (item) => item.limit.trim() === state.damageQuatationPremium.trim()\n//     );\n\n//     let tlQuatationInsured = tlPrevInsured - tlPrevInsured * 0.1;\n//     if (tlQuatationInsured < 200000) {\n//       tlQuatationInsured = 200000;\n//     }\n\n//     const acnQuatationInsured = tlQuatationInsured;\n//     const injuryQuatationInsured = parseFloat(\n//       injury[0].limit.replace(/,/g, \"\")\n//     );\n//     const damageQuatationInsured = parseFloat(\n//       damage[0].limit.replace(/,/g, \"\")\n//     );\n//     const accidentQuatationInsured = state.accidentQuatationPremiumInsured;\n\n//     const tlQuatationPremium =\n//       tlQuatationInsured * quatationPremiumComputationPercentage;\n//     const acnQuatationPremium = tlQuatationInsured * 0.005;\n//     const injuryQuatationPremium = parseFloat(\n//       injury[0][state.vehicle as \"motorcycle\" | \"heavy\" | \"private\"].replace(\n//         /,/g,\n//         \"\"\n//       )\n//     );\n\n//     const damageQuatationPremium = parseFloat(\n//       damage[0][state.vehicle as \"motorcycle\" | \"heavy\" | \"private\"].replace(\n//         /,/g,\n//         \"\"\n//       )\n//     );\n\n//     const accidentQuatationPremium = state.accidentQuatationPremiumPremium;\n//     const tableComputation = [\n//       {\n//         prevInsured: tl_prev_insured,\n//         prevPremium: tl_prev_premium,\n//         quatationInsured: tlQuatationInsured,\n//         quatationPremium: tlQuatationPremium,\n//       },\n//       {\n//         prevInsured: acn_prev_insured,\n//         prevPremium: acn_prev_premium,\n//         quatationInsured: acnQuatationInsured,\n//         quatationPremium:\n//           parseFloat(acn_prev_premium.toString()) > 0 ? acnQuatationPremium : 0,\n//       },\n//       {\n//         prevInsured: injury_prev_insured,\n//         prevPremium: injury_prev_premium,\n//         quatationInsured: injuryQuatationInsured,\n//         quatationPremium: injuryQuatationPremium,\n//       },\n//       {\n//         prevInsured: damage_prev_insured,\n//         prevPremium: damage_prev_premium,\n//         quatationInsured: damageQuatationInsured,\n//         quatationPremium: damageQuatationPremium,\n//       },\n//       {\n//         prevInsured: accident_prev_insured,\n//         prevPremium: accident_prev_premium,\n//         quatationInsured: accidentQuatationInsured,\n//         quatationPremium: accidentQuatationPremium,\n//       },\n//     ];\n//     const previosSubAccount = tableComputation.reduce((a, b) => {\n//       return a + parseFloat(b.prevPremium.toString().replace(/,/g, \"\"));\n//     }, 0);\n//     const previosDocStamp = previosSubAccount * 0.125;\n//     const previosEvat = previosSubAccount * 0.12;\n//     const previosLGT = previosSubAccount * 0.0075;\n//     const totalPrev =\n//       previosSubAccount + previosDocStamp + previosEvat + previosLGT;\n\n//     const quatationSubAccount = tableComputation.reduce((a, b) => {\n//       return a + parseFloat(b.quatationPremium.toString().replace(/,/g, \"\"));\n//     }, 0);\n//     const quatationDocStamp = quatationSubAccount * 0.125;\n//     const quatationEvat = quatationSubAccount * 0.12;\n//     const quatationLGT = quatationSubAccount * 0.0075;\n//     const totalQuatation =\n//       quatationSubAccount + quatationDocStamp + quatationEvat + quatationLGT;\n//     const tableTotalsComputation = [\n//       {\n//         previos: formatTextNumber(previosSubAccount.toFixed(2)),\n//         quatation: formatTextNumber(quatationSubAccount.toFixed(2)),\n//       },\n//       {\n//         previos: formatTextNumber(previosDocStamp.toFixed(2)),\n//         quatation: formatTextNumber(quatationDocStamp.toFixed(2)),\n//       },\n//       {\n//         previos: formatTextNumber(previosEvat.toFixed(2)),\n//         quatation: formatTextNumber(quatationEvat.toFixed(2)),\n//       },\n//       {\n//         previos: formatTextNumber(previosLGT.toString()),\n//         quatation: formatTextNumber(quatationLGT.toString()),\n//       },\n//       {\n//         previos: formatTextNumber(totalPrev.toFixed(2)),\n//         quatation: formatTextNumber(totalQuatation.toFixed(2)),\n//       },\n//     ];\n\n//     setSrc(\n//       generateCOMReport(tableComputation, tableTotalsComputation, {\n//         Shortname,\n//         address,\n//         PolicyNo,\n//         PlateNo,\n//         ChassisNo,\n//         MotorNo,\n//         DateTo,\n//         unitInsured,\n//         Mortgagee,\n//         Remarks,\n//       })\n//     );\n//   }\n\n//   function generateCOMReport(\n//     tableComputation: Array<any> = [],\n//     tableTotalsComputation: Array<any> = [],\n//     policy: any\n//   ) {\n//     const doc = new jsPDF({ orientation: \"p\", format: \"Letter\" });\n\n//     var img = new Image();\n//     img.src = `${process.env.REACT_APP_IMAGE_URL}renewalnotice.jpg`;\n//     doc.addImage(img, \"png\", 15, 0, 130, 43);\n\n//     doc.setFontSize(17);\n//     doc.text(`RENEWAL NOTICE`, 80, 42);\n\n//     doc.setFontSize(9);\n//     doc.text(\n//       `${formatDate(new Date(state.datePrint), {\n//         year: \"numeric\",\n//         month: \"long\",\n//         day: \"numeric\",\n//       })}`,\n//       170,\n//       47\n//     );\n//     if (policy) {\n//       doc.setFontSize(9);\n//       doc.text(\n//         `${policy.Shortname}.\\n${policy.address}\n//         `,\n//         20,\n//         50\n//       );\n//     }\n\n//     doc.setFontSize(9);\n//     doc.text(`Dear Ma’am/Sir,`, 20, 60);\n\n//     doc.setFontSize(9);\n//     doc.text(`Greetings from Upward Management Insurance Services!`, 35, 68);\n\n//     doc.setFontSize(9);\n//     doc.text(\n//       `               This is to respectfully remind you about your Comprehensive Insurance Coverage which will expire on the date\n// indicated below.With that, we are hoping that you will continue to trust our company by rendering good insuranceservice,\n// and for being covered and protected beyond that date. Also, your insurance coverage is adjusted to the current market value.`,\n//       20,\n//       75\n//     );\n\n//     doc.setFontSize(8.5);\n//     doc.text(\"Policy No.\", 35, 90);\n//     doc.text(\"Unit Insured\", 35, 94);\n//     doc.text(\"Plate No.\", 35, 98);\n//     doc.text(\"Chassis No\", 35, 102);\n//     doc.text(\"Motor No\", 35, 106);\n//     doc.text(\"Expiration Date\", 35, 110);\n//     doc.text(\"Mortgagee\", 35, 114);\n//     doc.text(\"Remarks\", 35, 118);\n//     doc.text(\":\", 70.5, 90);\n//     doc.text(\":\", 70.5, 94);\n//     doc.text(\":\", 70.5, 98);\n//     doc.text(\":\", 70.5, 102);\n//     doc.text(\":\", 70.5, 106);\n//     doc.text(\":\", 70.5, 110);\n//     doc.text(\":\", 70.5, 114);\n//     doc.text(\":\", 70.5, 118);\n//     if (policy) {\n//       doc.text(`${policy.PolicyNo}`, 78, 90);\n//       doc.text(`${policy.unitInsured}`, 78, 94);\n//       doc.text(`${policy.PlateNo}`, 78, 98);\n//       doc.text(`${policy.ChassisNo}`, 78, 102);\n//       doc.text(policy.MotorNo, 78, 106);\n//       doc.text(\n//         `${formatDate(new Date(policy.DateTo), {\n//           year: \"numeric\",\n//           month: \"long\",\n//           day: \"numeric\",\n//         })}`,\n//         78,\n//         110\n//       );\n//       doc.text(`${policy.Mortgagee}`, 78, 114);\n//       doc.text(`${policy.Remarks}`, 78, 118);\n//     }\n\n//     doc.setFontSize(8);\n//     doc.setTextColor(\"red\");\n//     doc.text(\"Previous Policy\", 90, 124);\n//     doc.text(\"Renewal Quotation\", 140, 124);\n//     doc.setTextColor(\"black\");\n//     doc.setFontSize(7);\n//     doc.text(\"Sum Insured\", 80, 130.5);\n//     doc.text(\"Premium\", 105, 130.5);\n\n//     doc.text(\"Sum Insured\", 138, 130.5);\n//     doc.text(\"Premium\", 165, 130.5);\n\n//     doc.text(\"Total Loss/ Own Damage/ Theft\", 35, 136);\n//     doc.text(\"Acts of Nature\", 35, 141);\n//     doc.text(\"Excess Bodily Injury\", 35, 146);\n//     doc.text(\"Third Party Property Damage\", 35, 151);\n//     doc.text(\"Auto Passenger Accident\", 35, 156);\n//     doc.text(\n//       `(${parseInt(state.passenger).toLocaleString(\"en-US\")} per passenger)`,\n//       35,\n//       161\n//     );\n//     doc.text(\n//       `(${parseInt(state.passenger).toLocaleString(\"en-US\")} per passenger)`,\n//       132,\n//       161\n//     );\n//     doc.line(105, 162, 128, 162);\n//     doc.line(165, 162, 188, 162);\n\n//     doc.text(\"Sub-Total\", 35, 166);\n//     doc.text(\"Doc. Stamp\", 35, 171);\n//     doc.text(\"EVAT\", 35, 176);\n//     doc.text(\"LGT\", 35, 181);\n//     doc.line(105, 182, 128, 182);\n//     doc.line(165, 182, 188, 182);\n//     let counting = 136;\n//     if (tableComputation.length > 0) {\n//       for (let index = 0; index < tableComputation.length; index++) {\n//         const dataComputation = tableComputation[index];\n//         doc.text(formatTextNumber(dataComputation.prevInsured), 100, counting, {\n//           align: \"right\",\n//         });\n//         doc.text(formatTextNumber(dataComputation.prevPremium), 120, counting, {\n//           align: \"right\",\n//         });\n//         doc.text(\n//           formatTextNumber(dataComputation.quatationInsured),\n//           156,\n//           counting,\n//           {\n//             align: \"right\",\n//           }\n//         );\n//         doc.text(\n//           formatTextNumber(dataComputation.quatationPremium),\n//           179,\n//           counting,\n//           {\n//             align: \"right\",\n//           }\n//         );\n\n//         counting = counting + 5;\n//       }\n//     }\n//     if (tableTotalsComputation.length > 0) {\n//       for (let index = 0; index < tableTotalsComputation.length - 1; index++) {\n//         counting = counting + 5;\n//         const dataComputation = tableTotalsComputation[index];\n//         doc.text(formatTextNumber(dataComputation.previos), 120, counting, {\n//           align: \"right\",\n//         });\n//         doc.text(formatTextNumber(dataComputation.quatation), 180, counting, {\n//           align: \"right\",\n//         });\n//       }\n\n//       doc.setFontSize(8);\n//       doc.text(\"GROSS PREMIUM\", 35, 186);\n//       doc.text(\n//         tableTotalsComputation[tableTotalsComputation.length - 1].previos,\n//         122,\n//         186,\n//         {\n//           align: \"right\",\n//         }\n//       );\n//       doc.setTextColor(\"red\");\n//       doc.text(\n//         tableTotalsComputation[tableTotalsComputation.length - 1].quatation,\n//         182,\n//         186,\n//         {\n//           align: \"right\",\n//         }\n//       );\n//     } else {\n//       doc.setFontSize(8);\n//       doc.text(\"GROSS PREMIUM\", 35, 186);\n//       doc.text(\"\", 122, 186, {\n//         align: \"right\",\n//       });\n//       doc.setTextColor(\"red\");\n//       doc.text(\"\", 182, 186, {\n//         align: \"right\",\n//       });\n//     }\n\n//     doc.setTextColor(\"black\");\n//     doc.text(\":\", 70.5, 136);\n//     doc.text(\":\", 70.5, 141);\n//     doc.text(\":\", 70.5, 146);\n//     doc.text(\":\", 70.5, 151);\n//     doc.text(\":\", 70.5, 156);\n//     doc.text(\":\", 70.5, 161);\n//     doc.text(\":\", 70.5, 166);\n//     doc.text(\":\", 70.5, 171);\n//     doc.text(\":\", 70.5, 176);\n//     doc.text(\":\", 70.5, 181);\n//     doc.text(\":\", 70.5, 186);\n\n//     doc.line(130, 190, 130, 120);\n//     doc.line(131, 190, 131, 120);\n//     doc.setFontSize(9);\n\n//     doc.text(\n//       `For further details and queries, please feel free to get in touch with us.  Again, thank you for considering our company for\\nyour protection and security.`,\n//       25,\n//       198\n//     );\n//     doc.setFontSize(9);\n//     doc.setFont(\"courier\", \"bold\");\n//     doc.text(\n//       \"Very truly yours,                            Checked by:\",\n//       25,\n//       208\n//     );\n\n//     doc.text(\n//       `ANGELO DACULA\t\t\t\tMARY GRACE LLANERA\n// UNDERWRITING ADMIN\t\t\t   OPERATION SUPERVISOR\n// --------------------------------------------------------------------------------------------\n// Instruction Slip (Please check for instruction):\n\n// ____ FOR RENEWAL                     ____ NON RENEWAL\n\n// NOTE: RENEWAL WILL ONLY TAKE EFFECT IF THE\n// CURRENT POLICY’S PREMIUM IS FULLY PAID\n// `,\n//       25,\n//       218\n//     );\n\n//     doc.text(`_________________________________`, 138, 255);\n//     doc.text(`SIGNATURE OVER PRINTED NAME`, 142.5, 258);\n//     doc.setFontSize(7.7);\n\n//     doc.text(\n//       `Address | 1197 Azure Business Center EDSA Muñoz, Quezon City – Telephone Numbers | 8441 – 8977 to 78 | 8374 – 0742\n// Mobile Numbers | 0919 – 078 – 5547 / 0919 – 078 – 5546 / 0919 – 078 – 5543`,\n//       108,\n//       268,\n//       {\n//         align: \"center\",\n//       }\n//     );\n\n//     return doc.output(\"bloburl\");\n//   }\n\n//   // function generatePAReport() {\n//   //   const doc = new jsPDF({ orientation: \"l\", format: \"Letter\" });\n//   //   doc.text(\n//   //     `\n//   //       PA\n//   //   `,\n//   //     50,\n//   //     50\n//   //   );\n//   //   const link = doc.output(\"bloburl\");\n//   //   return link;\n//   // }\n\n//   function formatTextNumber(input: string) {\n//     const userInput = input.toString();\n//     if (isNaN(parseFloat(userInput))) {\n//       return \"0.00\";\n//     }\n//     var formattedNumber = parseFloat(\n//       userInput.replace(/,/g, \"\")\n//     ).toLocaleString(\"en-US\", {\n//       minimumFractionDigits: 2,\n//       maximumFractionDigits: 2,\n//     });\n\n//     return formattedNumber;\n//   }\n\n//   function formatDate(date: any, options: any) {\n//     const formattedDate = new Intl.DateTimeFormat(\"en-US\", options).format(\n//       date\n//     );\n\n//     return formattedDate;\n//   }\n//   const handleInputChange = (e: any) => {\n//     const { name, value } = e.target;\n//     if (name === \"vehicle\" && value === \"motorcycle\") {\n//       dispatch({\n//         type: \"UPDATE_FIELD\",\n//         field: \"injuryQuatationPremium\",\n//         value: \"50,000.00\",\n//       });\n//       dispatch({\n//         type: \"UPDATE_FIELD\",\n//         field: \"damageQuatationPremium\",\n//         value: \"50,000.00\",\n//       });\n//     }\n//     dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n//   };\n\n//   const height = window.innerHeight;\n\n//   return (\n//     <div\n//       style={\n//         { height: \"100vh\", width: \"100%\", display: \"flex\" } as CSSProperties\n//       }\n//     >\n//       <Fab\n//         sx={{\n//           borderRadius: \"100%\",\n//           cursor: \"pointer\",\n//           position: \"fixed\",\n//           top: showSidebar ? \"100%\" : \"82%\",\n//           right: \"5%\",\n//           transition: \"all 250ms\",\n//           zIndex: 1,\n//         }}\n//         size=\"large\"\n//         color=\"primary\"\n//         aria-label=\"add\"\n//         onClick={() => {\n//           setShowSidebar(true);\n//         }}\n//       >\n//         <RoomPreferencesIcon />\n//       </Fab>\n//       <div\n//         style={{\n//           transition: \"all 250ms\",\n//           height: `${height}px`,\n//           width: \"50%\",\n//           position: \"fixed\",\n//           left: !showSidebar ? \"-100%\" : \"0px\",\n//           top: 0,\n//           background: \"white\",\n//           boxShadow: \"0.3px 0.2px 10px 0.2px black\",\n//           zIndex: 100,\n//         }}\n//       >\n//         <div\n//           style={{\n//             position: \"relative\",\n//             height: \"100%\",\n//             width: \"100%\",\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//           }}\n//         >\n//           <div\n//             style={\n//               {\n//                 height: \"70%\",\n//                 flex: 2,\n//               } as CSSProperties\n//             }\n//           >\n//             <div\n//               style={{\n//                 width: \"100%\",\n//                 height: \"100%\",\n//                 display: \"flex\",\n//                 flexDirection: \"column\",\n//               }}\n//             >\n//               <div\n//                 style={\n//                   {\n//                     flex: 1,\n//                     borderBottom: \"1px solid black\",\n//                     padding: \"10px\",\n//                   } as React.CSSProperties\n//                 }\n//               >\n\n//                 <div\n//                   style={{\n//                     display: \"flex\",\n//                     columnGap: \"10px\",\n//                     marginTop: \"50px\",\n//                   }}\n//                 >\n//                   <TextField\n//                     fullWidth\n//                     value={search}\n//                     onChange={(e) => {\n//                       setSearch(e.target.value);\n//                     }}\n//                     onKeyDown={(e) => {\n//                       if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n//                         fetchClient(search).then((res: any) => {\n//                           // setRows(res.data.getClients);\n//                         });\n//                       }\n//                     }}\n//                     label=\"Search\"\n//                     type=\"search\"\n//                     InputProps={{\n//                       style: { height: \"27px\", fontSize: \"14px\" },\n//                     }}\n//                     sx={{\n//                       flex: 1,\n//                       height: \"27px\",\n//                       \".MuiFormLabel-root\": { fontSize: \"14px\" },\n//                       \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n//                     }}\n//                   />\n//                 </div>\n//                 <div\n//                   style={{\n//                     marginTop: \"10px\",\n//                     width: \"100%\",\n//                     position: \"relative\",\n//                     overflow: \"auto\",\n//                     height: \"350px\",\n//                   }}\n//                 >\n//                   {/* <DataGridTable\n//                     height=\"350px\"\n//                     mutipleSelect={false}\n//                     isLoading={isLoadingCLient}\n//                     dataKey={\"entry\"}\n//                     queryKey={[\"clietns-table\"]}\n//                     columns={columns}\n//                     onSelectionChange={(rowSelectionModel, data) => {\n//                       if (rowSelectionModel.length <= 0) {\n//                         return;\n//                       }\n\n//                       const selectedIDs = new Set(rowSelectionModel);\n//                       const selectedRowData = data.filter((row: any) =>\n//                         selectedIDs.has(row.PolicyNo.toString())\n//                       );\n//                       Swal.fire({\n//                         title: \"Generate Report?\",\n//                         html: `Policy No: <strong>${selectedRowData[0].PolicyNo}</strong>`,\n//                         icon: \"warning\",\n//                         showCancelButton: true,\n//                         confirmButtonColor: \"#3085d6\",\n//                         cancelButtonColor: \"#d33\",\n//                         confirmButtonText: \"Yes, Save it!\",\n//                       }).then((result) => {\n//                         if (result.isConfirmed) {\n//                           mutate(selectedRowData[0]);\n//                         }\n//                       });\n//                     }}\n//                     getRowId={(row) => row.PolicyNo}\n//                     rows={rows}\n//                     setRows={setRows}\n//                   /> */}\n//                 </div>\n//               </div>\n//               <div\n//                 style={{\n//                   height: \"300px\",\n//                   padding: \"10px\",\n//                 }}\n//               >\n//                 <h5\n//                   style={{\n//                     fontFamily: \"sans-serif\",\n//                     padding: \"0\",\n//                     margin: \"0\",\n//                     marginBottom: \"10px\",\n//                   }}\n//                 >\n//                   Renewal Notice Settings\n//                 </h5>\n//                 <div\n//                   style={{\n//                     display: \"flex\",\n//                     columnGap: \"10px\",\n//                     marginBottom: \"15px\",\n//                   }}\n//                 >\n//                   <CustomDatePicker\n//                     fullWidth={false}\n//                     label=\"Date Print\"\n//                     onChange={(value: any) => {\n//                       dispatch({\n//                         type: \"UPDATE_FIELD\",\n//                         field: \"datePrint\",\n//                         value: value,\n//                       });\n//                     }}\n//                     value={new Date(state.datePrint)}\n//                     onKeyDown={(e: any) => {\n//                       if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n//                         const timeout = setTimeout(() => {\n//                           datePickerRef.current\n//                             ?.querySelector(\"button\")\n//                             ?.click();\n//                           clearTimeout(timeout);\n//                         }, 150);\n//                       }\n//                     }}\n//                     sx={{ flex: 1 }}\n//                     datePickerRef={datePickerRef}\n//                     textField={{\n//                       InputLabelProps: {\n//                         style: {\n//                           fontSize: \"14px\",\n//                         },\n//                       },\n//                       InputProps: {\n//                         style: { height: \"27px\", fontSize: \"14px\" },\n//                       },\n//                     }}\n//                   />\n//                   <FormControl\n//                     variant=\"outlined\"\n//                     size=\"small\"\n//                     sx={{\n//                       flex: 1,\n//                       \".MuiFormLabel-root\": {\n//                         fontSize: \"14px\",\n//                         background: \"white\",\n//                         zIndex: 99,\n//                         padding: \"0 3px\",\n//                       },\n//                       \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n//                     }}\n//                   >\n//                     <InputLabel id=\"demo-simple-select-label\">\n//                       Vehicle\n//                     </InputLabel>\n//                     <Select\n//                       name=\"vehicle\"\n//                       labelId=\"demo-simple-select-label\"\n//                       value={state.vehicle}\n//                       label=\"Vehicle\"\n//                       onChange={handleInputChange}\n//                       sx={{\n//                         height: \"27px\",\n//                         fontSize: \"14px\",\n//                       }}\n//                     >\n//                       <MenuItem value={\"private\"}>Private</MenuItem>\n//                       <MenuItem value={\"heavy\"}>Heavy</MenuItem>\n//                       <MenuItem value={\"motorcycle\"}>Motorcycle</MenuItem>\n//                     </Select>\n//                   </FormControl>\n//                 </div>\n//                 <div\n//                   style={{\n//                     display: \"flex\",\n//                     columnGap: \"10px\",\n//                     marginBottom: \"15px\",\n//                   }}\n//                 >\n//                   <FormControl\n//                     variant=\"outlined\"\n//                     size=\"small\"\n//                     sx={{\n//                       flex: 1,\n//                       \".MuiFormLabel-root\": {\n//                         fontSize: \"14px\",\n//                         background: \"white\",\n//                         zIndex: 99,\n//                         padding: \"0 3px\",\n//                       },\n//                       \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n//                     }}\n//                   >\n//                     <InputLabel id=\"injuryQuatationPremium-id\">\n//                       Excess Bodily Injury\n//                     </InputLabel>\n//                     <Select\n//                       labelId=\"injuryQuatationPremium-id\"\n//                       value={state.injuryQuatationPremium}\n//                       name=\"injuryQuatationPremium\"\n//                       label=\"Excess Bodily Injury\"\n//                       onChange={handleInputChange}\n//                       sx={{\n//                         height: \"27px\",\n//                         fontSize: \"14px\",\n//                       }}\n//                     >\n//                       {(state.vehicle === \"motorcycle\"\n//                         ? privatePremiumsInjury.slice(0, 6)\n//                         : privatePremiumsInjury\n//                       ).map((item, idx) => {\n//                         return (\n//                           <MenuItem key={idx} value={item.limit}>\n//                             {item.limit}\n//                           </MenuItem>\n//                         );\n//                       })}\n//                     </Select>\n//                   </FormControl>\n//                   <FormControl\n//                     variant=\"outlined\"\n//                     size=\"small\"\n//                     sx={{\n//                       flex: 1,\n//                       \".MuiFormLabel-root\": {\n//                         fontSize: \"14px\",\n//                         background: \"white\",\n//                         zIndex: 99,\n//                         padding: \"0 3px\",\n//                       },\n//                       \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n//                     }}\n//                   >\n//                     <InputLabel id=\"damageQuatationPremium-id\">\n//                       Third Party Property Damage\n//                     </InputLabel>\n//                     <Select\n//                       labelId=\"damageQuatationPremium-id\"\n//                       value={state.damageQuatationPremium}\n//                       name=\"damageQuatationPremium\"\n//                       label=\"Third Party Property Damage\"\n//                       onChange={handleInputChange}\n//                       sx={{\n//                         height: \"27px\",\n//                         fontSize: \"14px\",\n//                       }}\n//                     >\n//                       {(state.vehicle === \"motorcycle\"\n//                         ? premiumsDamage.slice(0, 6)\n//                         : premiumsDamage\n//                       ).map((item, idx) => {\n//                         return (\n//                           <MenuItem key={idx} value={item.limit}>\n//                             {item.limit}\n//                           </MenuItem>\n//                         );\n//                       })}\n//                     </Select>\n//                   </FormControl>\n//                 </div>\n//                 <div\n//                   style={{\n//                     display: \"flex\",\n//                     columnGap: \"10px\",\n//                     marginBottom: \"10px\",\n//                   }}\n//                 >\n//                   <TextField\n//                     name=\"accidentQuatationPremiumInsured\"\n//                     label=\"Auto Passenger Accident Insured \"\n//                     size=\"small\"\n//                     value={state.accidentQuatationPremiumInsured}\n//                     onChange={handleInputChange}\n//                     placeholder=\"0.00\"\n//                     InputProps={{\n//                       inputComponent: NumericFormatCustom as any,\n//                       style: { height: \"27px\", fontSize: \"14px\" },\n//                     }}\n//                     sx={{\n//                       flex: 1,\n//                       \".MuiFormLabel-root\": { fontSize: \"14px\" },\n//                       \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n//                     }}\n//                     onBlur={() => {\n//                       dispatch({\n//                         type: \"UPDATE_FIELD\",\n//                         field: \"accidentQuatationPremiumInsured\",\n//                         value: parseFloat(\n//                           state.accidentQuatationPremiumInsured.replace(\n//                             /,/g,\n//                             \"\"\n//                           )\n//                         ).toFixed(2),\n//                       });\n//                     }}\n//                   />\n//                   <TextField\n//                     name=\"accidentQuatationPremiumPremium\"\n//                     label=\"Auto Passenger Accident Premium\"\n//                     size=\"small\"\n//                     value={state.accidentQuatationPremiumPremium}\n//                     onChange={handleInputChange}\n//                     placeholder=\"0.00\"\n//                     InputProps={{\n//                       inputComponent: NumericFormatCustom as any,\n//                       style: { height: \"27px\", fontSize: \"14px\" },\n//                     }}\n//                     sx={{\n//                       flex: 1,\n//                       \".MuiFormLabel-root\": { fontSize: \"14px\" },\n//                       \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n//                     }}\n//                     onBlur={() => {\n//                       dispatch({\n//                         type: \"UPDATE_FIELD\",\n//                         field: \"accidentQuatationPremiumPremium\",\n//                         value: parseFloat(\n//                           state.accidentQuatationPremiumPremium.replace(\n//                             /,/g,\n//                             \"\"\n//                           )\n//                         ).toFixed(2),\n//                       });\n//                     }}\n//                   />\n//                 </div>\n//                 <div\n//                   style={{\n//                     display: \"flex\",\n//                     columnGap: \"10px\",\n//                     marginBottom: \"10px\",\n//                   }}\n//                 >\n//                   <TextField\n//                     name=\"passenger\"\n//                     label=\"passenger\"\n//                     size=\"small\"\n//                     value={state.passenger}\n//                     onChange={handleInputChange}\n//                     placeholder=\"0.00\"\n//                     InputProps={{\n//                       inputComponent: NumericFormatCustom as any,\n//                       style: { height: \"27px\", fontSize: \"14px\" },\n//                     }}\n//                     sx={{\n//                       flex: 1,\n//                       \".MuiFormLabel-root\": { fontSize: \"14px\" },\n//                       \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n//                     }}\n//                   />\n//                   <div style={{ flex: 1 } as any}></div>\n//                 </div>\n//                 <div\n//                   style={{\n//                     display: \"flex\",\n//                     columnGap: \"10px\",\n//                   }}\n//                 >\n//                   {selectRow.length > 0 && (\n//                     <Button\n//                       variant=\"contained\"\n//                       size=\"small\"\n//                       onClick={() => {\n//                         comComputation(selectRow[0]);\n//                       }}\n//                     >\n//                       Update\n//                     </Button>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <IconButton\n//             size=\"large\"\n//             onClick={() => {\n//               navigate(\"/dashboard/task/production/policy\");\n//             }}\n//             color=\"primary\"\n//             sx={{\n//               position: \"absolute\",\n//               bottom: \"5px\",\n//               left: \"5px\",\n//               zIndex: 99,\n//             }}\n//           >\n//             <ReplyAllIcon />\n//           </IconButton>\n//           <IconButton\n//             size=\"small\"\n//             onClick={() => {\n//               setShowSidebar(false);\n//             }}\n//             sx={{\n//               position: \"absolute\",\n//               top: \"5px\",\n//               right: \"5px\",\n//             }}\n//           >\n//             <CloseIcon />\n//           </IconButton>\n//         </div>\n//       </div>\n\n//       <div style={{ width: \"100%\", height: \"100vh\" } as CSSProperties}>\n//         <object data={src} type=\"application/pdf\" width=\"100%\" height=\"100%\">\n//           <embed src={src} type=\"application/pdf\" />\n//           <p>\n//             It appears you don't have a PDF plugin for this browser. You can{\" \"}\n//             <a href={src}>click here to download the PDF file.</a>\n//           </p>\n//         </object>\n//       </div>\n\n//       {isLoading && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: \"0\",\n//             bottom: \"0\",\n//             left: \"0\",\n//             right: \"0\",\n//             background: \"rgba(255, 255, 255, 0.11)\",\n//             backdropFilter: \"blur(5px)\",\n//           }}\n//         ></div>\n//       )}\n//       {isLoading && (\n//         <div\n//           style={{\n//             position: \"absolute\",\n//             top: \"50%\",\n//             left: \"50%\",\n//             transform: \"translate(-50%,-505)\",\n//             zIndex: 999,\n//           }}\n//         >\n//           <img\n//             src={`${process.env.REACT_APP_IMAGE_URL}loading.gif`}\n//             alt=\"loading-gif\"\n//             style={{ width: \"70px\", height: \"70px\" }}\n//           />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nexport default function RenewalTemplate() {\n  return <div>HELLO WOLRD</div>;\n}\n"],"names":["RenewalTemplate","_jsx","children"],"sourceRoot":""}