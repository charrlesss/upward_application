{"version":3,"file":"static/js/9372.65250371.chunk.js","mappings":"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","sources":["components/ModalWithTable.tsx","components/Table.tsx","feautures/Admin/Reference/BankAccount.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/SwitchAccount.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useState, useRef, useReducer } from \"react\";\n\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  IconButton,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n} from \"@mui/material\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport SwitchAccountIcon from \"@mui/icons-material/SwitchAccount\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { pink } from \"@mui/material/colors\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"../../../lib/wait\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useQueryModalTable from \"../../../hooks/useQueryModalTable\";\nimport Table from \"../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\n\nconst initialState = {\n  Account_No: \"\",\n  Account_Name: \"\",\n  Account_Type: \"\",\n  Desc: \"\",\n  Option: 0,\n  Account_ID: \"\",\n  Inactive: false,\n  IDNo: \"\",\n  Account_ID_Name: \"\",\n  Identity: \"\",\n  BankName: \"\",\n  Auto: \"\",\n  mode: \"\",\n  search: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const bankAccountColumn = [\n  { field: \"Auto\", headerName: \"Auto\", hide: true },\n  { field: \"Account_No\", headerName: \"Account No#\", width: 300 },\n  { field: \"Account_Name\", headerName: \"Account Name\", flex: 1 },\n  { field: \"Account_Type\", headerName: \"Account Type\", flex: 1 },\n  { field: \"Desc\", headerName: \"Bank Name\", flex: 1 },\n  { field: \"Account_ID\", headerName: \"Account ID\", flex: 1 },\n  { field: \"Inactive\", headerName: \"Inactive\", flex: 1 },\n  { field: \"IDNo\", headerName: \"ID No\", flex: 1 },\n  { field: \"Identity\", headerName: \"Identity\", flex: 1 },\n];\nexport const chartColumn = [\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Acct_Title\", headerName: \"Title\", flex: 1 },\n  { field: \"Short\", headerName: \"Short Name\", flex: 1 },\n];\nexport const bannkColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\nexport const clientColumn = [\n  { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\n  { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n  {\n    field: \"entry_type\",\n    headerName: \"ID Type\",\n    width: 150,\n  },\n];\n\nexport default function BankAccount() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const clientSearchInput = useRef<HTMLInputElement>(null);\n  const queryClient = useQueryClient();\n  const table = useRef<any>(null);\n  const { isLoading, refetch: refetchBankAccountSearch } = useQuery({\n    queryKey: \"bank-account-trans\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/reference/get-bank-account?bankAccountSearch=${state.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.bankAccount);\n    },\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: \"bank-account-actions\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-bank-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: \"bank-account-actions\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-bank-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: \"bank-account-actions\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-bank-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const {\n    ModalComponent: ModalBank,\n    openModal: openBank,\n    isLoading: isLoadingBank,\n    closeModal: closeBank,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/get-banks\",\n      queryUrlName: \"bankSearch\",\n    },\n    columns: bannkColumn,\n    queryKey: \"get-banks\",\n    uniqueId: \"Bank_Code\",\n    responseDataKey: \"bank\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"BankName\",\n        value: selectedRowData[0].Bank,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Desc\",\n        value: selectedRowData[0].Bank_Code,\n      });\n      closeBank();\n    },\n    searchRef: clientSearchInput,\n  });\n  const {\n    ModalComponent: ModalChartAccount,\n    openModal: openChartAccount,\n    isLoading: isLoadingChartAccount,\n    closeModal: closeChartAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/get-chart-accounts\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: chartColumn,\n    queryKey: \"get-chart-accounts\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Account_ID_Name\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Account_ID\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      closeChartAccount();\n    },\n    searchRef: clientSearchInput,\n  });\n  const {\n    ModalComponent: ModalSearchClient,\n    openModal: openSearchClient,\n    isLoading: isLoadingSearchClient,\n    closeModal: closeSearchClient,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/search-client\",\n      queryUrlName: \"searchClientInput\",\n    },\n    columns: [\n      { field: \"IDNo\", headerName: \"ID No.\", width: 150 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"search-client\",\n    uniqueId: \"ID\",\n    responseDataKey: \"client\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"IDNo\",\n        value: selectedRowData[0].IDNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Identity\",\n        value: selectedRowData[0].Name,\n      });\n      closeSearchClient();\n    },\n    searchRef: clientSearchInput,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave(e: any) {\n    e.preventDefault();\n    if (state.Account_No === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account No is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Name === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Name is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Type === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Type is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_ID === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account ID is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.BankName === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Identity === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Identity is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_No.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account No is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Name >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Name is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Type >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Type is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_ID >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account ID is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.BankName >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"invalid Bank is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Identity >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"invalid identity is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n  function resetModule() {\n    setNewStateValue(dispatch, initialState);\n    table.current?.removeSelection();\n    wait(500).then(() => {\n      refetchBankAccountSearch();\n    });\n  }\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      queryClient.invalidateQueries(\"bank-account-trans\");\n      resetModule();\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            marginBottom: \"15px\",\n          },\n        })}\n      >\n        <div\n          style={{\n            marginTop: \"10px\",\n            marginBottom: \"12px\",\n            width: \"100%\",\n          }}\n        >\n          <TextField\n            label=\"Search\"\n            fullWidth\n            size=\"small\"\n            type=\"text\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return refetchBankAccountSearch();\n              }\n            }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {state.mode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                id=\"entry-header-save-button\"\n                onClick={() => {\n                  handleInputChange({ target: { value: \"add\", name: \"mode\" } });\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              startIcon={<SaveIcon />}\n              loading={loadingAdd || loadingEdit}\n              disabled={state.mode === \"\"}\n            >\n              Save\n            </LoadingButton>\n            {state.mode !== \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetModule();\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n\n            <LoadingButton\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              loading={loadingDelete}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              startIcon={<DeleteIcon />}\n              disabled={state.mode !== \"edit\"}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      Auto: state.Auto,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </LoadingButton>\n          </div>\n        </div>\n      </Box>\n      <form\n        onKeyDown={(e) => {\n          if (\n            [\"Account_ID_Name\", \"BankName\", \"IDNo\"].includes(\n              (e.target as any).name\n            )\n          ) {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n            }\n            return;\n          }\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            handleOnSave(e);\n            return;\n          }\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"15px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          {!isLoading && (\n            <React.Fragment>\n              <TextField\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Account No\"\n                name=\"Account_No\"\n                value={state.Account_No}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                disabled={state.mode === \"\" || state.mode === \"edit\"}\n              />\n              <TextField\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Account Name\"\n                name=\"Account_Name\"\n                value={state.Account_Name}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                disabled={state.mode === \"\"}\n              />\n              <TextField\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Account Type\"\n                name=\"Account_Type\"\n                value={state.Account_Type}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                disabled={state.mode === \"\"}\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                  minWidth: \"200px\",\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"Inactive\"\n                    checked={state.Inactive}\n                    onChange={(e) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"Inactive\",\n                        value: e.target.checked,\n                      });\n                    }}\n                  />\n                }\n                label=\"Mark as Inactive\"\n              />\n            </React.Fragment>\n          )}\n        </Box>\n        <br />\n        <Box\n          sx={(theme) => ({\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"15px\",\n            gap: \"20px\",\n            padding: \"15px\",\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          <span\n            style={{\n              position: \"absolute\",\n              top: \"-12px\",\n              left: \"20px\",\n              background: \"white\",\n              padding: \"0 5px\",\n            }}\n          >\n            Deposit Slip\n          </span>\n          {isLoadingBank ? (\n            <LoadingButton loading={isLoadingBank} />\n          ) : (\n            <FormControl\n              disabled={state.mode === \"\"}\n              variant=\"outlined\"\n              size=\"small\"\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"Bank\">Bank</InputLabel>\n              <OutlinedInput\n                disabled={state.mode === \"\"}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n                label=\"Bank\"\n                name=\"BankName\"\n                value={state.BankName}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openBank(state.BankName);\n                  }\n                }}\n                id=\"Bank\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={state.mode === \"\"}\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openBank(state.BankName);\n                      }}\n                    >\n                      <AccountBalanceIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          {isLoadingChartAccount ? (\n            <LoadingButton loading={isLoadingChartAccount} />\n          ) : (\n            <FormControl\n              disabled={state.mode === \"\"}\n              variant=\"outlined\"\n              size=\"small\"\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"account\">Account</InputLabel>\n              <OutlinedInput\n                disabled={state.mode === \"\"}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n                label=\"Account\"\n                name=\"Account_ID_Name\"\n                value={state.Account_ID_Name}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openChartAccount(state.Account_ID_Name);\n                  }\n                }}\n                id=\"account\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={state.mode === \"\"}\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openChartAccount(state.Account_ID_Name);\n                      }}\n                    >\n                      <SwitchAccountIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          {isLoadingSearchClient ? (\n            <LoadingButton loading={isLoadingSearchClient} />\n          ) : (\n            <FormControl\n              disabled={state.mode === \"\"}\n              variant=\"outlined\"\n              size=\"small\"\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"ID-No\">ID No</InputLabel>\n              <OutlinedInput\n                disabled={state.mode === \"\"}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n                label=\"ID No\"\n                name=\"IDNo\"\n                value={state.IDNo}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openSearchClient(state.IDNo);\n                  }\n                }}\n                id=\"ID-No\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={state.mode === \"\"}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openSearchClient(state.IDNo);\n                      }}\n                    >\n                      <PersonSearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={state.mode === \"\"}\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Identity\"\n            name=\"Identity\"\n            value={state.Identity}\n            onChange={handleInputChange}\n            InputProps={{\n              readOnly: true,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </Box>\n      </form>\n      <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${\n              refParent.current?.getBoundingClientRect().height as number\n            }px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={isLoading || loadingAdd || loadingEdit || loadingDelete}\n            columns={bankAccountColumn}\n            rows={rows}\n            table_id={\"Auto\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.Auto === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                setNewStateValue(dispatch, initialState);\n                handleInputChange({ target: { value: \"\", name: \"mode\" } });\n                return;\n              }\n              handleInputChange({ target: { value: \"edit\", name: \"mode\" } });\n\n              if (code === \"Delete\" || code === \"Backspace\") {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      Auto: rowSelected.Auto,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n\n                return;\n              }\n\n              const newState = {\n                ...rowSelected,\n                Inactive: rowSelected.Inactive !== \"NO\",\n              };\n              console.log(newState);\n              setNewStateValue(dispatch, newState);\n            }}\n          />\n        </Box>\n      </div>\n      {ModalSearchClient}\n      {ModalChartAccount}\n      {ModalBank}\n    </div>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 2c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H8v-1.5c0-1.99 4-3 6-3s6 1.01 6 3V16z\"\n}), 'SwitchAccount');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","_ref","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","_jsx","Modal","open","onClose","children","_jsxs","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","Account_No","Account_Name","Account_Type","Desc","Option","Account_ID","Inactive","IDNo","Account_ID_Name","Identity","BankName","Auto","mode","search","reducer","state","action","type","_defineProperty","field","bankAccountColumn","headerName","chartColumn","bannkColumn","clientColumn","BankAccount","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_refParent$current","refParent","useRef","_useReducer","useReducer","_useReducer2","dispatch","AuthContext","myAxios","user","clientSearchInput","queryClient","useQueryClient","table","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","bankAccount","refetchBankAccountSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","selectedRowData","Bank","Bank_Code","closeBank","ModalBank","ModalComponent","openBank","openModal","isLoadingBank","closeModal","_useQueryModalTable2","Acct_Title","Acct_Code","closeChartAccount","ModalChartAccount","openChartAccount","isLoadingChartAccount","_useQueryModalTable3","Name","closeSearchClient","ModalSearchClient","openSearchClient","isLoadingSearchClient","handleInputChange","_e$target","target","name","handleOnSave","Swal","icon","showConfirmButton","timer","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","resetModule","_table$current","setNewStateValue","wait","then","success","invalidateQueries","message","theme","breakpoints","down","marginTop","Button","startIcon","AddIcon","LoadingButton","SaveIcon","disabled","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","backgroundColor","pink","DeleteIcon","rowGap","React","required","FormControlLabel","minWidth","control","Checkbox","checked","gap","border","borderRadius","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","edge","AccountBalanceIcon","SwitchAccountIcon","PersonSearchIcon","readOnly","getBoundingClientRect","overflowX","rowSelected","undefined","newState","console","log","obj","Object","entries","_ref4","_ref5","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","_useState3","_useState4","customizeAxiostool","_args2","response","refetchOnWindowFocus","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","toString","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r","A100","A200","A400","A700"],"sourceRoot":""}