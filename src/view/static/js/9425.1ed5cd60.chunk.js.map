{"version":3,"file":"static/js/9425.1ed5cd60.chunk.js","mappings":"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","sources":["components/NumberFormat.tsx","feautures/Admin/Task/Accounting/GeneralJournal.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/CardTravel.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/material/colors/brown.js","../node_modules/@mui/material/colors/deepOrange.js"],"sourcesContent":["import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import { useReducer, useContext, useState, useRef, useEffect } from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Select,\n  MenuItem,\n  Modal,\n  Typography,\n  Box,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport CardTravelIcon from \"@mui/icons-material/CardTravel\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { brown, deepOrange } from \"@mui/material/colors\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport {\n  generateRandomClass,\n  keyBoardSelectionTable,\n} from \"../../../../components/ModalWithTable\";\nconst initialState = {\n  sub_refNo: \"\",\n  refNo: \"\",\n  dateEntry: new Date(),\n  explanation: \"\",\n\n  code: \"\",\n  acctName: \"\",\n  subAcct: \"\",\n  subAcctName: \"\",\n  IDNo: \"\",\n  ClientName: \"\",\n  credit: \"\",\n  debit: \"\",\n  TC_Code: \"\",\n  TC_Desc: \"\",\n  remarks: \"\",\n  vatType: \"NON-VAT\",\n  invoice: \"\",\n  BranchCode: \"HO\",\n  totalDebit: \"\",\n  totalCredit: \"\",\n  totalBalance: \"\",\n\n  jobAutoExp: false,\n  jobTransactionDate: new Date(),\n  jobType: \"\",\n  search: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst selectedCollectionColumns = [\n  { field: \"code\", headerName: \"Code\", minWidth: 150 },\n  { field: \"acctName\", headerName: \"Account Name\", minWidth: 300 },\n  {\n    field: \"subAcctName\",\n    headerName: \"Sub Account\",\n    flex: 1,\n    minWidth: 170,\n  },\n  { field: \"ClientName\", headerName: \"Name\", flex: 1, minWidth: 300 },\n  { field: \"debit\", headerName: \"Debit\", minWidth: 80 },\n  { field: \"credit\", headerName: \"Credit\", minWidth: 100 },\n  // hide\n  { field: \"TC_Code\", headerName: \"TC\", minWidth: 100 },\n  {\n    field: \"remarks\",\n    headerName: \"Remarks\",\n    flex: 1,\n    minWidth: 300,\n  },\n  { field: \"vatType\", headerName: \"Vat Type\", minWidth: 100 },\n  { field: \"invoice\", headerName: \"Invoice\", flex: 1, minWidth: 200 },\n  { field: \"TempID\", headerName: \"TempId\", hide: true },\n  { field: \"IDNo\", headerName: \"I.D.\", flex: 1, minWidth: 300, hide: true },\n  {\n    field: \"BranchCode\",\n    headerName: \"BranchCode\",\n    flex: 1,\n    minWidth: 300,\n    hide: true,\n  },\n];\n\nexport default function GeneralJournal() {\n  const mainId = generateRandomClass();\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [save, setSave] = useState(false);\n  const [openJobs, setOpenJobs] = useState(false);\n  const [hasSelected, setHasSelected] = useState(false);\n  const [searchSelected, setSearchSelected] = useState(false);\n  const [editTransaction, setEditTransaction] = useState({\n    edit: false,\n    updateId: \"\",\n  });\n  const [generalJournal, setGeneralJournal] = useState<GridRowSelectionModel>(\n    []\n  );\n  const queryClient = useQueryClient();\n  const datePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n\n  const idInputRef = useRef<HTMLInputElement>(null);\n  const debitInputRef = useRef<HTMLInputElement>(null);\n  const tcInputRef = useRef<HTMLInputElement>(null);\n\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const IdsSearchInput = useRef<HTMLInputElement>(null);\n  const codeInputRef = useRef<HTMLInputElement>(null);\n  const table = useRef<any>(null);\n\n  const invoiceRef = useRef<HTMLInputElement>(null);\n  const refParent = useRef<HTMLDivElement>(null);\n\n  const {\n    isLoading: loadingGeneralJournalGenerator,\n    refetch: refetchGeneralJournalGenerator,\n  } = useQuery({\n    queryKey: \"general-journal-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/accounting/general-journal/get-general-journal-id`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      if (user?.department === \"UCSMI\") {\n        return;\n      }\n      if (hasSelected) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"refNo\",\n          value: state.sub_refNo ?? \"\",\n        });\n        return;\n      }\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value:\n          response.data.generateGeneralJournalID[0].general_journal_id ?? \"\",\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value:\n          response.data.generateGeneralJournalID[0].general_journal_id ?? \"\",\n      });\n    },\n  });\n  const {\n    mutate: addGeneralJournalMutate,\n    isLoading: loadingGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"add-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/add-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setSave(false);\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setGeneralJournal([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: mutateJob, isLoading: isLoadingJob } = useMutation({\n    mutationKey: \"jobs\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\"/task/accounting/general-journal/jobs\", variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (res) => {\n      const response = res as any;\n      setGeneralJournal([]);\n      setGeneralJournal(response.data.jobs);\n      setSave(true);\n      setOpenJobs(false);\n    },\n  });\n  const {\n    mutate: mutateVoidGeneralJournal,\n    isLoading: loadingVoidGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"void-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/void-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setSave(false);\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setGeneralJournal([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    mutate: getSearchSelectedGeneralJournal,\n    isLoading: loadingGetSearchSelectedGeneralJournal,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/get-selected-search-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selected = response.data.getSelectedSearchGeneralJournal;\n      const { explanation, dateEntry, refNo } = selected[0];\n\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"dateEntry\",\n        value: dateEntry,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"explanation\",\n        value: explanation,\n      });\n      setGeneralJournal(selected);\n    },\n  });\n  const {\n    ModalComponent: ModalSearchGeneralJounal,\n    openModal: openSearchGeneralJounal,\n    isLoading: isLoadingSearchGeneralJounal,\n    closeModal: closeSearchGeneralJounal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/search-general-journal\",\n      queryUrlName: \"searchGeneralJournal\",\n    },\n    columns: [\n      { field: \"Date_Entry\", headerName: \"Date\", width: 130 },\n      { field: \"Source_No\", headerName: \"Ref No.\", width: 250 },\n      {\n        field: \"Explanation\",\n        headerName: \"Explanation\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-general-journal\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"searchGeneralJournal\",\n    onSelected: (selectedRowData, data) => {\n      getSearchSelectedGeneralJournal({\n        Source_No: selectedRowData[0].Source_No,\n      });\n      setSearchSelected(true);\n      setSave(true);\n      setHasSelected(true);\n      setGeneralJournal([]);\n      setEditTransaction({\n        edit: false,\n        updateId: \"\",\n      });\n\n      closeSearchGeneralJounal();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: chartAccountSearchInput,\n  });\n  const {\n    ModalComponent: ModalChartAccountSearch,\n    openModal: openChartAccountSearch,\n    isLoading: isLoadingChartAccountSearch,\n    closeModal: closeChartAccountSearch,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-chart-account\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Account Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Account Title.\", width: 250 },\n      {\n        field: \"Short\",\n        headerName: \"Short\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-chart-account\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"getChartOfAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"code\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"acctName\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      closeChartAccountSearch();\n      setTimeout(() => {\n        idInputRef.current?.focus();\n      }, 250);\n    },\n    searchRef: chartAccountSearchInput,\n  });\n  const {\n    ModalComponent: ModalPolicyIdClientIdRefId,\n    openModal: openPolicyIdClientIdRefId,\n    isLoading: isLoadingPolicyIdClientIdRefId,\n    closeModal: closePolicyIdClientIdRefId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"get-policyId-ClientId-RefId\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData) => {\n      console.log(selectedRowData);\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"ClientName\",\n        value: selectedRowData[0].Name ?? \"\",\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"IDNo\",\n        value: selectedRowData[0].IDNo ?? \"\",\n      });\n\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"subAcct\",\n        value: selectedRowData[0].sub_account,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"subAcctName\",\n        value: selectedRowData[0].ShortName ?? \"\",\n      });\n\n      closePolicyIdClientIdRefId();\n      setTimeout(() => {\n        debitInputRef.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  const {\n    ModalComponent: ModalTransactionAccount,\n    openModal: openTransactionAccount,\n    isLoading: isLoadingTransactionAccount,\n    closeModal: closeTransactionAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-transaction-account\",\n      queryUrlName: \"transactionCodeSearch\",\n    },\n    columns: [\n      { field: \"Code\", headerName: \"Code\", width: 130 },\n      {\n        field: \"Description\",\n        headerName: \"Description\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-transaction-account\",\n    uniqueId: \"Code\",\n    responseDataKey: \"getTransactionAccount\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Code\",\n        value: selectedRowData[0].Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Desc\",\n        value: selectedRowData[0].Description,\n      });\n      closeTransactionAccount();\n      setTimeout(() => {\n        tcInputRef.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  useEffect(() => {\n    const debit = generalJournal.reduce((a: number, item: any) => {\n      return a + parseFloat(item.debit.replace(/,/g, \"\"));\n    }, 0);\n    const credit = generalJournal.reduce((a: number, item: any) => {\n      return a + parseFloat(item.credit.replace(/,/g, \"\"));\n    }, 0);\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalDebit\",\n      value: debit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalCredit\",\n      value: credit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalBalance\",\n      value: (debit - credit).toFixed(2),\n    });\n  }, [generalJournal]);\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function handleOnSave() {\n    if (state.refNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide reference number!\",\n        timer: 1500,\n      });\n    }\n    if (state.explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (\n      (state.totalDebit === \"\" && state.totalCredit === \"\") ||\n      (state.totalDebit === \"0.00\" && state.totalCredit === \"0.00\")\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must not be zero(0), please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {});\n      });\n    }\n    if (state.totalDebit !== state.totalCredit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must be balance, please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {});\n      });\n    }\n    if (hasSelected) {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addGeneralJournalMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            generalJournal,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addGeneralJournalMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            generalJournal,\n          });\n        },\n      });\n    }\n  }\n  function handleVoid() {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      text: `Are you sure you want to void ${state.refNo}`,\n      cb: (userCodeConfirmation) => {\n        mutateVoidGeneralJournal({\n          refNo: state.refNo,\n          dateEntry: state.dateEntry,\n          userCodeConfirmation,\n        });\n      },\n    });\n  }\n  function handleRowSave() {\n    if (state.code === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is required!\",\n        timer: 1500,\n      }).then(() => {\n        return openChartAccountSearch(state.code);\n      });\n    }\n\n    if (state.ClientName === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"ID is required!\",\n        timer: 1500,\n      }).then(() => {\n        return openPolicyIdClientIdRefId(state.ClientName);\n      });\n    }\n\n    if (isNaN(parseFloat(state.debit.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Debit is required!\",\n        timer: 1500,\n      });\n    }\n    if (isNaN(parseFloat(state.credit.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit is required!\",\n        timer: 1500,\n      });\n    }\n    if (\n      parseFloat(state.credit.replace(/,/g, \"\")) === 0 &&\n      parseFloat(state.debit.replace(/,/g, \"\")) === 0\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit and Debit must be different!\",\n        timer: 1500,\n      });\n    }\n\n    if (state.TC_Code === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is required!\",\n        timer: 1500,\n      }).then(() => {\n        return openTransactionAccount(state.TC_Code);\n      });\n    }\n\n    if (state.code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.ClientName.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Client name is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.TC_Code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.invoice.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      });\n    }\n\n    if (state.TC_Code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      });\n    }\n\n    function generateID(array: Array<any>) {\n      const lastItem = array.length ? array[array.length - 1].TempID : \"000\";\n      const numericPart = (parseInt(lastItem.toString().match(/\\d+/)[0]) + 1)\n        .toString()\n        .padStart(3, \"0\");\n      return numericPart;\n    }\n    Swal.fire({\n      title: editTransaction.edit\n        ? `Are you sure you want to update row?`\n        : `Are you sure you want to add new row?`,\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: editTransaction.edit\n        ? \"Yes, update it!\"\n        : \"Yes Add it\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setGeneralJournal((d: any) => {\n          if (state.debit === \"\") {\n            state.debit = \"0.00\";\n          }\n          if (state.credit === \"\") {\n            state.credit = \"0.00\";\n          }\n\n          if (state.vatType === \"VAT\" && state.code !== \"1.06.02\") {\n            let taxableamt;\n\n            if (parseFloat(state.debit.replace(/,/g, \"\")) !== 0) {\n              taxableamt = parseFloat(state.debit.replace(/,/g, \"\")) / 1.12;\n              state.debit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            } else {\n              taxableamt = parseFloat(state.credit.replace(/,/g, \"\")) / 1.12;\n              state.credit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            }\n\n            const credit = parseFloat(\n              state.credit.toString().replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            const debit = parseFloat(\n              state.debit.toString().replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n\n            state.credit = credit;\n            state.debit = debit;\n\n            if (editTransaction.edit) {\n              d = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n            } else {\n              d = [\n                ...d,\n                {\n                  ...state,\n                  TempID: generateID(d),\n                },\n              ];\n            }\n\n            let inputtax = taxableamt * 0.12;\n\n            if (parseFloat(state.debit.toString().replace(/,/g, \"\")) !== 0) {\n              state.debit = inputtax.toFixed(2);\n            } else {\n              state.credit = inputtax.toFixed(2);\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                code: \"1.06.02\",\n\n                acctName: \"Input Tax\",\n                TempID: generateID(d),\n              },\n            ];\n          } else {\n\n            const credit = parseFloat(\n              state.credit.toString().replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            const debit = parseFloat(\n              state.debit.toString().replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n\n            state.credit = credit;\n            state.debit = debit;\n            \n            if (editTransaction.edit) {\n              const newD = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n              return newD;\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                TempID: generateID(d),\n              },\n            ];\n          }\n          return d;\n        });\n\n        const resetValue = {\n          code: \"\",\n          acctName: \"\",\n          subAcct: \"\",\n          subAcctName: \"\",\n          IDNo: \"\",\n          ClientName: \"\",\n          credit: \"\",\n          debit: \"\",\n          TC_Code: \"\",\n          TC_Desc: \"\",\n          remarks: \"\",\n          vatType: \"NON-VAT\",\n          invoice: \"\",\n        };\n        setNewStateValue(dispatch, { ...state, ...resetValue });\n        setEditTransaction({ edit: false, updateId: \"\" });\n        wait(300).then(() => {\n          codeInputRef.current?.focus();\n        });\n      }\n    });\n  }\n  function handleJobs() {\n    setOpenJobs((d) => !d);\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          {isLoadingSearchGeneralJounal ? (\n            <LoadingButton loading={isLoadingSearchGeneralJounal} />\n          ) : (\n            <TextField\n              label=\"Search\"\n              size=\"small\"\n              name=\"search\"\n              value={state.search}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return openSearchGeneralJounal(\n                    (e.target as HTMLInputElement).value\n                  );\n                }\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"300px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n          {!save && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setSave(true);\n              }}\n              color=\"primary\"\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            loading={loadingGeneralJournalMutate}\n            disabled={!save}\n            onClick={handleOnSave}\n            color=\"success\"\n            variant=\"contained\"\n          >\n            Save\n          </LoadingButton>\n          {save && (\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    setSave(false);\n                    setHasSelected(false);\n                    setNewStateValue(dispatch, initialState);\n                    refetchGeneralJournalGenerator();\n                    setGeneralJournal([]);\n                    setSearchSelected(false);\n                    setEditTransaction({\n                      edit: false,\n                      updateId: \"\",\n                    });\n                  }\n                });\n              }}\n              disabled={!save || loadingGeneralJournalMutate}\n            >\n              Cancel\n            </LoadingButton>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              background: deepOrange[500],\n              \":hover\": {\n                background: deepOrange[600],\n              },\n            }}\n            onClick={handleVoid}\n            loading={loadingVoidGeneralJournalMutate}\n            disabled={!searchSelected}\n            variant=\"contained\"\n            startIcon={<NotInterestedIcon sx={{ width: 20, height: 20 }} />}\n          >\n            Void\n          </LoadingButton>\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              background: brown[500],\n              \":hover\": {\n                background: brown[600],\n              },\n            }}\n            onClick={handleJobs}\n            loading={isLoadingJob}\n            variant=\"contained\"\n            startIcon={<CardTravelIcon sx={{ width: 20, height: 20 }} />}\n          >\n            Jobs\n          </LoadingButton>\n        </div>\n        <div\n          style={{\n            fontSize: \"13px\",\n            border: \"1px solid #d4d4d8\",\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"50px\",\n            height: \"30px\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <p>\n            <span>Total Rows:</span> <strong>{generalJournal.length}</strong>\n          </p>\n          <p>\n            <span>Total Debit:</span> <strong>{state.totalDebit}</strong>\n          </p>\n          <p>\n            <span>Total Credit:</span> <strong>{state.totalCredit}</strong>\n          </p>\n          <p>\n            <span>Balance:</span>{\" \"}\n            <strong\n              style={{\n                color:\n                  parseFloat(state.totalBalance.replace(/,/g, \"\")) > 0\n                    ? \"red\"\n                    : \"black\",\n              }}\n            >\n              {state.totalBalance}\n            </strong>\n          </p>\n        </div>\n      </div>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          display: \"flex\",\n          marginTop: \"10px\",\n          gap: \"10px\",\n          padding: \"15px\",\n        }}\n      >\n        {loadingGeneralJournalGenerator ? (\n          <LoadingButton loading={loadingGeneralJournalGenerator} />\n        ) : (\n          <FormControl\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={!save || hasSelected}\n            sx={{\n              width: \"170px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel htmlFor=\"return-check-id-field\">Ref. No.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              disabled={!save || hasSelected}\n              fullWidth\n              label=\"Ref. No.\"\n              name=\"refNo\"\n              value={state.refNo}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleOnSave();\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"return-check-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    ref={reloadIDButtonRef}\n                    disabled={!save || hasSelected}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchGeneralJournalGenerator();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          fullWidth={false}\n          disabled={!save}\n          label=\"Date\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateEntry\",\n              value: value,\n            });\n          }}\n          value={new Date(state.dateEntry)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={datePickerRef}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n        />\n        <TextField\n          disabled={!save}\n          label=\"Explanation\"\n          size=\"small\"\n          name=\"explanation\"\n          value={state.explanation}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return handleOnSave();\n            }\n          }}\n          inputRef={explanationInputRef}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n          }}\n          sx={{\n            flex: 1,\n            height: \"27px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          marginTop: \"10px\",\n\n          padding: \"15px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          {isLoadingChartAccountSearch ? (\n            <LoadingButton loading={isLoadingChartAccountSearch} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={!save}\n              sx={{\n                width: \"150px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"chart-account-id\">Code</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                readOnly={true}\n                inputRef={codeInputRef}\n                disabled={!save}\n                fullWidth\n                label=\"Code\"\n                name=\"code\"\n                value={state.code}\n                onChange={handleInputChange}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openChartAccountSearch(state.code);\n                  }\n                  keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n                }}\n                id=\"chart-account-id\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={!save}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openChartAccountSearch(state.code);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n\n          <TextField\n            disabled={!save}\n            label=\"Account Name\"\n            size=\"small\"\n            name=\"acctName\"\n            value={state.acctName}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n              keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n            }}\n            InputProps={{\n              readOnly: true,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n\n          <TextField\n            disabled={!save}\n            label=\"Sub Account\"\n            size=\"small\"\n            name=\"subAcctName\"\n            value={state.subAcctName}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n              keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n            }}\n            InputProps={{\n              readOnly: true,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          {isLoadingPolicyIdClientIdRefId ? (\n            <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={!save}\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"policy-client-ref-id\">I.D</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                readOnly={true}\n                inputRef={idInputRef}\n                disabled={!save}\n                fullWidth\n                label=\"I.D\"\n                name=\"ClientName\"\n                value={state.ClientName}\n                onChange={handleInputChange}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openPolicyIdClientIdRefId(state.ClientName);\n                  }\n                  keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n                }}\n                id=\"policy-client-ref-id\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={!save}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openPolicyIdClientIdRefId(state.ClientName);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          <TextField\n            disabled={!save}\n            label=\"Debit\"\n            size=\"small\"\n            name=\"debit\"\n            value={state.debit}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                handleInputChange({\n                  target: { name: \"credit\", value: \"0.00\" },\n                });\n\n                return handleRowSave();\n              }\n              keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n            }}\n            onBlur={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"debit\",\n                value: parseFloat(\n                  (state.debit === \"\" ? \"0\" : state.debit).replace(/,/g, \"\")\n                ).toFixed(2),\n              });\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              inputRef: debitInputRef,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={!save}\n            label=\"Credit\"\n            size=\"small\"\n            name=\"credit\"\n            value={state.credit}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n              keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={(e) => {\n              e.preventDefault();\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"credit\",\n                value: parseFloat(\n                  (state.credit === \"\" ? \"0\" : state.credit).replace(/,/g, \"\")\n                ).toFixed(2),\n              });\n            }}\n          />\n          {isLoadingTransactionAccount ? (\n            <LoadingButton loading={isLoadingTransactionAccount} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={!save}\n              sx={{\n                width: \"130px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"tc\">TC</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                readOnly={true}\n                fullWidth\n                label=\"TC\"\n                name=\"TC_Code\"\n                value={state.TC_Code}\n                onChange={handleInputChange}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openTransactionAccount(state.TC_Code);\n                  }\n                  keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n                }}\n                id=\"tc\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={!save}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openTransactionAccount(state.TC_Code);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={!save}\n            label=\"Remarks\"\n            size=\"small\"\n            name=\"remarks\"\n            value={state.remarks}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n              keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: tcInputRef,\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <FormControl\n            size=\"small\"\n            variant=\"outlined\"\n            sx={{\n              width: \"120px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"label-selection-reason\">Vat Type</InputLabel>\n            <Select\n              labelId=\"label-selection-reason\"\n              value={state.vatType}\n              name=\"vatType\"\n              onChange={handleInputChange}\n              autoWidth\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              disabled={!save}\n            >\n              <MenuItem value=\"\"></MenuItem>\n              <MenuItem value=\"VAT\">VAT</MenuItem>\n              <MenuItem value={\"NON-VAT\"}>NON-VAT</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField\n            disabled={!save}\n            label=\"OR/Invoice No.\"\n            size=\"small\"\n            name=\"invoice\"\n            value={state.invoice}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n              keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: invoiceRef,\n            }}\n            sx={{\n              width: \"200px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </div>\n      </fieldset>\n      <div\n        ref={refParent}\n        className={mainId}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={\n              loadingGeneralJournalMutate ||\n              loadingGetSearchSelectedGeneralJournal ||\n              isLoadingJob\n            }\n            columns={selectedCollectionColumns}\n            rows={generalJournal}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                const resetValue = {\n                  code: \"\",\n                  acctName: \"\",\n                  subAcct: \"\",\n                  subAcctName: \"\",\n                  IDNo: \"\",\n                  ClientName: \"\",\n                  credit: \"\",\n                  debit: \"\",\n                  TC_Code: \"\",\n                  TC_Desc: \"\",\n                  remarks: \"\",\n                  vatType: \"NON-VAT\",\n                  invoice: \"\",\n                };\n                setNewStateValue(dispatch, { ...state, ...resetValue });\n                setEditTransaction({ edit: false, updateId: \"\" });\n                return;\n              }\n              if (code === \"Delete\" || code === \"Backspace\") {\n                Swal.fire({\n                  title: `Are you sure you want to delete?`,\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    return setGeneralJournal((d) => {\n                      return d.filter(\n                        (items: any) => items.TempID !== selection[0]\n                      );\n                    });\n                  }\n                });\n                return;\n              }\n\n              setNewStateValue(dispatch, {\n                ...rowSelected,\n                sub_refNo: state.sub_refNo,\n                refNo: state.refNo,\n                dateEntry: state.dateEntry,\n                explanation: state.explanation,\n                totalDebit: state.totalDebit,\n                totalCredit: state.totalCredit,\n                totalBalance: state.totalBalance,\n              });\n              setEditTransaction({\n                edit: true,\n                updateId: rowSelected.TempID,\n              });\n            }}\n          />\n        </Box>\n      </div>\n      <Modal open={openJobs} onClose={() => setOpenJobs(false)}>\n        <Box\n          sx={{\n            position: \"absolute\" as \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: 470,\n            bgcolor: \"background.paper\",\n            p: 4,\n          }}\n        >\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"10px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={() => setOpenJobs(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={{ marginBottom: \"20px\" }}\n          >\n            Jobs\n          </Typography>\n          <div\n            style={{\n              width: \"400px\",\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                marginBottom: \"10px\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                  sx={{\n                    width: \"200px\",\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  slotProps={{\n                    textField: {\n                      size: \"small\",\n                      name: \"\",\n                      InputLabelProps: {\n                        style: {\n                          fontSize: \"14px\",\n                        },\n                      },\n                      InputProps: {\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      },\n                    },\n                  }}\n                  label={\"Transaction Date: \"}\n                  views={[\"month\", \"year\"]}\n                  value={state.jobTransactionDate}\n                  onChange={(value) => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"jobTransactionDate\",\n                      value: value,\n                    });\n                  }}\n                />\n              </LocalizationProvider>\n              <FormControlLabel\n                sx={{\n                  height: \"30px\",\n                  \"& .MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    checked={state.jobAutoExp}\n                    onChange={(e) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"jobAutoExp\",\n                        value: !state.jobAutoExp,\n                      });\n                    }}\n                  />\n                }\n                label=\"Auto Explanation\"\n              />\n            </div>\n            <FormControl\n              fullWidth\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel id=\"label-selection-job-type\">Type of Job</InputLabel>\n              <Select\n                labelId=\"label-selection-job-type\"\n                value={state.jobType}\n                name=\"jobType\"\n                onChange={handleInputChange}\n                autoWidth\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                <MenuItem value={\"\"}> </MenuItem>\n                <MenuItem value={\"0\"}>Reversal of Accrued Interest </MenuItem>\n                <MenuItem value={\"1\"}>\n                  {\" \"}\n                  Income Recognition & Accrual of Interest\n                </MenuItem>\n                <MenuItem value={\"2\"}>Penalty Charges</MenuItem>\n                <MenuItem value={\"3\"}>Penalty Income</MenuItem>\n                <MenuItem value={\"4\"}>RPT Transaction (NIL-HN)</MenuItem>\n                <MenuItem value={\"5\"}>RPT Transaction (AMIFIN)</MenuItem>\n                <MenuItem value={\"6\"}>RPT Income</MenuItem>\n                <MenuItem value={\"7\"}>Monthly Accrual Expenses</MenuItem>\n                <MenuItem value={\"8\"}>Monthly Accrual Income</MenuItem>\n                <MenuItem value={\"9\"}>\n                  Production (Milestone Guarantee)\n                </MenuItem>\n                <MenuItem value={\"10\"}>\n                  Production (Liberty Insurance Co.)\n                </MenuItem>\n                <MenuItem value={\"11\"}>Production (Federal Phoenix)</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"30px\",\n              alignItems: \"flex-end\",\n              marginTop: \"20px\",\n            }}\n          >\n            <LoadingButton\n              loading={isLoadingJob}\n              color=\"success\"\n              variant=\"contained\"\n              onClick={() => mutateJob(state)}\n            >\n              Create Job\n            </LoadingButton>\n            <Button\n              // ref={checkModalSaveButton}\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => setOpenJobs(false)}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n      {ModalChartAccountSearch}\n      {ModalPolicyIdClientIdRefId}\n      {ModalTransactionAccount}\n      {ModalSearchGeneralJounal}\n    </div>\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z\"\n}), 'CardTravel');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","const brown = {\n  50: '#efebe9',\n  100: '#d7ccc8',\n  200: '#bcaaa4',\n  300: '#a1887f',\n  400: '#8d6e63',\n  500: '#795548',\n  600: '#6d4c41',\n  700: '#5d4037',\n  800: '#4e342e',\n  900: '#3e2723',\n  A100: '#d7ccc8',\n  A200: '#bcaaa4',\n  A400: '#8d6e63',\n  A700: '#5d4037'\n};\nexport default brown;","const deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;"],"names":["NumericFormatCustom","React","props","ref","onChange","other","_objectWithoutProperties","_excluded","_jsx","NumericFormat","_objectSpread","getInputRef","onValueChange","values","target","name","value","allowNegative","thousandSeparator","valueIsNumericString","initialState","sub_refNo","refNo","dateEntry","Date","explanation","code","acctName","subAcct","subAcctName","IDNo","ClientName","credit","debit","TC_Code","TC_Desc","remarks","vatType","invoice","BranchCode","totalDebit","totalCredit","totalBalance","jobAutoExp","jobTransactionDate","jobType","search","reducer","state","action","type","_defineProperty","field","selectedCollectionColumns","headerName","minWidth","flex","hide","GeneralJournal","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_mutationFn4","_refParent$current","mainId","generateRandomClass","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_useState","useState","_useState2","save","setSave","_useState3","_useState4","openJobs","setOpenJobs","_useState5","_useState6","hasSelected","setHasSelected","_useState7","_useState8","searchSelected","setSearchSelected","_useState9","edit","updateId","_useState10","editTransaction","setEditTransaction","_useState11","_useState12","generalJournal","setGeneralJournal","queryClient","useQueryClient","datePickerRef","useRef","reloadIDButtonRef","explanationInputRef","idInputRef","debitInputRef","tcInputRef","chartAccountSearchInput","IdsSearchInput","codeInputRef","table","invoiceRef","refParent","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","_response$data$genera","_response$data$genera2","_state$sub_refNo","response","department","generateGeneralJournalID","general_journal_id","loadingGeneralJournalGenerator","isLoading","refetchGeneralJournalGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","res","success","invalidateQueries","setNewStateValue","Swal","position","icon","title","message","timer","addGeneralJournalMutate","mutate","loadingGeneralJournalMutate","_useMutation2","_x2","_callee3","_context3","jobs","mutateJob","isLoadingJob","_useMutation3","_x3","_callee4","_context4","mutateVoidGeneralJournal","loadingVoidGeneralJournalMutate","_useMutation4","_x4","_callee5","_context5","selected","getSelectedSearchGeneralJournal","_selected$","getSearchSelectedGeneralJournal","loadingGetSearchSelectedGeneralJournal","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","width","uniqueId","responseDataKey","onSelected","selectedRowData","Source_No","closeSearchGeneralJounal","onCloseFunction","searchRef","ModalSearchGeneralJounal","ModalComponent","openSearchGeneralJounal","openModal","isLoadingSearchGeneralJounal","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountSearch","setTimeout","_idInputRef$current","current","focus","ModalChartAccountSearch","openChartAccountSearch","isLoadingChartAccountSearch","_useQueryModalTable3","_selectedRowData$0$Na","_selectedRowData$0$ID","_selectedRowData$0$Sh","console","log","Name","sub_account","ShortName","closePolicyIdClientIdRefId","_debitInputRef$curren","ModalPolicyIdClientIdRefId","openPolicyIdClientIdRefId","isLoadingPolicyIdClientIdRefId","_useQueryModalTable4","Code","Description","closeTransactionAccount","_tcInputRef$current","ModalTransactionAccount","openTransactionAccount","isLoadingTransactionAccount","useEffect","reduce","a","item","parseFloat","replace","toFixed","handleInputChange","e","_e$target","handleOnSave","then","wait","_explanationInputRef$","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleRowSave","isNaN","length","generateID","array","lastItem","TempID","parseInt","toString","match","padStart","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","d","taxableamt","toLocaleString","minimumFractionDigits","maximumFractionDigits","map","_toConsumableArray","inputtax","_codeInputRef$current","_jsxs","style","display","flexDirection","height","children","alignItems","columnGap","LoadingButton","loading","TextField","label","size","onKeyDown","preventDefault","InputProps","fontSize","sx","top","Button","variant","startIcon","AddIcon","id","onClick","color","disabled","CloseIcon","background","deepOrange","NotInterestedIcon","brown","CardTravelIcon","border","justifyContent","borderRadius","marginTop","gap","padding","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","fullWidth","readOnly","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","CustomDatePicker","timeout","_datePickerRef$curren","_datePickerRef$curren2","querySelector","click","clearTimeout","textField","InputLabelProps","inputRef","keyBoardSelectionTable","onBlur","inputComponent","Select","labelId","autoWidth","MenuItem","className","Box","getBoundingClientRect","overflowX","Table","rows","table_id","isSingleSelection","isRowFreeze","dataSelection","selection","rowSelected","filter","undefined","items","Modal","open","onClose","left","transform","bgcolor","p","right","Typography","component","marginBottom","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","slotProps","views","FormControlLabel","control","Checkbox","checked","obj","Object","entries","forEach","_ref","_ref2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","A100","A200","A400","A700"],"sourceRoot":""}