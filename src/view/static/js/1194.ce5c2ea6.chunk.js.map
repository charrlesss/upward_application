{"version":3,"file":"static/js/1194.ce5c2ea6.chunk.js","mappings":"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","sources":["components/ModalWithTable.tsx","components/Table.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/ManageAccounts.js","../node_modules/@mui/icons-material/Save.js"],"sourcesContent":["import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.67 13.02c-.22-.01-.44-.02-.67-.02-2.42 0-4.68.67-6.61 1.82-.88.52-1.39 1.5-1.39 2.53V20h9.26c-.79-1.13-1.26-2.51-1.26-4 0-1.07.25-2.07.67-2.98zM20.75 16c0-.22-.03-.42-.06-.63l1.14-1.01-1-1.73-1.45.49c-.32-.27-.68-.48-1.08-.63L18 11h-2l-.3 1.49c-.4.15-.76.36-1.08.63l-1.45-.49-1 1.73 1.14 1.01c-.03.21-.06.41-.06.63s.03.42.06.63l-1.14 1.01 1 1.73 1.45-.49c.32.27.68.48 1.08.63L16 21h2l.3-1.49c.4-.15.76-.36 1.08-.63l1.45.49 1-1.73-1.14-1.01c.03-.21.06-.41.06-.63zM17 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'ManageAccounts');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","_ref","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","_jsx","Modal","open","onClose","children","_jsxs","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","CustomizeAxiosFunc","_x","_x2","_x3","_CustomizeAxiosFunc","_asyncToGenerator","_regeneratorRuntime","mark","_callee","myAxios","user","link","search","_args","arguments","wrap","_context","prev","next","undefined","abrupt","get","url","queryUrlName","headers","Authorization","accessToken","stop","apply","_customizeAxiostool","_queryFn","uniqueId","responseDataKey","_ref$onSelected","onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","AuthContext","show","setShowModal","_useState3","_useState4","customizeAxiostool","_callee2","_args2","_context2","sent","_useQuery","useQuery","queryFn","_callee3","_context3","res","response","refetchOnWindowFocus","refetch","openModal","flushSync","then","success","alert","message","closeModal","ModalComponent","_searchRef$current2","_searchRef$current3","selectedIDs","selectedRowData","toString","codeCondfirmationAlert","_preConfirm","Swal","html","text","isUpdate","icon","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","confirmButtonColor","showLoaderOnConfirm","preConfirm","userCodeConfirmation","cb","error","allowOutsideClick","result","isConfirmed","isConfirm","isDeclined","saveCondfirmationAlert","cancelButtonColor","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r"],"sourceRoot":""}