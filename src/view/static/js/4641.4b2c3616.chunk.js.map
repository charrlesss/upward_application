{"version":3,"file":"static/js/4641.4b2c3616.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Accounting/ReturnCheck.tsx","hooks/useMultipleComponent.tsx","../node_modules/@mui/icons-material/CheckCircleOutline.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React, {\n  useReducer,\n  useState,\n  useRef,\n  createContext,\n  useContext,\n  useEffect,\n} from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Modal,\n  Box,\n  Typography,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, UseMutateFunction } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport { AxiosResponse } from \"axios\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { flushSync } from \"react-dom\";\nimport Table from \"../../../../components/Table\";\nimport useMultipleComponent from \"../../../../hooks/useMultipleComponent\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport {\n  generateRandomClass,\n  keyBoardSelectionTable,\n} from \"../../../../components/ModalWithTable\";\n\ninterface ReturnCheckContextType {\n  checkCollection: Array<any>;\n  checkSelectedCollection: Array<any>;\n  accountingEntry: Array<any>;\n  LoadingCheckList: boolean;\n  addReturnCheckLoading: boolean;\n  tableSelectedCheck: React.MutableRefObject<any>;\n  tableAccountingEntryCheck: React.MutableRefObject<any>;\n  tableSelectedCheckReturn: React.MutableRefObject<any>;\n  dispatchModal: React.Dispatch<any>;\n  modalSelectedMutate: UseMutateFunction<\n    AxiosResponse<any, any>,\n    unknown,\n    any,\n    unknown\n  >;\n  getSearchReturnCheckInfoLoading: boolean;\n  modalSelectedCheckLoading: boolean;\n  debitModalCollection: Array<any>;\n  myAxios: any;\n  user: any;\n  setCheckCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  openSelectedCheckModal: boolean;\n  setOpenSelectedCheckModal: React.Dispatch<React.SetStateAction<boolean>>;\n  currentStepIndex: number;\n  fireModal: (onConfirmCallback: any) => void;\n  stateModal: any;\n  datePickerModalRef: React.RefObject<HTMLElement>;\n  setAccountingEntry: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  handleModalInputChange: (e: any) => void;\n  LoadSelectedCheckInSelectedTable: (selectedRowValue: any) => void;\n  setCheckSelectedCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n}\nconst initialState = {\n  RefNo: \"\",\n  Sub_RefNo: \"\",\n  DateReturn: new Date(),\n  Explanation: \"Returned Checks\",\n  search: \"\",\n  returnMode: \"\",\n  searchCheckList: \"\",\n};\nconst initialModalState = {\n  ModalDateReturn: new Date().toLocaleDateString(),\n  ReturnReason: \"\",\n  AccountName: \"\",\n  AccountID: \"\",\n  Amount: \"\",\n  SubAccount: \"\",\n  BranchCode: \"\",\n  IDNo: \"\",\n  Short: \"\",\n  Check_No: \"\",\n  TempID: \"\",\n  updateAmount: \"\",\n  updateAmountID: \"\",\n  depoBankName: \"\",\n  depoBankIdentity: \"\",\n  subSelectedChecks: {},\n};\n\nconst ReturnCheckContext = createContext<ReturnCheckContextType>({\n  checkCollection: [],\n  checkSelectedCollection: [],\n  accountingEntry: [],\n  LoadingCheckList: false,\n  addReturnCheckLoading: false,\n  tableSelectedCheck: { current: {} },\n  tableAccountingEntryCheck: { current: {} },\n  tableSelectedCheckReturn: { current: {} },\n  dispatchModal: () => {},\n  modalSelectedMutate: () => {},\n  getSearchReturnCheckInfoLoading: false,\n  modalSelectedCheckLoading: false,\n  debitModalCollection: [],\n  myAxios: {},\n  user: {},\n  setCheckCollection: () => {},\n  openSelectedCheckModal: false,\n  setOpenSelectedCheckModal: () => {},\n  currentStepIndex: 0,\n  fireModal: () => {},\n  stateModal: {},\n  datePickerModalRef: { current: null },\n  setAccountingEntry: () => {},\n  handleModalInputChange: () => {},\n  LoadSelectedCheckInSelectedTable: () => {},\n  setCheckSelectedCollection: () => {},\n});\nconst buttons = [\n  {\n    title: \"Selected Check\",\n    index: 0,\n  },\n  {\n    title: \"Selected Check to be Returned\",\n    index: 1,\n  },\n  {\n    title: \"Accounting Entry\",\n    index: 2,\n  },\n];\nconst modalDebitEntryColumn = [\n  {\n    field: \"CRCode\",\n    headerName: \"Code\",\n    minWidth: 140,\n  },\n  {\n    field: \"CRTitle\",\n    headerName: \"Account Name\",\n    minWidth: 300,\n    flex: 1,\n  },\n  {\n    field: \"Credit\",\n    headerName: \"Amount\",\n    minWidth: 140,\n    align: \"right\",\n  },\n  {\n    field: \"CRLoanID\",\n    headerName: \"ID No.\",\n    minWidth: 140,\n  },\n  {\n    field: \"CRLoanName\",\n    headerName: \"Identity\",\n    minWidth: 300,\n    flex: 1,\n  },\n  {\n    field: \"SubAcctCode\",\n    headerName: \"Sub Account\",\n    minWidth: 160,\n    flex: 1,\n  },\n  {\n    field: \"SubAcctName\",\n    headerName: \"Sub Account Name\",\n    minWidth: 300,\n    flex: 1,\n  },\n  {\n    field: \"TempID\",\n    headerName: \"Sub Account Name\",\n    hide: true,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport default function ReturnCheck() {\n  const { ConfirmationModal, fireModal } = useConfirmation();\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [stateModal, dispatchModal] = useReducer(reducer, initialModalState);\n  const { currentStepIndex, step, goTo } = useMultipleComponent([\n    <SelectedCheck />,\n    <SelectedCheckToBeReturn />,\n    <AccountingEntry />,\n  ]);\n  const [checkCollection, setCheckCollection] = useState<GridRowSelectionModel>(\n    []\n  );\n  const [checkSelectedCollection, setCheckSelectedCollection] =\n    useState<GridRowSelectionModel>([]);\n  const [accountingEntry, setAccountingEntry] = useState<GridRowSelectionModel>(\n    []\n  );\n  const [debitModalCollection, setDebitModalCollection] =\n    useState<GridRowSelectionModel>([]);\n  const [openSelectedCheckModal, setOpenSelectedCheckModal] = useState(false);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const datePickerModalRef = useRef<HTMLElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n  const submitButton = useRef<HTMLButtonElement>(null);\n  const searchReturnChecks = useRef<HTMLInputElement>(null);\n  const tableSelectedCheck = useRef<any>(null);\n  const tableAccountingEntryCheck = useRef<any>(null);\n  const tableSelectedCheckReturn = useRef<any>(null);\n\n  const { isLoading: LoadingReturnCheckLoading, refetch: RefetchReturnCheck } =\n    useQuery({\n      queryKey: \"return-check-id\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-new-return-check-id`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        if (user?.department === \"UCSMI\") {\n          return;\n        }\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"RefNo\",\n          value: response.data.returnCheckID[0].return_check_id,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Sub_RefNo\",\n          value: response.data.returnCheckID[0].return_check_id,\n        });\n      },\n    });\n  const { isLoading: LoadingCheckList, refetch: refetchCheckList } = useQuery({\n    queryKey: \"check-list\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/accounting/get-check-list?checkListSearch=${state.searchCheckList}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setCheckCollection(response.data.checkList);\n    },\n  });\n  const { isLoading: modalSelectedCheckLoading, mutate: modalSelectedMutate } =\n    useMutation({\n      mutationKey: \"selected-check-modal\",\n      mutationFn: async (variables: any) =>\n        myAxios.post(\n          \"/task/accounting/get-modal-return-check-data\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        ),\n      onSuccess: (res) => {\n        const response = res as any;\n        const credit = response.data.credit[0];\n        const debit = response.data.debit[0];\n        console.log(response)\n        setDebitModalCollection(response.data.debit);\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"AccountName\",\n          value: credit.Acct_Title,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"AccountID\",\n          value: credit.Account_ID,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: debit.ID_No,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Short\",\n          value: debit.CRLoanName,\n        });\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"depoBankName\",\n          value: credit.IDNo,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"depoBankIdentity\",\n          value:credit.Identity  ,\n        });\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Short\",\n          value: debit.CRLoanName,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Short\",\n          value: debit.CRLoanName,\n        });\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"SubAccount\",\n          value: debit.SubAcctName,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"BranchCode\",\n          value: debit.SubAcctCode,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Amount\",\n          value: response.data.debit\n            .reduce(\n              (sum: any, obj: any) =>\n                sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n              0\n            )\n            .toLocaleString(\"en-US\", {\n              style: \"decimal\",\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            }),\n        });\n        setOpenSelectedCheckModal(true);\n      },\n    });\n  const {\n    isLoading: getSearchReturnCheckInfoLoading,\n    mutate: getSearchReturnCheckInfoMutate,\n  } = useMutation({\n    mutationKey: \"selected-search-return-check\",\n    mutationFn: async (variables: any) =>\n      myAxios.post(\n        \"/task/accounting/get-search-selected-checks-information\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selectedRow = response.data.selected[0];\n\n      const selectedChecks = response.data.selected.map((itm: any) => {\n        itm.Amount = parseFloat(\n          itm.Amount.toString().replace(/,/g, \"\")\n        ).toLocaleString(\"en-US\", {\n          style: \"decimal\",\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        return itm;\n      });\n      setAccountingEntry(response.data.accountingEntry);\n      setCheckSelectedCollection(selectedChecks);\n      setNewStateValue(dispatch, {\n        ...state,\n        ...{\n          RefNo: selectedRow.RC_No,\n          Sub_RefNo: selectedRow.RC_No,\n          DateReturn: selectedRow.RC_Date,\n          Explanation: selectedRow.Explanation,\n          returnMode: \"edit\",\n        },\n      });\n    },\n  });\n  const { isLoading: addReturnCheckLoading, mutate: addReturnCheckMutate } =\n    useMutation({\n      mutationKey: \"selected-check-modal\",\n      mutationFn: async (variables: any) =>\n        myAxios.post(\"/task/accounting/add-return-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (res) => {\n        const response = res as any;\n\n        if (response.data.isClearableError) {\n          RefetchReturnCheck();\n          refetchCheckList();\n          setCheckSelectedCollection([]);\n          setAccountingEntry([]);\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"returnMode\",\n            value: \"\",\n          });\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.data.message,\n            timer: 1500,\n          });\n        }\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    ModalComponent: ReturnChecksModal,\n    openModal: openReturnChecksModal,\n    isLoading: isLoadingReturnChecksModal,\n    closeModal: closeReturnChecksModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-return-checks\",\n      queryUrlName: \"searchReturnChecks\",\n    },\n    columns: [\n      { field: \"RC_Date\", headerName: \"Date\", width: 150 },\n      { field: \"RC_No\", headerName: \"Slip Code\", width: 170 },\n      {\n        field: \"Explanation\",\n        headerName: \"Bank Account\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"return-checks-search\",\n    uniqueId: \"RC_No\",\n    responseDataKey: \"returnCheckSearch\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"returnMode\",\n        value: \"edit\",\n      });\n      getSearchReturnCheckInfoMutate({\n        RC_No: selectedRowData[0].RC_No,\n      });\n      closeReturnChecksModal();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: searchReturnChecks,\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleModalInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatchModal({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave(e: any) {\n    e.preventDefault();\n\n    if (state.Explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide an explanation\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (checkSelectedCollection.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide return entry!\",\n        timer: 1500,\n      });\n    }\n    const credit = accountingEntry\n      .reduce(\n        (sum: any, obj: any) => sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n        0\n      )\n      .toLocaleString(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n    const debit = accountingEntry\n      .reduce(\n        (sum: any, obj: any) => sum + parseFloat(obj.Debit.replace(/,/g, \"\")),\n        0\n      )\n      .toLocaleString(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n\n    if (credit !== debit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Accounting entry must be equal in Debit and Credit amount!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          goTo(3);\n        });\n      });\n    }\n   \n    if (state.returnMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addReturnCheckMutate({\n            selected: checkSelectedCollection,\n            accountingEntry,\n            RefNo: state.RefNo,\n            Sub_RefNo: state.Sub_RefNo,\n            DateReturn: state.DateReturn,\n            Explanation: state.Explanation,\n            ModalDateReturn: stateModal.ModalDateReturn,\n            ReturnReason: stateModal.ReturnReason,\n            AccountName: stateModal.AccountName,\n            AccountID: stateModal.AccountID,\n            Amount: stateModal.Amount,\n            SubAccount: stateModal.SubAccount,\n            BranchCode: stateModal.BranchCode,\n            IDNo: stateModal.IDNo,\n            Short: stateModal.Short,\n            Check_No: stateModal.Check_No,\n            isUpdated: state.returnMode === \"edit\",\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addReturnCheckMutate({\n            selected: checkSelectedCollection,\n            accountingEntry,\n            RefNo: state.RefNo,\n            Sub_RefNo: state.Sub_RefNo,\n            DateReturn: state.DateReturn,\n            Explanation: state.Explanation,\n            ModalDateReturn: stateModal.ModalDateReturn,\n            ReturnReason: stateModal.ReturnReason,\n            AccountName: stateModal.AccountName,\n            AccountID: stateModal.AccountID,\n            Amount: stateModal.Amount,\n            SubAccount: stateModal.SubAccount,\n            BranchCode: stateModal.BranchCode,\n            IDNo: stateModal.IDNo,\n            Short: stateModal.Short,\n            Check_No: stateModal.Check_No,\n            isUpdated: state.returnMode === \"edit\",\n          });\n        },\n      });\n    }\n  }\n  function LoadSelectedCheckInSelectedTable(selectedRowValue: any) {\n    const selectedCheck = {\n      Temp_OR: `${selectedRowValue.Official_Receipt}${(\n        checkCollection.length + 1\n      )\n        .toString()\n        .padStart(2, \"0\")}`,\n      OR_NO: selectedRowValue.Official_Receipt,\n      OR_Date: selectedRowValue.Date_OR,\n      DepoSlip: selectedRowValue.DepoSlip,\n      DepoDate: selectedRowValue.DepoDate,\n      Check_No: selectedRowValue.Check_No,\n      Check_Date: selectedRowValue.Check_Date,\n      Amount: selectedRowValue.Amount,\n      Bank: selectedRowValue.Bank,\n      Bank_Account: selectedRowValue.BankAccount,\n      Reason: stateModal.ReturnReason,\n      Return_Date: new Date(stateModal.ModalDateReturn).toLocaleDateString(\n        \"en-US\",\n        {\n          month: \"2-digit\",\n          day: \"2-digit\",\n          year: \"numeric\",\n        }\n      ),\n      TempID: selectedRowValue.TempID,\n    };\n    setCheckSelectedCollection((d: any) => {\n      return [...d, selectedCheck];\n    });\n  }\n\n  const handleAccept = () => {\n    const totalDebit = debitModalCollection\n      .reduce(\n        (sum: any, obj: any) => sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n        0\n      )\n      .toLocaleString(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n\n    if (stateModal.Amount !== totalDebit) {\n      flushSync(() => {\n        setOpenSelectedCheckModal(false);\n      });\n      return Swal.fire({\n        text: \"Debit must eequal to Credit!\",\n        icon: \"warning\",\n        showCancelButton: false,\n        timer: 1500,\n        position: \"center\",\n      });\n    }\n    if (tableSelectedCheckReturn.current?.getSelectedRows()) {\n      const selectRow = tableSelectedCheckReturn.current?.getSelectedRows();\n      const selected = selectRow[selectRow.length - 1];\n      setCheckSelectedCollection((d) => {\n        d = d.filter((item: any) => item.TempID !== selected.TempID);\n        return d;\n      });\n      setAccountingEntry((d) => {\n        d = d.filter((item: any) => item.Check_No !== selected.Check_No);\n        return d;\n      });\n\n      LoadSelectedCheckInSelectedTable({\n        ...selected,\n        Official_Receipt: selected.OR_NO,\n        Date_OR: selected.OR_Date,\n        BankAccount: selected.Bank_Account,\n      });\n    } else {\n      const selectRow = tableSelectedCheck.current?.getSelectedRows();\n      const selected = selectRow[selectRow.length - 1];\n\n      LoadSelectedCheckInSelectedTable(selected);\n    }\n\n    function generateTempId(array: Array<any>) {\n      const lastItem =\n        array.length > 0 ? array[array.length - 1].TempID : \"000\";\n      const numericPart = (parseInt(lastItem.match(/\\d+/)[0]) + 1)\n        .toString()\n        .padStart(3, \"0\");\n      return numericPart;\n    }\n    //debit\n    debitModalCollection.forEach((item: any) => {\n      setAccountingEntry((d: any) => {\n        return [\n          ...d,\n          {\n            Code: item.CRCode,\n            AccountName: item.CRTitle,\n            Debit: item.Credit,\n            Credit: \"0.00\",\n            IDNo: item.ID_No,\n            Identity: item.Short,\n            SubAcct: item.SubAcctCode,\n            SubAcctName: item.SubAcctName,\n            Check_No: stateModal.subSelectedChecks.Check_No,\n            Bank: stateModal.subSelectedChecks.Bank,\n            Check_Date: stateModal.subSelectedChecks.Check_Date,\n            Check_Return: stateModal.ModalDateReturn,\n            Check_Reason: stateModal.ReturnReason,\n            PK: stateModal.subSelectedChecks.Check_No,\n            DepoDate: stateModal.subSelectedChecks.DepoDate,\n            Date_Collection: stateModal.subSelectedChecks.Date_Collection,\n            TempID: generateTempId(d),\n          },\n        ];\n      });\n    });\n\n    //cash\n    console.log(stateModal)\n    setAccountingEntry((d: any) => {\n      d = [\n        ...d,\n        {\n          Code: stateModal.AccountID,\n          AccountName: stateModal.AccountName,\n          Debit: \"0.00\",\n          Credit: stateModal.Amount,\n          IDNo: stateModal.depoBankName,\n          Identity: stateModal.depoBankIdentity,\n          SubAcct: stateModal.BranchCode,\n          SubAcctName: stateModal.SubAccount,\n          Check_No: stateModal.subSelectedChecks.Check_No,\n          Bank: stateModal.subSelectedChecks.Bank,\n          Check_Date: stateModal.subSelectedChecks.Check_Date,\n          Check_Return: stateModal.ModalDateReturn,\n          Check_Reason: stateModal.ReturnReason,\n          PK: stateModal.subSelectedChecks.Check_No,\n          DepoDate: stateModal.subSelectedChecks.DepoDate,\n          Date_Collection: stateModal.subSelectedChecks.Date_Collection,\n          TempID: generateTempId(d),\n        },\n      ];\n      return d;\n    });\n\n    setOpenSelectedCheckModal(false);\n    tableSelectedCheck.current?.removeSelection();\n    tableSelectedCheckReturn.current?.removeSelection();\n  };\n\n  const isFieldDisable = state.returnMode === \"\";\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {isLoadingReturnChecksModal ? (\n          <LoadingButton loading={isLoadingReturnChecksModal} />\n        ) : (\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return openReturnChecksModal(\n                  (e.target as HTMLInputElement).value\n                );\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n\n        {state.returnMode === \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            id=\"entry-header-save-button\"\n            onClick={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"returnMode\",\n                value: \"add\",\n              });\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={handleOnSave}\n          disabled={state.returnMode === \"\"}\n          startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          loading={addReturnCheckLoading}\n        >\n          {state.returnMode === \"edit\" ? \"Update\" : \"Save\"}\n        </LoadingButton>\n        {state.returnMode !== \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  refetchCheckList();\n                  setCheckSelectedCollection([]);\n                  setAccountingEntry([]);\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"returnMode\",\n                    value: \"\",\n                  });\n                  setNewStateValue(dispatch, initialState);\n                  RefetchReturnCheck();\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <br />\n      <form\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            return;\n          }\n        }}\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n        }}\n      >\n        {LoadingReturnCheckLoading ? (\n          <LoadingButton loading={LoadingReturnCheckLoading} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"200px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={isFieldDisable}\n          >\n            <InputLabel htmlFor=\"return-check-id-field\">Ref. No.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              // inputRef={checkBankRef}\n              disabled={isFieldDisable}\n              fullWidth\n              label=\"Ref. No.\"\n              name=\"RefNo\"\n              value={state.RefNo}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return handleOnSave(e);\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"return-check-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    ref={reloadIDButtonRef}\n                    disabled={isFieldDisable}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      RefetchReturnCheck();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          disabled={isFieldDisable}\n          label=\"Date Returned\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"DateReturn\",\n              value: value,\n            });\n          }}\n          value={new Date(state.DateReturn)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          datePickerRef={datePickerRef}\n        />\n        <TextField\n          disabled={isFieldDisable}\n          fullWidth\n          label=\"Explanation\"\n          size=\"small\"\n          name=\"Explanation\"\n          value={state.Explanation}\n          onChange={handleInputChange}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              return;\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n            readOnly: true,\n          }}\n          sx={{\n            flex: 1,\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n          inputRef={explanationInputRef}\n        />\n        <button\n          ref={submitButton}\n          style={{ display: \"none\" }}\n          type=\"submit\"\n        ></button>\n      </form>\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          {buttons.map((item, idx) => {\n            return (\n              <button\n                key={idx}\n                style={{\n                  border: \"none\",\n                  outline: \"none\",\n                  backgroundColor: \"rgba(51, 51, 51, 0.05)\",\n                  borderWidth: \"0\",\n                  color: currentStepIndex === idx ? \"#7e22ce\" : \"#333333\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                  lineHeight: \"20px\",\n                  listStyle: \"none\",\n                  margin: \"0\",\n                  padding: \"10px 12px\",\n                  textAlign: \"center\",\n                  transition: \"all 200ms\",\n                  verticalAlign: \"baseline\",\n                  whiteSpace: \"nowrap\",\n                  userSelect: \"none\",\n                  touchAction: \"manipulation\",\n                  position: \"relative\",\n                  overflow: \"hidden\",\n                }}\n                onClick={() => goTo(idx)}\n              >\n                <span\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    background: \"rgba(206, 214, 211, 0.18)\",\n                    transition: \"all 200ms\",\n                    transform: slideAnimation(currentStepIndex, idx),\n                  }}\n                ></span>\n                {item.title}\n              </button>\n            );\n          })}\n        </div>\n        <div>\n          Total Amount:{\" \"}\n          <strong>\n            {accountingEntry\n              .reduce(\n                (sum: any, obj: any) =>\n                  sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n                0\n              )\n              .toLocaleString(\"en-US\", {\n                style: \"decimal\",\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n          </strong>\n        </div>\n      </div>\n      <br />\n      <ReturnCheckContext.Provider\n        value={{\n          checkCollection,\n          checkSelectedCollection,\n          accountingEntry,\n          LoadingCheckList,\n          addReturnCheckLoading,\n          tableSelectedCheck,\n          dispatchModal,\n          modalSelectedMutate,\n          getSearchReturnCheckInfoLoading,\n          debitModalCollection,\n          tableAccountingEntryCheck,\n          tableSelectedCheckReturn,\n          modalSelectedCheckLoading,\n          myAxios,\n          user,\n          setCheckCollection,\n          openSelectedCheckModal,\n          setOpenSelectedCheckModal,\n          currentStepIndex,\n          fireModal,\n          stateModal,\n          datePickerModalRef,\n          setAccountingEntry,\n          handleModalInputChange,\n          LoadSelectedCheckInSelectedTable,\n          setCheckSelectedCollection,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n          }}\n          id=\"container\"\n        >\n          {step}\n          {ReturnChecksModal}\n          <Modal\n            open={openSelectedCheckModal}\n            onClose={() => {\n              setOpenSelectedCheckModal(false);\n              tableSelectedCheck.current?.removeSelection();\n              tableSelectedCheckReturn.current?.removeSelection();\n            }}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n            onKeyDown={(e) => {\n              if (\n                currentStepIndex === 1 &&\n                (e.code === \"Backspace\" || e.code === \"Delete\")\n              ) {\n                setOpenSelectedCheckModal(false);\n\n                fireModal({\n                  onConfirmCallback: () => {\n                    setCheckSelectedCollection((d) =>\n                      d.filter((itm: any) => {\n                        return (\n                          itm.TempID.toString() !== stateModal.TempID.toString()\n                        );\n                      })\n                    );\n                    setAccountingEntry((d) => {\n                      return d.filter((itm: any) => {\n                        return (\n                          itm.Check_No.split(\"-\")[0] !==\n                          stateModal.Check_No.toString()\n                        );\n                      });\n                    });\n                  },\n\n                  onCancelCallback: () => {\n                    setOpenSelectedCheckModal(false);\n                    tableSelectedCheck.current?.removeSelection();\n                    tableSelectedCheckReturn.current?.removeSelection();\n                  },\n                });\n              }\n              if (\n                currentStepIndex === 0 &&\n                (e.code === \"Enter\" || e.code === \"NumpadEnter\")\n              ) {\n                handleAccept();\n              }\n            }}\n          >\n            <Box\n              sx={{\n                position: \"absolute\" as \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                width: \"80%\",\n                bgcolor: \"background.paper\",\n                p: 3,\n                boxSizing: \"border-box\",\n              }}\n            >\n              <IconButton\n                style={{\n                  position: \"absolute\",\n                  top: \"10px\",\n                  right: \"10px\",\n                }}\n                // disabled={!addNew}\n                aria-label=\"search-client\"\n                onClick={() => {\n                  setOpenSelectedCheckModal(false);\n                  tableSelectedCheck.current?.removeSelection();\n                  tableSelectedCheckReturn.current?.removeSelection();\n                  dispatchModal({\n                    type: \"UPDATE_FIELD\",\n                    field: \"TempID\",\n                    value: \"\",\n                  });\n                  dispatchModal({\n                    type: \"UPDATE_FIELD\",\n                    field: \"subSelectedChecks\",\n                    value: {},\n                  });\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography id=\"modal-modal-title\" variant=\"body1\" component=\"h2\">\n                Return Detail and Accounting Entry (Check No.:\n                <strong>{stateModal.Check_No}</strong>)\n              </Typography>\n              <fieldset\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  padding: \"10px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  marginTop: \"20px\",\n                }}\n              >\n                <legend style={{ fontSize: \"14px\" }}>Return Detail</legend>\n                <FormControl\n                  size=\"small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  sx={{\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                  }}\n                >\n                  <InputLabel id=\"label-selection-reason\">\n                    Return Reason\n                  </InputLabel>\n                  <Select\n                    labelId=\"label-selection-reason\"\n                    value={stateModal.ReturnReason}\n                    name=\"ReturnReason\"\n                    onChange={handleModalInputChange}\n                    autoWidth\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    <MenuItem value=\"DAIF\">DAIF</MenuItem>\n                    <MenuItem value={\"DAUD\"}>DAUD</MenuItem>\n                    <MenuItem value={\"AC\"}>ACCOUNT CLOSED</MenuItem>\n                    <MenuItem value={\"SPO\"}>SPO</MenuItem>\n                    <MenuItem value={\"SD\"}>SIGNATURE DIFFERS</MenuItem>\n                  </Select>\n                </FormControl>\n                <CustomDatePicker\n                  fullWidth={true}\n                  label=\"Date Returned\"\n                  onChange={(value: any) => {\n                    dispatchModal({\n                      type: \"UPDATE_FIELD\",\n                      field: \"ModalDateReturn\",\n                      value: value.toLocaleDateString(),\n                    });\n                  }}\n                  value={new Date(stateModal.ModalDateReturn)}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      const timeout = setTimeout(() => {\n                        datePickerModalRef.current\n                          ?.querySelector(\"button\")\n                          ?.click();\n                        clearTimeout(timeout);\n                      }, 150);\n                    }\n                  }}\n                  datePickerRef={datePickerModalRef}\n                  textField={{\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"14px\",\n                      },\n                    },\n                    InputProps: {\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    },\n                  }}\n                />\n              </fieldset>\n              <fieldset\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  padding: \"10px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <legend style={{ fontSize: \"14px\" }}>Credit Entry</legend>\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"10px\",\n                    width: \"100%\",\n                  }}\n                >\n                  <TextField\n                    size=\"small\"\n                    label=\"Account Name\"\n                    name=\"AccountName\"\n                    value={stateModal.Short}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      flex: 1,\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    label=\"Account ID\"\n                    name=\"AccountID\"\n                    value={stateModal.AccountID}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: {\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        width: \"200px\",\n                      },\n                    }}\n                    sx={{\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    label=\"Amount\"\n                    name=\"Amount\"\n                    value={stateModal.Amount}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: {\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        width: \"200px\",\n                      },\n                    }}\n                    sx={{\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    label=\"Sub Account\"\n                    name=\"SubAccount\"\n                    value={stateModal.SubAccount}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: {\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        width: \"200px\",\n                      },\n                    }}\n                    sx={{\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                </div>\n              </fieldset>\n              <fieldset\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <legend style={{ fontSize: \"14px\" }}>Debit Entry</legend>\n                <div\n                  style={{\n                    marginTop: \"10px\",\n                    width: \"100%\",\n                    position: \"relative\",\n                    height: \"300px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      marginTop: \"10px\",\n                      width: \"100%\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Box\n                      style={{\n                        height: \"300px\",\n                        width: \"100%\",\n                        overflowX: \"scroll\",\n                        position: \"absolute\",\n                      }}\n                    >\n                      <Table\n                        isLoading={modalSelectedCheckLoading}\n                        columns={modalDebitEntryColumn}\n                        rows={debitModalCollection}\n                        table_id={\"TempID\"}\n                        isSingleSelection={true}\n                        isRowFreeze={true}\n                        checkboxSelection={false}\n                        footerChildren={() => <DebitFooterComponent />}\n                        footerPaginationPosition=\"left-right\"\n                        showFooterSelectedCount={false}\n                      />\n                    </Box>\n                  </div>\n                </div>\n              </fieldset>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  gap: \"20px\",\n                  marginTop: \"15px\",\n                }}\n              >\n                <div>\n                  <Button\n                    color=\"success\"\n                    variant=\"contained\"\n                    onClick={handleAccept}\n                    style={{ marginRight: \"10px\" }}\n                    startIcon={<CheckCircleOutlineIcon />}\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"14px\",\n                      textTransform: \"none\",\n                    }}\n                  >\n                    Accept\n                  </Button>\n                  <Button\n                    color=\"error\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setOpenSelectedCheckModal(false);\n                      tableSelectedCheck.current?.removeSelection();\n                      tableSelectedCheckReturn.current?.removeSelection();\n\n                      dispatchModal({\n                        type: \"UPDATE_FIELD\",\n                        field: \"TempID\",\n                        value: \"\",\n                      });\n                      dispatchModal({\n                        type: \"UPDATE_FIELD\",\n                        field: \"subSelectedChecks\",\n                        value: {},\n                      });\n                      // setIsSelectedFromTobeReturnTable(false);\n                    }}\n                    startIcon={<NotInterestedIcon />}\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"14px\",\n                      textTransform: \"none\",\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </Box>\n          </Modal>\n          <ConfirmationModal />\n        </div>\n      </ReturnCheckContext.Provider>\n    </div>\n  );\n}\n\nconst styles: any = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  modal: {\n    backgroundColor: \"#fff\",\n    padding: \"20px\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    width: \"300px\",\n  },\n  button: {\n    margin: \"0 10px\",\n    background: \"white\",\n    fontFamily: '\"Roboto\", sans-serif',\n    color: \"#475569\",\n    padding: \"5px 10px\",\n  },\n};\n\nconst useConfirmation = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [onConfirm, setOnConfirm] = useState(() => () => {});\n  const [onCancel, setOnCancel] = useState(() => () => {});\n\n  const fireModal = (p: any) => {\n    setIsOpen(true);\n    setOnConfirm(() => p.onConfirmCallback);\n    setOnCancel(() => p.onCancelCallback);\n  };\n\n  const closeModal = () => {\n    onCancel();\n    setIsOpen(false);\n  };\n\n  const confirm = () => {\n    onConfirm();\n    setIsOpen(false);\n  };\n\n  const ConfirmationModal = () => {\n    const okRef = useRef<HTMLButtonElement>(null);\n    useEffect(() => {\n      if (isOpen) {\n        okRef.current?.focus();\n      }\n    }, []);\n    if (!isOpen) return null;\n\n    return (\n      <div style={styles.overlay}>\n        <div style={styles.modal}>\n          <p style={{ color: \"black\" }}>Do you want to proceed?</p>\n          <button ref={okRef} onClick={confirm} style={styles.button}>\n            Yes\n          </button>\n          <button onClick={closeModal} style={styles.button}>\n            No\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return {\n    ConfirmationModal,\n    fireModal,\n  };\n};\nfunction SelectedCheck() {\n  const {\n    checkCollection,\n    LoadingCheckList,\n    dispatchModal,\n    modalSelectedMutate,\n    checkSelectedCollection,\n    getSearchReturnCheckInfoLoading,\n    tableSelectedCheck,\n    myAxios,\n    setCheckCollection,\n    user,\n  } = useContext(ReturnCheckContext);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const checkColumns = [\n    {\n      field: \"DepoSlip\",\n      headerName: \"Deposit Slip\",\n      minWidth: 140,\n    },\n    {\n      field: \"DepoDate\",\n      headerName: \"Deposit Date\",\n      minWidth: 140,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 140,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 140,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank\",\n      headerName: \"Bank\",\n      minWidth: 300,\n    },\n  ];\n\n  const { isLoading: LoadingCheckListOnSearch, mutate } = useMutation({\n    mutationKey: \"check-list\",\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `/task/accounting/get-check-list?checkListSearch=${variable.searchCheckList}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setCheckCollection(response.data.checkList);\n    },\n  });\n  const mainId = generateRandomClass();\n\n  return (\n    <React.Fragment>\n      <TextField\n        inputRef={inputRef}\n        label=\"Search by check no.\"\n        name=\"searchCheckList\"\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            mutate({\n              searchCheckList: inputRef.current?.value,\n            });\n          }\n          // if(e.code === 'ArrowDown'){\n          //   alert('qweqwe')\n          // }\n\n          keyBoardSelectionTable(\n            e,\n            mainId,\n            inputRef?.current as HTMLInputElement\n          );\n        }}\n        InputProps={{\n          style: { height: \"27px\", fontSize: \"14px\" },\n\n          inputRef: inputRef,\n        }}\n        sx={{\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-13px\" },\n        }}\n      />\n      <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n        <div\n          className={mainId}\n          style={{\n            height: `${\n              (document.getElementById(\"container\")?.getBoundingClientRect()\n                .height as number) - 30\n            }px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={tableSelectedCheck}\n            isLoading={\n              LoadingCheckList ||\n              getSearchReturnCheckInfoLoading ||\n              LoadingCheckListOnSearch\n            }\n            columns={checkColumns}\n            rows={checkCollection}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={true}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                return;\n              }\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"subSelectedChecks\",\n                value: {\n                  Check_No: rowSelected.Check_No,\n                  Bank: rowSelected.Bank,\n                  Check_Date: rowSelected.Check_Date,\n                  PK: rowSelected.Check_No,\n                  DepoDate: rowSelected.DepoDate,\n                  Date_Collection: rowSelected.Date_OR,\n                  TempID: rowSelected.TempID,\n                },\n              });\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"ReturnReason\",\n                value: \"DAIF\",\n              });\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"TempID\",\n                value: rowSelected.TempID,\n              });\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"Check_No\",\n                value: rowSelected.Check_No,\n              });\n\n              modalSelectedMutate({\n                BankAccount: rowSelected.BankAccount,\n                Official_Receipt: rowSelected.Official_Receipt,\n              });\n            }}\n            isRowSelectable={(params) =>\n              !checkSelectedCollection\n                .map((item: any) => item.Check_No)\n                .includes(params.row.Check_No)\n            }\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\nfunction SelectedCheckToBeReturn() {\n  const {\n    dispatchModal,\n    modalSelectedMutate,\n    checkSelectedCollection,\n    tableSelectedCheckReturn,\n  } = useContext(ReturnCheckContext);\n\n  const selectedCheckToBeReturnColumns = [\n    {\n      field: \"OR_NO\",\n      headerName: \"OR No.\",\n      minWidth: 170,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"DepoSlip\",\n      headerName: \"Deposit Slip\",\n      minWidth: 160,\n    },\n    {\n      field: \"DepoDate\",\n      headerName: \"Deposit Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank\",\n      headerName: \"Bank/Branch\",\n      minWidth: 160,\n    },\n    {\n      field: \"Bank_Account\",\n      headerName: \"Bank Account\",\n      minWidth: 160,\n    },\n    {\n      field: \"Reason\",\n      headerName: \"Reason\",\n      minWidth: 160,\n    },\n    {\n      field: \"Return_Date\",\n      headerName: \"Return Date\",\n      minWidth: 160,\n    },\n  ];\n\n  return (\n    <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n      <Box\n        style={{\n          height: `${\n            (document.getElementById(\"container\")?.getBoundingClientRect()\n              .height as number) - 30\n          }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={tableSelectedCheckReturn}\n          isLoading={false}\n          columns={selectedCheckToBeReturnColumns}\n          rows={checkSelectedCollection}\n          table_id={\"TempID\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.TempID === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"subSelectedChecks\",\n              value: {\n                Check_No: rowSelected.Check_No,\n                Bank: rowSelected.Bank,\n                Check_Date: rowSelected.Check_Date,\n                PK: rowSelected.Check_No,\n                DepoDate: rowSelected.DepoDate,\n                Date_Collection: rowSelected.OR_Date,\n                TempID: rowSelected.TempID,\n              },\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"ReturnReason\",\n              value: rowSelected.Reason,\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"ModalDateReturn\",\n              value: rowSelected.Return_Date,\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"TempID\",\n              value: rowSelected.TempID,\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"Check_No\",\n              value: rowSelected.Check_No,\n            });\n\n            modalSelectedMutate({\n              BankAccount: rowSelected.Bank_Account,\n              Official_Receipt: rowSelected.OR_NO,\n            });\n          }}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction AccountingEntry() {\n  const { accountingEntry, tableAccountingEntryCheck } =\n    useContext(ReturnCheckContext);\n  const accountingentryColumns = [\n    {\n      field: \"Code\",\n      headerName: \"Code\",\n      minWidth: 170,\n    },\n    {\n      field: \"AccountName\",\n      headerName: \"Account Name\",\n      minWidth: 160,\n    },\n    {\n      field: \"Debit\",\n      headerName: \"Debit\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Credit\",\n      headerName: \"Credit\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"IDNo\",\n      headerName: \"ID No.\",\n      minWidth: 160,\n    },\n    {\n      field: \"Identity\",\n      headerName: \"Identity\",\n      minWidth: 160,\n    },\n    {\n      field: \"SubAcct\",\n      headerName: \"Sub Acct\",\n      minWidth: 160,\n    },\n    {\n      field: \"SubAcctName\",\n      headerName: \"Sub Acct Name\",\n      minWidth: 300,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 160,\n    },\n    {\n      field: \"Bank\",\n      headerName: \"Bank/Branch\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Return\",\n      headerName: \"Check Return\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Reason\",\n      headerName: \"Check Reason\",\n      minWidth: 160,\n    },\n    {\n      field: \"PK\",\n      headerName: \"PK\",\n      minWidth: 160,\n    },\n    {\n      field: \"DepoDate\",\n      headerName: \"Date Deposit\",\n      minWidth: 160,\n    },\n    {\n      field: \"Date_Collection\",\n      headerName: \"Date Collection\",\n      minWidth: 160,\n    },\n  ];\n  return (\n    <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n      <Box\n        style={{\n          height: `${\n            (document.getElementById(\"container\")?.getBoundingClientRect()\n              .height as number) - 30\n          }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={tableAccountingEntryCheck}\n          isLoading={false}\n          columns={accountingentryColumns}\n          rows={accountingEntry}\n          table_id={\"TempID\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          checkboxSelection={false}\n          footerPaginationPosition=\"left-right\"\n          footerChildren={() => <AccountingEntryFooterComponent />}\n          showFooterSelectedCount={false}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\nfunction DebitFooterComponent() {\n  const { debitModalCollection } = useContext(ReturnCheckContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <strong>\n        Total:{\" \"}\n        {debitModalCollection\n          .reduce(\n            (sum: any, obj: any) =>\n              sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      </strong>\n    </Box>\n  );\n}\nfunction AccountingEntryFooterComponent() {\n  const { accountingEntry } = useContext(ReturnCheckContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <span style={{ marginRight: \"10px\" }}>Total:</span>\n      <input\n        style={{\n          fontWeight: \"bold\",\n        }}\n        type=\"text\"\n        readOnly={true}\n        value={accountingEntry\n          .reduce(\n            (sum: any, obj: any) =>\n              sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      />\n      <input\n        style={{\n          fontWeight: \"bold\",\n        }}\n        type=\"text\"\n        readOnly={true}\n        value={accountingEntry\n          .reduce(\n            (sum: any, obj: any) =>\n              sum + parseFloat(obj.Debit.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      />\n    </Box>\n  );\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\nexports.default = _default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["initialState","RefNo","Sub_RefNo","DateReturn","Date","Explanation","search","returnMode","searchCheckList","initialModalState","ModalDateReturn","toLocaleDateString","ReturnReason","AccountName","AccountID","Amount","SubAccount","BranchCode","IDNo","Short","Check_No","TempID","updateAmount","updateAmountID","depoBankName","depoBankIdentity","subSelectedChecks","ReturnCheckContext","createContext","checkCollection","checkSelectedCollection","accountingEntry","LoadingCheckList","addReturnCheckLoading","tableSelectedCheck","current","tableAccountingEntryCheck","tableSelectedCheckReturn","dispatchModal","modalSelectedMutate","getSearchReturnCheckInfoLoading","modalSelectedCheckLoading","debitModalCollection","myAxios","user","setCheckCollection","openSelectedCheckModal","setOpenSelectedCheckModal","currentStepIndex","fireModal","stateModal","datePickerModalRef","setAccountingEntry","handleModalInputChange","LoadSelectedCheckInSelectedTable","setCheckSelectedCollection","buttons","title","index","modalDebitEntryColumn","field","headerName","minWidth","flex","align","hide","reducer","state","action","type","_objectSpread","_defineProperty","value","ReturnCheck","_queryFn","_queryFn2","_mutationFn","_mutationFn2","_mutationFn3","_useConfirmation","useConfirmation","ConfirmationModal","_useContext","useContext","AuthContext","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_useReducer3","_useReducer4","_useMultipleComponent","useMultipleComponent","_jsx","SelectedCheck","SelectedCheckToBeReturn","AccountingEntry","step","goTo","_useState","useState","_useState2","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setDebitModalCollection","_useState9","_useState10","datePickerRef","useRef","reloadIDButtonRef","explanationInputRef","submitButton","searchReturnChecks","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","department","returnCheckID","return_check_id","LoadingReturnCheckLoading","isLoading","RefetchReturnCheck","refetch","_useQuery2","_callee2","_context2","res","checkList","refetchCheckList","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee3","variables","_context3","post","credit","debit","console","log","Acct_Title","Account_ID","ID_No","CRLoanName","Identity","SubAcctName","SubAcctCode","reduce","sum","obj","parseFloat","Credit","replace","toLocaleString","style","minimumFractionDigits","maximumFractionDigits","mutate","_useMutation2","_x2","_callee4","_context4","selectedRow","selected","selectedChecks","map","itm","toString","setNewStateValue","RC_No","RC_Date","getSearchReturnCheckInfoMutate","_useMutation3","_x3","_callee5","_context5","isClearableError","Swal","position","icon","message","timer","addReturnCheckMutate","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","width","uniqueId","responseDataKey","onSelected","selectedRowData","closeReturnChecksModal","onCloseFunction","searchRef","ReturnChecksModal","ModalComponent","openReturnChecksModal","openModal","isLoadingReturnChecksModal","closeModal","handleInputChange","e","_e$target","target","name","_e$target2","handleOnSave","preventDefault","then","result","wait","_explanationInputRef$","focus","length","Debit","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","isUpdated","saveCondfirmationAlert","isConfirm","selectedRowValue","selectedCheck","Temp_OR","Official_Receipt","padStart","OR_NO","OR_Date","Date_OR","DepoSlip","DepoDate","Check_Date","Bank","Bank_Account","BankAccount","Reason","Return_Date","month","day","year","d","_toConsumableArray","handleAccept","_tableSelectedCheckRe","_tableSelectedCheck$c2","_tableSelectedCheckRe3","totalDebit","flushSync","text","showCancelButton","getSelectedRows","_tableSelectedCheckRe2","selectRow","filter","item","_tableSelectedCheck$c","generateTempId","array","lastItem","parseInt","match","forEach","Code","CRCode","CRTitle","SubAcct","Check_Return","Check_Reason","PK","Date_Collection","removeSelection","isFieldDisable","_jsxs","display","flexDirection","height","children","alignItems","columnGap","LoadingButton","loading","TextField","label","size","onChange","onKeyDown","code","InputProps","fontSize","sx","top","Button","variant","startIcon","AddIcon","id","onClick","color","disabled","SaveIcon","CloseIcon","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","gap","FormControl","background","zIndex","padding","InputLabel","htmlFor","OutlinedInput","fullWidth","readOnly","endAdornment","InputAdornment","IconButton","ref","edge","RestartAltIcon","CustomDatePicker","timeout","setTimeout","_datePickerRef$curren","_datePickerRef$curren2","querySelector","click","clearTimeout","textField","InputLabelProps","inputRef","justifyContent","idx","border","outline","backgroundColor","borderWidth","cursor","fontFamily","fontWeight","lineHeight","listStyle","margin","textAlign","transition","verticalAlign","whiteSpace","userSelect","touchAction","overflow","bottom","left","right","transform","slideAnimation","Provider","Modal","open","onClose","_tableSelectedCheck$c3","_tableSelectedCheckRe4","onConfirmCallback","split","onCancelCallback","_tableSelectedCheck$c4","_tableSelectedCheckRe5","Box","bgcolor","p","boxSizing","_tableSelectedCheck$c5","_tableSelectedCheckRe6","Typography","component","borderRadius","marginTop","Select","labelId","autoWidth","MenuItem","_datePickerModalRef$c","_datePickerModalRef$c2","overflowX","Table","rows","table_id","isSingleSelection","isRowFreeze","checkboxSelection","footerChildren","DebitFooterComponent","footerPaginationPosition","showFooterSelectedCount","marginRight","CheckCircleOutlineIcon","textTransform","_tableSelectedCheck$c6","_tableSelectedCheckRe7","NotInterestedIcon","styles","overlay","modal","button","_useState11","_useState12","isOpen","setIsOpen","_useState13","_useState14","onConfirm","setOnConfirm","_useState15","_useState16","onCancel","setOnCancel","confirm","okRef","useEffect","_okRef$current","_mutationFn4","_document$getElementB","_useContext2","_useMutation4","_x4","_callee6","variable","_context6","LoadingCheckListOnSearch","mainId","generateRandomClass","React","_inputRef$current","keyBoardSelectionTable","className","document","getElementById","getBoundingClientRect","dataSelection","selection","rowSelected","undefined","isRowSelectable","params","includes","row","_document$getElementB2","_useContext3","_document$getElementB3","_useContext4","AccountingEntryFooterComponent","Object","entries","_ref","_ref2","activeButton","px","py","borderTop","steps","setCurrentStepIndex","back","i","isFirstStep","isLastStep","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","_objectWithoutProperties","source","excluded","key","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}