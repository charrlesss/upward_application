{"version":3,"file":"static/js/1861.0f07d19b.chunk.js","mappings":"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","sources":["components/NumberFormat.tsx","feautures/Admin/Task/Accounting/CashDisbursement.tsx","lib/formatDate.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/material/colors/deepOrange.js"],"sourcesContent":["import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import { useReducer, useContext, useState, useRef, useEffect } from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Select,\n  MenuItem,\n  Modal,\n  Typography,\n  Box,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { deepOrange } from \"@mui/material/colors\";\nimport formatDate from \"../../../../lib/formatDate\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\n\nconst initialState = {\n  sub_refNo: \"\",\n  refNo: \"\",\n  dateEntry: new Date(),\n  explanation: \"\",\n  particulars: \"\",\n\n  code: \"\",\n  acctName: \"\",\n  subAcct: \"\",\n  subAcctName: \"\",\n  IDNo: \"\",\n  ClientName: \"\",\n  address: \"\",\n  credit: \"\",\n  debit: \"\",\n  checkNo: \"\",\n  checkDate: new Date(),\n  TC_Code: \"\",\n  TC_Desc: \"\",\n  remarks: \"\",\n  Payto: \"\",\n  vatType: \"NON-VAT\",\n  invoice: \"\",\n  BranchCode: \"HO\",\n  totalDebit: \"\",\n  totalCredit: \"\",\n  totalBalance: \"\",\n\n  jobAutoExp: false,\n  jobTransactionDate: new Date(),\n  jobType: \"\",\n  search: \"\",\n  cashMode: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst selectedCollectionColumns = [\n  { field: \"code\", headerName: \"Code\", minWidth: 150 },\n  { field: \"acctName\", headerName: \"Account Name\", minWidth: 300 },\n  {\n    field: \"subAcctName\",\n    headerName: \"Sub Account\",\n    flex: 1,\n    minWidth: 170,\n  },\n  { field: \"ClientName\", headerName: \"Name\", flex: 1, minWidth: 300 },\n  { field: \"debit\", headerName: \"Debit\", minWidth: 80 },\n  { field: \"credit\", headerName: \"Credit\", minWidth: 100 },\n  { field: \"checkNo\", headerName: \"Check No\", minWidth: 80 },\n  { field: \"checkDate\", headerName: \"Check Date\", minWidth: 100 },\n  // hide\n  { field: \"TC_Code\", headerName: \"TC\", minWidth: 100 },\n  {\n    field: \"remarks\",\n    headerName: \"Remarks\",\n    flex: 1,\n    minWidth: 300,\n  },\n  { field: \"Payto\", headerName: \"Payto\", minWidth: 300 },\n  { field: \"vatType\", headerName: \"Vat Type\", minWidth: 100 },\n  { field: \"invoice\", headerName: \"Invoice\", flex: 1, minWidth: 200 },\n  { field: \"TempID\", headerName: \"TempId\", hide: true },\n  { field: \"IDNo\", headerName: \"I.D.\", flex: 1, minWidth: 300, hide: true },\n  {\n    field: \"BranchCode\",\n    headerName: \"BranchCode\",\n    flex: 1,\n    minWidth: 300,\n    hide: true,\n  },\n  {\n    field: \"addres\",\n    headerName: \"addres\",\n    hide: true,\n  },\n];\n\nexport default function CashDisbursement() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [openJobs, setOpenJobs] = useState(false);\n  const [isPayToEnter, setIsPayToEnter] = useState(false);\n  const [hasSelected, setHasSelected] = useState(false);\n  const [editTransaction, setEditTransaction] = useState({\n    edit: false,\n    updateId: \"\",\n  });\n  const [cashDisbursement, setCashDisbursement] =\n    useState<GridRowSelectionModel>([]);\n  const queryClient = useQueryClient();\n  const datePickerRef = useRef<HTMLElement>(null);\n  const checkDatePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n  const particularsInputRef = useRef<HTMLInputElement>(null);\n\n  const idInputRef = useRef<HTMLInputElement>(null);\n  const idInputRefPayTo = useRef<HTMLInputElement>(null);\n  const vatRef = useRef<HTMLInputElement>(null);\n  const debitInputRef = useRef<HTMLInputElement>(null);\n  const tcInputRef = useRef<HTMLInputElement>(null);\n\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const IdsSearchInput = useRef<HTMLInputElement>(null);\n  const codeInputRef = useRef<HTMLInputElement>(null);\n  const table = useRef<any>(null);\n\n  const {\n    isLoading: loadingGeneralJournalGenerator,\n    refetch: refetchGeneralJournalGenerator,\n  } = useQuery({\n    queryKey: \"general-journal-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/cash-disbursement/generate-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      if (user?.department === \"UCSMI\") {\n        return;\n      }\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: response.data.generatedId[0].id,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: response.data.generatedId[0].id,\n      });\n    },\n  });\n\n  const {\n    mutate: addCashDisbursementMutate,\n    isLoading: loadingCashDisbursementMutate,\n  } = useMutation({\n    mutationKey: \"add-cash-disbursement\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/add-cash-disbursement\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setCashDisbursement([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: mutateJob, isLoading: isLoadingJob } = useMutation({\n    mutationKey: \"jobs\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\"/task/accounting/general-journal/jobs\", variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (res) => {\n      const response = res as any;\n      setCashDisbursement([]);\n      setCashDisbursement(response.data.jobs);\n      setOpenJobs(false);\n    },\n  });\n\n  const {\n    mutate: mutateVoidCashDisbursement,\n    isLoading: loadingVoidCashDisbursement,\n  } = useMutation({\n    mutationKey: \"void-cash-disbursement\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/void-cash-disbursement\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setCashDisbursement([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const {\n    mutate: getSearchSelectedCashDisbursement,\n    isLoading: loadingGetSearchSelectedCashDisbursement,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/get-selected-search-cash-disbursement\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selected = response.data.selectedCashDisbursement;\n      const { explanation, dateEntry, refNo, particulars } = selected[0];\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"dateEntry\",\n        value: dateEntry,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"explanation\",\n        value: explanation,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"particulars\",\n        value: particulars,\n      });\n      setCashDisbursement(selected);\n      setHasSelected(true);\n    },\n  });\n\n  const {\n    ModalComponent: ModalSearchCashDisbursement,\n    openModal: openSearchCashDisbursement,\n    isLoading: isLoadingSearchCashDisbursement,\n    closeModal: closeSearchCashDisbursement,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/cash-disbursement/search-cash-disbursement\",\n      queryUrlName: \"searchCashDisbursement\",\n    },\n    columns: [\n      { field: \"Date_Entry\", headerName: \"Date\", width: 130 },\n      { field: \"Source_No\", headerName: \"Ref No.\", width: 250 },\n      {\n        field: \"Explanation\",\n        headerName: \"Explanation\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-cash-disbursement\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"search\",\n    onSelected: (selectedRowData, data) => {\n      getSearchSelectedCashDisbursement({\n        Source_No: selectedRowData[0].Source_No,\n      });\n      handleInputChange({\n        target: { value: \"edit\", name: \"cashMode\" },\n      });\n      setCashDisbursement([]);\n      setEditTransaction({\n        edit: false,\n        updateId: \"\",\n      });\n\n      closeSearchCashDisbursement();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const {\n    ModalComponent: ModalChartAccountSearch,\n    openModal: openChartAccountSearch,\n    isLoading: isLoadingChartAccountSearch,\n    closeModal: closeChartAccountSearch,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-chart-account\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Account Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Account Title.\", width: 250 },\n      {\n        field: \"Short\",\n        headerName: \"Short\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-chart-account\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"getChartOfAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"code\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"acctName\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      closeChartAccountSearch();\n\n      setTimeout(() => {\n        idInputRef.current?.focus();\n      }, 250);\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const {\n    ModalComponent: ModalPolicyIdClientIdRefId,\n    openModal: openPolicyIdClientIdRefId,\n    isLoading: isLoadingPolicyIdClientIdRefId,\n    closeModal: closePolicyIdClientIdRefId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"get-policyId-ClientId-RefId\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData) => {\n      if (isPayToEnter) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Payto\",\n          value: selectedRowData[0].Name,\n        });\n\n        closePolicyIdClientIdRefId();\n        setTimeout(() => {\n          vatRef.current?.focus();\n        }, 200);\n      } else {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"ClientName\",\n          value: selectedRowData[0].Name,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: selectedRowData[0].IDNo,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"subAcct\",\n          value: selectedRowData[0].sub_account,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"subAcctName\",\n          value: selectedRowData[0].ShortName,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"address\",\n          value: selectedRowData[0].address,\n        });\n        closePolicyIdClientIdRefId();\n        setTimeout(() => {\n          debitInputRef.current?.focus();\n        }, 200);\n      }\n    },\n    searchRef: IdsSearchInput,\n  });\n\n  const {\n    ModalComponent: ModalTransactionAccount,\n    openModal: openTransactionAccount,\n    isLoading: isLoadingTransactionAccount,\n    closeModal: closeTransactionAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-transaction-account\",\n      queryUrlName: \"transactionCodeSearch\",\n    },\n    columns: [\n      { field: \"Code\", headerName: \"Code\", width: 130 },\n      {\n        field: \"Description\",\n        headerName: \"Description\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-transaction-account\",\n    uniqueId: \"Code\",\n    responseDataKey: \"getTransactionAccount\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Code\",\n        value: selectedRowData[0].Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Desc\",\n        value: selectedRowData[0].Description,\n      });\n      closeTransactionAccount();\n      setTimeout(() => {\n        tcInputRef.current?.focus();\n      }, 250);\n    },\n    searchRef: IdsSearchInput,\n  });\n\n  useEffect(() => {\n    const debit = cashDisbursement.reduce((a: number, item: any) => {\n      return a + parseFloat(item.debit.replace(/,/g, \"\"));\n    }, 0);\n    const credit = cashDisbursement.reduce((a: number, item: any) => {\n      return a + parseFloat(item.credit.replace(/,/g, \"\"));\n    }, 0);\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalDebit\",\n      value: debit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalCredit\",\n      value: credit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalBalance\",\n      value: (debit - credit).toFixed(2),\n    });\n  }, [cashDisbursement]);\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function handleOnSave() {\n    if (state.refNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide reference number!\",\n        timer: 1500,\n      });\n    }\n    if (state.explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (\n      (state.totalDebit === \"\" && state.totalCredit === \"\") ||\n      (state.totalDebit === \"0.00\" && state.totalCredit === \"0.00\")\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must not be zero(0), please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {});\n      });\n    }\n    if (state.totalDebit !== state.totalCredit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must be balance, please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {});\n      });\n    }\n    if (state.cashMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addCashDisbursementMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            particulars: state.particulars,\n            cashDisbursement,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addCashDisbursementMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            particulars: state.particulars,\n            cashDisbursement,\n          });\n        },\n      });\n    }\n  }\n\n  function handleVoid() {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      text: `Are you sure you want to void ${state.refNo}`,\n      cb: (userCodeConfirmation) => {\n        mutateVoidCashDisbursement({\n          refNo: state.refNo,\n          dateEntry: state.dateEntry,\n          userCodeConfirmation,\n        });\n      },\n    });\n  }\n\n  function handleRowSave() {\n    if (isNaN(parseFloat(state.credit))) {\n      state.credit = \"0.00\";\n    }\n    if (isNaN(parseFloat(state.debit))) {\n      state.debit = \"0.00\";\n    }\n    if (state.code === \"\" || state.acctName === \"\") {\n      return openChartAccountSearch(state.code);\n    }\n\n    if (state.subAcctName === \"\" || state.ClientName === \"\") {\n      return openPolicyIdClientIdRefId(state.ClientName);\n    }\n    if (state.credit === state.debit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"The values for credit and debit must be different\",\n        timer: 1500,\n      });\n    }\n    if (state.code === \"1.01.10\" && state.checkNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Check No. is Required!\",\n        timer: 1500,\n      });\n    }\n\n    if (state.TC_Code === \"\") {\n      return openTransactionAccount(state.TC_Code);\n    }\n\n    if (state.Payto === \"\" && state.code === \"1.01.10\") {\n      setIsPayToEnter(true);\n      return openPolicyIdClientIdRefId(state.Payto);\n    }\n\n    if (state.code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.ClientName.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Client Name is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.debit.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Debit is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.credit.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.checkNo.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Check No is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.TC_Code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.Payto.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Pay to is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.invoice.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      });\n    }\n\n    function generateID(array: Array<any>) {\n      const lastItem = array.length ? array[array.length - 1].TempID : \"000\";\n      const numericPart = (parseInt(lastItem.toString().match(/\\d+/)[0]) + 1)\n        .toString()\n        .padStart(3, \"0\");\n      return numericPart;\n    }\n\n    Swal.fire({\n      title: editTransaction.edit\n        ? `Are you sure you want to update row?`\n        : `Are you sure you want to add new row?`,\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: editTransaction.edit\n        ? \"Yes, update it!\"\n        : \"Yes Add it\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setCashDisbursement((d: any) => {\n          if (state.code === \"1.01.10\") {\n            state.checkDate = formatDate(state.checkDate);\n          } else {\n            state.checkDate = \"\";\n          }\n\n          if (state.vatType === \"VAT\" && state.code !== \"1.06.02\") {\n            let taxableamt;\n\n            if (parseFloat(state.debit.replace(/,/g, \"\")) !== 0) {\n              taxableamt = parseFloat(state.debit.replace(/,/g, \"\")) / 1.12;\n              state.debit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            } else {\n              taxableamt = parseFloat(state.credit.replace(/,/g, \"\")) / 1.12;\n              state.credit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            }\n\n            if (editTransaction.edit) {\n              d = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n            } else {\n              d = [\n                ...d,\n                {\n                  ...state,\n                  TempID: generateID(d),\n                },\n              ];\n            }\n\n            let inputtax = taxableamt * 0.12;\n\n            if (parseFloat(state.debit.replace(/,/g, \"\")) !== 0) {\n              state.debit = inputtax.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            } else {\n              state.credit = inputtax.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                code: \"1.06.02\",\n                acctName: \"Input Tax\",\n                TempID: generateID(d),\n              },\n            ];\n          } else {\n            const credit = parseFloat(\n              state.credit.replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            const debit = parseFloat(\n              state.debit.replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n\n            state.credit = credit;\n            state.debit = debit;\n\n            if (editTransaction.edit) {\n              const newD = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n              return newD;\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                TempID: generateID(d),\n              },\n            ];\n          }\n\n          return d;\n        });\n\n        const resetValue = {\n          code: \"\",\n          acctName: \"\",\n          subAcct: \"\",\n          subAcctName: \"\",\n          IDNo: \"\",\n          ClientName: \"\",\n          credit: \"\",\n          debit: \"\",\n          TC_Code: \"\",\n          TC_Desc: \"\",\n          remarks: \"\",\n          vatType: \"NON-VAT\",\n          invoice: \"\",\n          address: \"\",\n          checkNo: \"\",\n          checkDate: new Date(),\n        };\n        setNewStateValue(dispatch, { ...state, ...resetValue });\n        setEditTransaction({ edit: false, updateId: \"\" });\n        wait(300).then(() => {\n          codeInputRef.current?.focus();\n        });\n      }\n    });\n  }\n  const isDisableField = state.cashMode === \"\";\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          {isLoadingSearchCashDisbursement ? (\n            <LoadingButton loading={isLoadingSearchCashDisbursement} />\n          ) : (\n            <TextField\n              label=\"Search\"\n              size=\"small\"\n              name=\"search\"\n              value={state.search}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return openSearchCashDisbursement(\n                    (e.target as HTMLInputElement).value\n                  );\n                }\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"300px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n\n          {state.cashMode === \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                handleInputChange({\n                  target: { value: \"add\", name: \"cashMode\" },\n                });\n              }}\n              color=\"primary\"\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            loading={loadingCashDisbursementMutate}\n            disabled={state.cashMode === \"\"}\n            onClick={handleOnSave}\n            color=\"success\"\n            variant=\"contained\"\n          >\n            Save\n          </LoadingButton>\n          {state.cashMode !== \"\" && (\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    refetchGeneralJournalGenerator();\n                    handleInputChange({\n                      target: { value: \"\", name: \"cashMode\" },\n                    });\n                    setNewStateValue(dispatch, initialState);\n                    setCashDisbursement([]);\n                    // setSearchSelected(false);\n                    setEditTransaction({\n                      edit: false,\n                      updateId: \"\",\n                    });\n                  }\n                });\n              }}\n              disabled={state.cashMode === \"\"}\n            >\n              Cancel\n            </LoadingButton>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              background: deepOrange[500],\n              \":hover\": {\n                background: deepOrange[600],\n              },\n            }}\n            onClick={handleVoid}\n            loading={loadingVoidCashDisbursement}\n            disabled={state.cashMode !== \"edit\"}\n            variant=\"contained\"\n            startIcon={<NotInterestedIcon sx={{ width: 20, height: 20 }} />}\n          >\n            Void\n          </LoadingButton>\n        </div>\n        <div\n          style={{\n            fontSize: \"13px\",\n            border: \"1px solid #d4d4d8\",\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"50px\",\n            height: \"30px\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <p>\n            <span>Total Rows:</span> <strong>{cashDisbursement.length}</strong>\n          </p>\n          <p>\n            <span>Total Debit:</span> <strong>{state.totalDebit}</strong>\n          </p>\n          <p>\n            <span>Total Credit:</span> <strong>{state.totalCredit}</strong>\n          </p>\n          <p>\n            <span>Balance:</span>{\" \"}\n            <strong\n              style={{\n                color:\n                  parseFloat(state.totalBalance.replace(/,/g, \"\")) > 0\n                    ? \"red\"\n                    : \"black\",\n              }}\n            >\n              {state.totalBalance}\n            </strong>\n          </p>\n        </div>\n      </div>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          display: \"flex\",\n          marginTop: \"10px\",\n          gap: \"10px\",\n          padding: \"15px\",\n        }}\n      >\n        {loadingGeneralJournalGenerator ? (\n          <LoadingButton loading={loadingGeneralJournalGenerator} />\n        ) : (\n          <FormControl\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={isDisableField}\n            sx={{\n              width: \"140px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel htmlFor=\"return-check-id-field\">\n              Reference CV-\n            </InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              disabled={isDisableField}\n              fullWidth\n              label=\"Reference CV-\"\n              name=\"refNo\"\n              value={state.refNo}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleOnSave();\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"return-check-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    ref={reloadIDButtonRef}\n                    disabled={isDisableField}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchGeneralJournalGenerator();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          fullWidth={false}\n          disabled={isDisableField}\n          label=\"Date\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateEntry\",\n              value: value,\n            });\n          }}\n          value={new Date(state.dateEntry)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={datePickerRef}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\", width: \"150px\" },\n            },\n          }}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Explanation\"\n          size=\"small\"\n          name=\"explanation\"\n          value={state.explanation}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return handleOnSave();\n            }\n          }}\n          inputRef={explanationInputRef}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n          }}\n          sx={{\n            flex: 1,\n            height: \"27px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Particulars\"\n          size=\"small\"\n          name=\"particulars\"\n          value={state.particulars}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return handleOnSave();\n            }\n          }}\n          inputRef={particularsInputRef}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n          }}\n          sx={{\n            flex: 1,\n            height: \"27px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          marginTop: \"10px\",\n\n          padding: \"15px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          {isLoadingChartAccountSearch ? (\n            <LoadingButton loading={isLoadingChartAccountSearch} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"130px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"chart-account-id\">Code</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                readOnly\n                disabled={isDisableField}\n                fullWidth\n                label=\"Code\"\n                name=\"code\"\n                inputRef={codeInputRef}\n                value={state.code}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openChartAccountSearch(state.code);\n                  }\n                }}\n                id=\"chart-account-id\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openChartAccountSearch(state.code);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={isDisableField}\n            label=\"Account Name\"\n            size=\"small\"\n            name=\"acctName\"\n            value={state.acctName}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (\n                e.code === \"Enter\" ||\n                (e.code === \"NumpadEnter\" && state.acctName !== \"\")\n              ) {\n                e.preventDefault();\n                return handleRowSave();\n              }\n              if (\n                e.code === \"Enter\" ||\n                (e.code === \"NumpadEnter\" && state.acctName === \"\")\n              ) {\n                e.preventDefault();\n                return openChartAccountSearch(state.code);\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={isDisableField}\n            label=\"Sub Account\"\n            size=\"small\"\n            name=\"subAcctName\"\n            value={state.subAcctName}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (\n                e.code === \"Enter\" ||\n                (e.code === \"NumpadEnter\" && state.subAcctName !== \"\")\n              ) {\n                e.preventDefault();\n                return handleRowSave();\n              }\n              if (\n                e.code === \"Enter\" ||\n                (e.code === \"NumpadEnter\" && state.subAcctName === \"\")\n              ) {\n                e.preventDefault();\n                return openPolicyIdClientIdRefId(state.ClientName);\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"150px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          {isLoadingPolicyIdClientIdRefId ? (\n            <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"300px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"policy-client-ref-id\">I.D</InputLabel>\n              <OutlinedInput\n                readOnly\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                inputRef={idInputRef}\n                disabled={isDisableField}\n                fullWidth\n                label=\"I.D\"\n                name=\"ClientName\"\n                value={state.ClientName}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    setIsPayToEnter(false);\n                    return openPolicyIdClientIdRefId(state.ClientName);\n                  }\n                }}\n                id=\"policy-client-ref-id\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openPolicyIdClientIdRefId(state.ClientName);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={isDisableField}\n            label=\"Debit\"\n            size=\"small\"\n            name=\"debit\"\n            value={state.debit}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n            }}\n            onBlur={(e) => {\n              e.preventDefault();\n              let num = \"0\";\n              if (!isNaN(parseFloat(state.debit))) {\n                num = state.debit;\n              }\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"debit\",\n                value: parseFloat(num.toString().replace(/,/g, \"\")).toFixed(2),\n              });\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              inputRef: debitInputRef,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={isDisableField}\n            label=\"Credit\"\n            size=\"small\"\n            name=\"credit\"\n            value={state.credit}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n            }}\n            onFocus={(e) => {\n              e.preventDefault();\n              if (state.code === \"1.01.10\") {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"credit\",\n                  value: state.totalBalance,\n                });\n              }\n            }}\n            onBlur={(e) => {\n              e.preventDefault();\n              let num = \"0\";\n              if (!isNaN(parseFloat(state.credit))) {\n                num = state.credit;\n              }\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"credit\",\n                value: parseFloat(num.toString().replace(/,/g, \"\")).toFixed(2),\n              });\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={isDisableField || state.code !== \"1.01.10\"}\n            label=\"Check No\"\n            size=\"small\"\n            name=\"checkNo\"\n            value={state.checkNo}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n            }}\n            InputProps={{\n              // inputRef: debitInputRef,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          {state.code === \"1.01.10\" ? (\n            <CustomDatePicker\n              fullWidth={false}\n              disabled={isDisableField || state.code !== \"1.01.10\"}\n              label=\"Check Date\"\n              onChange={(value: any) => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"checkDate\",\n                  value: value,\n                });\n              }}\n              value={state.checkDate}\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  const timeout = setTimeout(() => {\n                    checkDatePickerRef.current\n                      ?.querySelector(\"button\")\n                      ?.click();\n                    clearTimeout(timeout);\n                  }, 150);\n                }\n              }}\n              datePickerRef={checkDatePickerRef}\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\", width: \"150px\" },\n                },\n              }}\n            />\n          ) : (\n            <TextField\n              disabled={isDisableField || state.code !== \"1.01.10\"}\n              label=\"Check Date\"\n              size=\"small\"\n              name=\"checkDate\"\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n          {isLoadingTransactionAccount ? (\n            <LoadingButton loading={isLoadingTransactionAccount} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"130px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"tc\">TC</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                readOnly\n                fullWidth\n                label=\"TC\"\n                name=\"TC_Code\"\n                value={state.TC_Code}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openTransactionAccount(state.TC_Code);\n                  }\n                }}\n                id=\"tc\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openTransactionAccount(state.TC_Code);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={isDisableField}\n            label=\"Remarks\"\n            size=\"small\"\n            name=\"remarks\"\n            value={state.remarks}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: tcInputRef,\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          {state.code !== \"1.01.10\" && (\n            <TextField\n              disabled={isDisableField}\n              label=\"Payto\"\n              size=\"small\"\n              name=\"Payto\"\n              value={state.Payto}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleRowSave();\n                }\n              }}\n              InputProps={{\n                readOnly: true,\n                // inputRef: debitInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n\n          {state.code === \"1.01.10\" && (\n            <>\n              {isLoadingPolicyIdClientIdRefId ? (\n                <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n              ) : (\n                <FormControl\n                  variant=\"outlined\"\n                  size=\"small\"\n                  disabled={isDisableField}\n                  sx={{\n                    width: \"300px\",\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel htmlFor=\"policy-client-Payto\">Payto</InputLabel>\n                  <OutlinedInput\n                    readOnly\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    inputRef={idInputRefPayTo}\n                    disabled={isDisableField}\n                    fullWidth\n                    label=\"Payto\"\n                    name=\"Payto\"\n                    value={state.Payto}\n                    onChange={handleInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        e.preventDefault();\n                        setIsPayToEnter(true);\n                        return openPolicyIdClientIdRefId(state.Payto);\n                      }\n                    }}\n                    id=\"policy-client-Payto\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          ref={reloadIDButtonRef}\n                          disabled={isDisableField}\n                          color=\"secondary\"\n                          edge=\"end\"\n                          onClick={() => {\n                            openPolicyIdClientIdRefId(state.Payto);\n                          }}\n                        >\n                          <RestartAltIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              )}\n            </>\n          )}\n          <FormControl\n            size=\"small\"\n            variant=\"outlined\"\n            sx={{\n              width: \"120px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"label-selection-reason\">Vat Type</InputLabel>\n            <Select\n              labelId=\"label-selection-reason\"\n              value={state.vatType}\n              name=\"vatType\"\n              onChange={handleInputChange}\n              autoWidth\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              inputRef={vatRef}\n              disabled={isDisableField}\n            >\n              <MenuItem value=\"VAT\">VAT</MenuItem>\n              <MenuItem value={\"NON-VAT\"}>NON-VAT</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField\n            disabled={isDisableField}\n            label=\"OR/Invoice No.\"\n            size=\"small\"\n            name=\"invoice\"\n            value={state.invoice}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleRowSave();\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"200px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </div>\n      </fieldset>\n      <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={\n              loadingCashDisbursementMutate ||\n              loadingGetSearchSelectedCashDisbursement ||\n              isLoadingJob\n            }\n            columns={selectedCollectionColumns}\n            rows={cashDisbursement}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                const resetValue = {\n                  code: \"\",\n                  acctName: \"\",\n                  subAcct: \"\",\n                  subAcctName: \"\",\n                  IDNo: \"\",\n                  ClientName: \"\",\n                  credit: \"\",\n                  debit: \"\",\n                  TC_Code: \"\",\n                  TC_Desc: \"\",\n                  remarks: \"\",\n                  vatType: \"NON-VAT\",\n                  invoice: \"\",\n                  checkNo: \"\",\n                  checkDate: new Date(),\n                };\n                setNewStateValue(dispatch, { ...state, ...resetValue });\n                setEditTransaction({ edit: false, updateId: \"\" });\n                return;\n              }\n\n              if (code === \"Delete\" || code === \"Backspace\") {\n                Swal.fire({\n                  title: `Are you sure you want to delete?`,\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    return setCashDisbursement((d) => {\n                      return d.filter(\n                        (items: any) => items.TempID !== selection[0]\n                      );\n                    });\n                  }\n                });\n                return;\n              }\n              setNewStateValue(dispatch, {\n                ...rowSelected,\n                checkDate: new Date(rowSelected.checkDate),\n                sub_refNo: state.sub_refNo,\n                refNo: state.refNo,\n                dateEntry: state.dateEntry,\n                explanation: state.explanation,\n                particulars: state.particulars,\n                totalDebit: state.totalDebit,\n                totalCredit: state.totalCredit,\n                totalBalance: state.totalBalance,\n              });\n              setEditTransaction({\n                edit: true,\n                updateId: rowSelected.TempID,\n              });\n            }}\n          />\n        </Box>\n      </div>\n      <Modal open={openJobs} onClose={() => setOpenJobs(false)}>\n        <Box\n          sx={{\n            position: \"absolute\" as \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: 470,\n            bgcolor: \"background.paper\",\n            p: 4,\n          }}\n        >\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"10px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={() => setOpenJobs(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={{ marginBottom: \"20px\" }}\n          >\n            Jobs\n          </Typography>\n          <div\n            style={{\n              width: \"400px\",\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                marginBottom: \"10px\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                  sx={{\n                    width: \"200px\",\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  slotProps={{\n                    textField: {\n                      size: \"small\",\n                      name: \"\",\n                      InputLabelProps: {\n                        style: {\n                          fontSize: \"14px\",\n                        },\n                      },\n                      InputProps: {\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      },\n                    },\n                  }}\n                  label={\"Transaction Date: \"}\n                  views={[\"month\", \"year\"]}\n                  value={state.jobTransactionDate}\n                  onChange={(value) => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"jobTransactionDate\",\n                      value: value,\n                    });\n                  }}\n                />\n              </LocalizationProvider>\n              <FormControlLabel\n                sx={{\n                  height: \"30px\",\n                  \"& .MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    checked={state.jobAutoExp}\n                    onChange={(e) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"jobAutoExp\",\n                        value: !state.jobAutoExp,\n                      });\n                    }}\n                  />\n                }\n                label=\"Auto Explanation\"\n              />\n            </div>\n            <FormControl\n              fullWidth\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel id=\"label-selection-job-type\">Type of Job</InputLabel>\n              <Select\n                labelId=\"label-selection-job-type\"\n                value={state.jobType}\n                name=\"jobType\"\n                onChange={handleInputChange}\n                autoWidth\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                <MenuItem value={\"\"}> </MenuItem>\n                <MenuItem value={\"0\"}>Reversal of Accrued Interest </MenuItem>\n                <MenuItem value={\"1\"}>\n                  {\" \"}\n                  Income Recognition & Accrual of Interest\n                </MenuItem>\n                <MenuItem value={\"2\"}>Penalty Charges</MenuItem>\n                <MenuItem value={\"3\"}>Penalty Income</MenuItem>\n                <MenuItem value={\"4\"}>RPT Transaction (NIL-HN)</MenuItem>\n                <MenuItem value={\"5\"}>RPT Transaction (AMIFIN)</MenuItem>\n                <MenuItem value={\"6\"}>RPT Income</MenuItem>\n                <MenuItem value={\"7\"}>Monthly Accrual Expenses</MenuItem>\n                <MenuItem value={\"8\"}>Monthly Accrual Income</MenuItem>\n                <MenuItem value={\"9\"}>\n                  Production (Milestone Guarantee)\n                </MenuItem>\n                <MenuItem value={\"10\"}>\n                  Production (Liberty Insurance Co.)\n                </MenuItem>\n                <MenuItem value={\"11\"}>Production (Federal Phoenix)</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"30px\",\n              alignItems: \"flex-end\",\n              marginTop: \"20px\",\n            }}\n          >\n            <LoadingButton\n              loading={isLoadingJob}\n              color=\"success\"\n              variant=\"contained\"\n              onClick={() => mutateJob(state)}\n            >\n              Create Job\n            </LoadingButton>\n            <Button\n              // ref={checkModalSaveButton}\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => setOpenJobs(false)}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n      {ModalChartAccountSearch}\n      {ModalPolicyIdClientIdRefId}\n      {ModalTransactionAccount}\n      {ModalSearchCashDisbursement}\n    </div>\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","export default function formatDate(date: any) {\n  // Extract day, month, and year\n  const currentDate = new Date(date)\n  const day = (\"0\" + currentDate.getDate()).slice(-2); // Ensure two digits\n  const month = (\"0\" + (currentDate.getMonth() + 1)).slice(-2); // Add 1 to month (months are zero-indexed)\n  const year = currentDate.getFullYear();\n\n  // Format the date as MM/DD/YYYY\n  return month + \"/\" + day + \"/\" + year;\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","const deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;"],"names":["NumericFormatCustom","React","props","ref","onChange","other","_objectWithoutProperties","_excluded","_jsx","NumericFormat","_objectSpread","getInputRef","onValueChange","values","target","name","value","allowNegative","thousandSeparator","valueIsNumericString","initialState","sub_refNo","refNo","dateEntry","Date","explanation","particulars","code","acctName","subAcct","subAcctName","IDNo","ClientName","address","credit","debit","checkNo","checkDate","TC_Code","TC_Desc","remarks","Payto","vatType","invoice","BranchCode","totalDebit","totalCredit","totalBalance","jobAutoExp","jobTransactionDate","jobType","search","cashMode","reducer","state","action","type","_defineProperty","field","selectedCollectionColumns","headerName","minWidth","flex","hide","CashDisbursement","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_mutationFn4","_refParent$current","refParent","useRef","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_useState","useState","_useState2","openJobs","setOpenJobs","_useState3","_useState4","isPayToEnter","setIsPayToEnter","_useState5","_useState6","hasSelected","setHasSelected","_useState7","edit","updateId","_useState8","editTransaction","setEditTransaction","_useState9","_useState10","cashDisbursement","setCashDisbursement","queryClient","useQueryClient","datePickerRef","checkDatePickerRef","reloadIDButtonRef","explanationInputRef","particularsInputRef","idInputRef","idInputRefPayTo","vatRef","debitInputRef","tcInputRef","chartAccountSearchInput","IdsSearchInput","codeInputRef","table","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","department","generatedId","id","loadingGeneralJournalGenerator","isLoading","refetchGeneralJournalGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","res","success","invalidateQueries","setNewStateValue","Swal","position","icon","title","message","timer","addCashDisbursementMutate","mutate","loadingCashDisbursementMutate","_useMutation2","_x2","_callee3","_context3","jobs","mutateJob","isLoadingJob","_useMutation3","_x3","_callee4","_context4","mutateVoidCashDisbursement","loadingVoidCashDisbursement","_useMutation4","_x4","_callee5","_context5","selected","selectedCashDisbursement","_selected$","getSearchSelectedCashDisbursement","loadingGetSearchSelectedCashDisbursement","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","width","uniqueId","responseDataKey","onSelected","selectedRowData","Source_No","handleInputChange","closeSearchCashDisbursement","onCloseFunction","searchRef","ModalSearchCashDisbursement","ModalComponent","openSearchCashDisbursement","openModal","isLoadingSearchCashDisbursement","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountSearch","setTimeout","_idInputRef$current","current","focus","ModalChartAccountSearch","openChartAccountSearch","isLoadingChartAccountSearch","_useQueryModalTable3","Name","closePolicyIdClientIdRefId","_vatRef$current","sub_account","ShortName","_debitInputRef$curren","ModalPolicyIdClientIdRefId","openPolicyIdClientIdRefId","isLoadingPolicyIdClientIdRefId","_useQueryModalTable4","Code","Description","closeTransactionAccount","_tcInputRef$current","ModalTransactionAccount","openTransactionAccount","isLoadingTransactionAccount","useEffect","reduce","a","item","parseFloat","replace","toFixed","e","_e$target","handleOnSave","then","wait","_explanationInputRef$","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleRowSave","isNaN","length","generateID","array","lastItem","TempID","parseInt","toString","match","padStart","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","d","date","currentDate","day","getDate","slice","getMonth","getFullYear","formatDate","taxableamt","toLocaleString","minimumFractionDigits","maximumFractionDigits","map","_toConsumableArray","inputtax","resetValue","_codeInputRef$current","isDisableField","_jsxs","style","display","flexDirection","height","children","alignItems","columnGap","LoadingButton","loading","TextField","label","size","onKeyDown","preventDefault","InputProps","fontSize","sx","top","Button","variant","startIcon","AddIcon","onClick","color","disabled","CloseIcon","background","deepOrange","NotInterestedIcon","border","justifyContent","borderRadius","marginTop","gap","padding","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","fullWidth","readOnly","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","CustomDatePicker","timeout","_datePickerRef$curren","_datePickerRef$curren2","querySelector","click","clearTimeout","textField","InputLabelProps","inputRef","onBlur","num","inputComponent","onFocus","_checkDatePickerRef$c","_checkDatePickerRef$c2","_Fragment","Select","labelId","autoWidth","MenuItem","Box","getBoundingClientRect","overflowX","Table","rows","table_id","isSingleSelection","isRowFreeze","dataSelection","selection","rowSelected","filter","undefined","items","Modal","open","onClose","left","transform","bgcolor","p","right","Typography","component","marginBottom","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","slotProps","views","FormControlLabel","control","Checkbox","checked","obj","Object","entries","forEach","_ref","_ref2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","A100","A200","A400","A700"],"sourceRoot":""}