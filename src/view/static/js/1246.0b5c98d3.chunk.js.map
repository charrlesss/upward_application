{"version":3,"file":"static/js/1246.0b5c98d3.chunk.js","mappings":"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","sources":["components/UpwardTable.tsx","components/UpwardFields.tsx","feautures/Admin/Reference/ChartAccount.tsx","lib/confirmationAlert.ts"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function UpwardTable({\r\n  rows,\r\n  column,\r\n  width,\r\n  height,\r\n  dataReadOnly,\r\n  onSelectionChange,\r\n  isMultipleSelect = false,\r\n  freeze = false\r\n}: {\r\n  rows: Array<any>;\r\n  column: Array<any>;\r\n  width: number;\r\n  height: number;\r\n  dataReadOnly: boolean;\r\n  onSelectionChange: (row: Array<any>) => void;\r\n  isMultipleSelect?:boolean\r\n  freeze?:boolean\r\n}) {\r\n  const onSelectionChangeRef = useRef(onSelectionChange);\r\n  const [columns, setColumns] = useState(column);\r\n  const [hoveredColumn, setHoveredColumn] = useState(null);\r\n  // const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n  const [selectedRows, setSelectedRows] = useState<Array<number>>([]);\r\n\r\n  const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0); // For Shift+click range selection\r\n\r\n  const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\r\n\r\n  // Resize handler\r\n  const startResize = (index: any, e: any) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const startX = e.clientX;\r\n    const startWidth = columns[index].width;\r\n\r\n    const doDrag = (moveEvent: any) => {\r\n      const newWidth = startWidth + (moveEvent.clientX - startX);\r\n      const updatedColumns = [...columns];\r\n      updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\r\n      setColumns(updatedColumns);\r\n    };\r\n\r\n    const stopDrag = () => {\r\n      document.removeEventListener(\"mousemove\", doDrag);\r\n      document.removeEventListener(\"mouseup\", stopDrag);\r\n    };\r\n\r\n    document.addEventListener(\"mousemove\", doDrag);\r\n    document.addEventListener(\"mouseup\", stopDrag);\r\n  };\r\n\r\n  const handleMouseEnter = (index: any) => {\r\n    setHoveredColumn(index); // Set the hovered column index\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredColumn(null); // Reset hovered column index\r\n  };\r\n\r\n  // Handle row selection on click\r\n  const handleRowClick = (\r\n    rowIndex: any,\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    if (!isMultipleSelect) {\r\n      // Single selection mode\r\n      setSelectedRows([rowIndex]);\r\n    } else {\r\n      // Multiple selection mode\r\n      if (event.shiftKey && lastSelectedRowIndex !== null) {\r\n        // Shift + Click: Select range between last clicked row and current clicked row\r\n        const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\r\n        const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\r\n        const newSelectedRows: Array<number> = [];\r\n        for (let i = rangeStart; i <= rangeEnd; i++) {\r\n          if (!selectedRows.includes(i)) {\r\n            newSelectedRows.push(i);\r\n          }\r\n        }\r\n        let selectedItemsParams: Array<number> = [\r\n          ...selectedItems,\r\n          ...newSelectedRows,\r\n        ];\r\n        setSelectedItems(selectedItemsParams);\r\n        setSelectedRows([...selectedRows, ...newSelectedRows]);\r\n        setSelectedItems(selectedItemsParams);\r\n        const selectedRowData = rows.filter((d, idx) =>\r\n          selectedItemsParams.includes(idx)\r\n        );\r\n        onSelectionChangeRef.current(selectedRowData);\r\n      } else if (event.ctrlKey || event.metaKey) {\r\n        // Ctrl (or Cmd on macOS) + Click: Toggle row selection\r\n        if (selectedRows.includes(rowIndex) && !freeze) {\r\n          setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\r\n          setSelectedItems((d) => {\r\n            d = d.filter((i) => i !== rowIndex);\r\n            return d;\r\n          });\r\n          let selectedItemsParams: Array<number> = selectedItems.filter(\r\n            (i) => i !== rowIndex\r\n          );\r\n          setSelectedItems(selectedItemsParams);\r\n          const selectedRowData = rows.filter((d, idx) =>\r\n            selectedItemsParams.includes(idx)\r\n          );\r\n          onSelectionChangeRef.current(selectedRowData);\r\n        } else {\r\n          setSelectedRows([...selectedRows, rowIndex]);\r\n          setSelectedItems((d) => {\r\n            d.push(rowIndex);\r\n            return d;\r\n          });\r\n          let selectedItemsParams: Array<number> = [...selectedItems, rowIndex];\r\n          setSelectedItems(selectedItemsParams);\r\n          const selectedRowData = rows.filter((d, idx) =>\r\n            selectedItemsParams.includes(idx)\r\n          );\r\n          onSelectionChangeRef.current(selectedRowData);\r\n        }\r\n      } else {\r\n        // Regular click in multiple selection mode: Single click to select a row\r\n        setSelectedRows([rowIndex]);\r\n      }\r\n    }\r\n    setLastSelectedRowIndex(rowIndex); // Update the last selected index\r\n  };\r\n\r\n  const handleRowDoubleClick = (\r\n    rowIndex: any,\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    let selectedItemsParams: Array<number> = [];\r\n\r\n    if (selectedItems.includes(rowIndex) && !freeze) {\r\n      selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\r\n      console.log(selectedItemsParams)\r\n      setSelectedItems(selectedItemsParams);\r\n      const selectedRowData = rows.filter((d, idx) =>\r\n        selectedItemsParams.includes(idx)\r\n      );\r\n      onSelectionChangeRef.current(selectedRowData);\r\n\r\n      return;\r\n    }\r\n\r\n    if (isMultipleSelect) {\r\n      selectedItemsParams = [...selectedItems, rowIndex];\r\n    } else {\r\n      selectedItemsParams = [rowIndex];\r\n    }\r\n\r\n    setSelectedItems(selectedItemsParams);\r\n    const selectedRowData = rows.filter((d, idx) =>\r\n      selectedItemsParams.includes(idx)\r\n    );\r\n    onSelectionChangeRef.current(selectedRowData);\r\n  };\r\n\r\n  // Keyboard navigation with ArrowUp and ArrowDown\r\n  const handleKeyDown = (e: any) => {\r\n    if (e.target.closest(\".grid-container\")) {\r\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n        e.preventDefault();\r\n        let selectedItemsParams: Array<number> = [];\r\n        const rowIndex = selectedRows[selectedRows.length - 1]\r\n        if (selectedItems.includes(rowIndex) && !freeze) {\r\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\r\n          console.log(selectedItemsParams)\r\n          setSelectedItems(selectedItemsParams);\r\n          const selectedRowData = rows.filter((d, idx) =>\r\n            selectedItemsParams.includes(idx)\r\n          );\r\n          onSelectionChangeRef.current(selectedRowData);\r\n    \r\n          return;\r\n        }\r\n\r\n        if (isMultipleSelect) {\r\n          selectedItemsParams = [...selectedItems, ...selectedRows];\r\n        } else {\r\n          selectedItemsParams = [rowIndex];\r\n        }\r\n        setSelectedItems(selectedItemsParams);\r\n        const selectedRowData = rows.filter((d, idx) =>\r\n          selectedItemsParams.includes(idx)\r\n        );\r\n        onSelectionChangeRef.current(selectedRowData);\r\n      } else if (e.key === \"ArrowDown\") {\r\n        e.preventDefault();\r\n        setSelectedRows((prevIndex: any) => {\r\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\r\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\r\n            return [rows.length - 1];\r\n          }\r\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\r\n          const row = document.querySelector(`.row-${newPrevIndex}`);\r\n          row?.querySelector(\"input\")?.focus();\r\n\r\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n          return [newPrevIndex];\r\n        });\r\n      } else if (e.key === \"ArrowUp\") {\r\n        e.preventDefault();\r\n\r\n        setSelectedRows((prevIndex: any) => {\r\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\r\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\r\n          const row = document.querySelector(`.row-${newPrevIndex}`);\r\n\r\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n          row?.querySelector(\"input\")?.focus();\r\n          return [newPrevIndex];\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Add keydown listener when component mounts\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [rows, selectedRows, handleKeyDown]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"table-frame-color\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: `${width - 10}px        `,\r\n            height: `${height - 135}px`,\r\n          }}\r\n          className=\"table-frame\"\r\n        >\r\n          <div className=\"table-panel\">\r\n            <div className=\"grid-container\" tabIndex={0}>\r\n              <div\r\n                className=\"grid-row grid-header\"\r\n                style={{\r\n                  position: \"sticky\",\r\n                  zIndex: \"10\",\r\n                  top: \"-1px\",\r\n                  background: \"white\",\r\n                }}\r\n              >\r\n                {columns.map((col: any, index: number) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`grid-cell header-cell ${\r\n                      hoveredColumn === index ? `highlight-column` : \"\"\r\n                    }`} // Add the class if hovered\r\n                    style={{ width: col.width, height: \"20px\" }}\r\n                  >\r\n                    <input\r\n                      style={{ fontWeight: \"bold\" }}\r\n                      defaultValue={col.headerName}\r\n                      readOnly\r\n                      onChange={(e) => {}}\r\n                    />\r\n                    <div\r\n                      className=\"resize-handle\"\r\n                      onMouseDown={(e) => startResize(index, e)}\r\n                      onMouseEnter={(e) => {\r\n                        e.preventDefault();\r\n                        handleMouseEnter(index);\r\n                      }} // On hover\r\n                      onMouseLeave={(e) => {\r\n                        e.preventDefault();\r\n                        handleMouseLeave();\r\n                      }} // On mouse leave\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {rows.map((row: any, rowIndex: any) => (\r\n                <div\r\n                  className={`grid-row row-${rowIndex}`} // Highlight selected row\r\n                  key={rowIndex}\r\n                  onClick={(e) => handleRowClick(rowIndex, e)}\r\n                  onDoubleClick={(e) => handleRowDoubleClick(rowIndex, e)}\r\n                >\r\n                  {columns.map((col: any, colIndex: number) => (\r\n                    <div\r\n                      key={colIndex}\r\n                      style={{ width: col.width }}\r\n                      className={`grid-cell ${\r\n                        hoveredColumn === colIndex ? `highlight-column` : \"\"\r\n                      }`}\r\n                    >\r\n                      <input\r\n                        value={row[col.field]}\r\n                        onChange={(e) => {}}\r\n                        readOnly={dataReadOnly}\r\n                        className={`${\r\n                          selectedRows.includes(rowIndex) ? \"selected-row\" : \"\"\r\n                        } ${\r\n                          selectedItems.includes(rowIndex)\r\n                            ? \"selected-items\"\r\n                            : \"\"\r\n                        }`}\r\n                      />\r\n                      <div\r\n                        className=\"resize-handle\"\r\n                        onMouseDown={(e) => {\r\n                          e.preventDefault();\r\n                          startResize(colIndex, e);\r\n                        }}\r\n                        onMouseEnter={(e) => {\r\n                          e.preventDefault();\r\n                          handleMouseEnter(colIndex);\r\n                        }} // On hover\r\n                        onMouseLeave={(e) => {\r\n                          e.preventDefault();\r\n                          handleMouseLeave();\r\n                        }} // On mouse leave\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"table-panel-footer\">Records : {rows.length}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {  HtmlHTMLAttributes ,InputHTMLAttributes, useId } from \"react\";\r\nimport \"../style/design.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nexport function TextInput({\r\n  input,\r\n  label,\r\n  inputRef\r\n}: {\r\n  inputRef?:React.RefObject<HTMLInputElement>\r\n  labelRef?:React.RefObject<HTMLLabelElement>\r\n  input: InputHTMLAttributes<HTMLInputElement>;\r\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\r\n}) {\r\n\r\n  const id = useId()\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        height: \"18px\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <label\r\n        {...label}\r\n        htmlFor={id}\r\n      >\r\n        {label.title}\r\n      </label>\r\n      <input\r\n        ref={inputRef}\r\n        id={id}\r\n        {...input}\r\n        style={{\r\n          height: \"18px\",\r\n          ...input.style,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState, useRef, useReducer } from \"react\";\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { pink } from \"@mui/material/colors\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"../../../lib/wait\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { LoadingButton } from \"@mui/lab\";\nimport Table from \"../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\nimport \"../../../style/datagridview.css\";\nimport UpwardTable from \"../../../components/UpwardTable\";\nimport { TextInput } from \"../../../components/UpwardFields\";\nconst initialState = {\n  Acct_Code: \"\",\n  Acct_Title: \"\",\n  Short: \"\",\n  Account: \"Asset\",\n  Acct_Type: \"Group Header\",\n  IDNo: false,\n  SubAccnt: false,\n  Inactive: false,\n  mode: \"\",\n  search: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const chartAccountColumn = [\n  { field: \"Acct_Code\", headerName: \"Account Code\", width: 150 },\n  { field: \"Acct_Title\", headerName: \"Account Name/Account Title\", width: 300 },\n  { field: \"Short\", headerName: \"Short Name\", width: 300 },\n  { field: \"Acct_Type\", headerName: \"Account Type\", width: 200 },\n  { field: \"Account\", headerName: \"Account\", width: 100 },\n  { field: \"SubAccnt\", headerName: \"Sub Account ?\", width: 100 },\n  { field: \"IDNo\", headerName: \"I.D. ?\", width: 100 },\n  { field: \"Inactive\", headerName: \"Inactive ?\", width: 100 },\n];\n\nconst queryKey = \"chart-account\";\n\nexport default function ChartAccount() {\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const inputCodeRef = useRef<HTMLInputElement>(null);\n  const inputAccountClassificationRef = useRef<HTMLInputElement>(null);\n  const inputAccountTypeRef = useRef<HTMLInputElement>(null);\n  const inputNameRef = useRef<HTMLInputElement>(null);\n  const inputShortNameRef = useRef<HTMLInputElement>(null);\n  const inputRequiredSubAccountRef = useRef<HTMLInputElement>(null);\n  const inputRequiredIDRef = useRef<HTMLInputElement>(null);\n  const inputMarkInactiveRef = useRef<HTMLInputElement>(null);\n\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const [mode, setMode] = useState<string>(\"\");\n\n  const { isLoading, refetch: refetchChartAccountSearch } = useQuery({\n    queryKey,\n    queryFn: async () =>\n      await myAxios.get(\n        `/reference/get-chart-accounts?chartAccountSearch=${inputSearchRef.current?.value ?? \"\"}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.chartAccount);\n      if (inputCodeRef.current) {\n        inputCodeRef.current.value = \"\";\n      }\n      if (inputAccountClassificationRef.current) {\n        inputAccountClassificationRef.current.value = \"\";\n      }\n      if (inputAccountTypeRef.current) {\n        inputAccountTypeRef.current.value = \"\";\n      }\n      if (inputNameRef.current) {\n        inputNameRef.current.value = \"\";\n      }\n      if (inputShortNameRef.current) {\n        inputShortNameRef.current.value = \"\";\n      }\n      if (inputRequiredSubAccountRef.current) {\n        inputRequiredSubAccountRef.current.checked = false;\n      }\n      if (inputRequiredIDRef.current) {\n        inputRequiredIDRef.current.checked = false;\n      }\n      if (inputMarkInactiveRef.current) {\n        inputMarkInactiveRef.current.checked = false;\n      }\n    },\n    refetchOnWindowFocus: false,\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-chart-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-chart-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-chart-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      }).then(() => {\n        handleCancel();\n      });\n    }\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n  // Manage the width of each column in state\n  const handleSave = (e: any) => {\n    if (inputCodeRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Code is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (inputNameRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Title is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (inputShortNameRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Short Name is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if ((inputCodeRef.current?.value as string).length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Code is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if ((inputNameRef.current?.value as string).length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Title is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if ((inputShortNameRef.current?.value as string).length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Short Name is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    e.preventDefault();\n    const state = {\n      Acct_Code: inputCodeRef.current?.value,\n      Acct_Title: inputNameRef.current?.value,\n      Short: inputShortNameRef.current?.value,\n      Account: inputAccountClassificationRef.current?.value,\n      Acct_Type: inputAccountTypeRef.current?.value,\n      IDNo: inputRequiredIDRef.current?.checked,\n      SubAccnt: inputRequiredSubAccountRef.current?.checked,\n      Inactive: inputMarkInactiveRef.current?.checked,\n      mode: \"\",\n      search: \"\",\n    };\n    if (mode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  };\n  const handleCancel = () => {\n    setMode(\"\");\n    if (inputCodeRef.current) {\n      inputCodeRef.current.value = \"\";\n    }\n    if (inputAccountClassificationRef.current) {\n      inputAccountClassificationRef.current.value = \"\";\n    }\n    if (inputAccountTypeRef.current) {\n      inputAccountTypeRef.current.value = \"\";\n    }\n    if (inputNameRef.current) {\n      inputNameRef.current.value = \"\";\n    }\n    if (inputShortNameRef.current) {\n      inputShortNameRef.current.value = \"\";\n    }\n    if (inputRequiredSubAccountRef.current) {\n      inputRequiredSubAccountRef.current.checked = false;\n    }\n    if (inputRequiredIDRef.current) {\n      inputRequiredIDRef.current.checked = false;\n    }\n    if (inputMarkInactiveRef.current) {\n      inputMarkInactiveRef.current.checked = false;\n    }\n  };\n  const handleAdd = () => {\n    setMode(\"add\");\n  };\n  const handleDelete = () => {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      cb: (userCodeConfirmation) => {\n        mutateDelete({\n          Acct_Code: inputCodeRef.current?.value,\n          userCodeConfirmation,\n        });\n      },\n    });\n  };\n  const onSelectionChange = (selectedRow: any) => {\n    if(selectedRow.length > 0){\n      const row = selectedRow[0]\n      if (inputCodeRef.current) {\n        inputCodeRef.current.value = row.Acct_Code;\n      }\n      if (inputAccountClassificationRef.current) {\n        inputAccountClassificationRef.current.value = row.Account;\n      }\n      if (inputAccountTypeRef.current) {\n        inputAccountTypeRef.current.value = row.Acct_Type;\n      }\n      if (inputNameRef.current) {\n        inputNameRef.current.value = row.Acct_Title;\n      }\n      if (inputShortNameRef.current) {\n        inputShortNameRef.current.value = row.Short;\n      }\n      if (inputRequiredSubAccountRef.current) {\n        inputRequiredSubAccountRef.current.checked = row.SubAccnt === \"YES\";\n      }\n      if (inputRequiredIDRef.current) {\n        inputRequiredIDRef.current.checked = row.IDNo === \"YES\";\n      }\n      if (inputMarkInactiveRef.current) {\n        inputMarkInactiveRef.current.checked = row.Inactive === \"YES\";\n      }\n      setMode(\"update\");\n    }else{\n      handleCancel()\n    }\n  };\n  const width = window.innerWidth - 100;\n  const height = window.innerHeight - 90;\n  const disableFields = mode === \"\";\n  if (isLoading || loadingAdd || loadingEdit || loadingDelete) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div\n      style={{\n        flex: 1,\n        backgroundColor: \"#F8F8FF\",\n      }}\n    >\n      <div\n        style={{ width: `${width}px`, height: `${height}px`, margin: \"auto\" }}\n      >\n        <div\n          style={{\n            height: \"120px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              height: \"30px\",\n              columnGap: \"10px\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Search: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"50px\",\n                },\n              }}\n              input={{\n                type: \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    refetchChartAccountSearch();\n                  }\n                  if (e.key === \"ArrowDown\") {\n                    e.preventDefault();\n                    const datagridview = document.querySelector(\n                      \".grid-container\"\n                    ) as HTMLDivElement;\n                    datagridview.focus();\n                  }\n                },\n                style: { width: \"500px\" },\n              }}\n              inputRef={inputSearchRef}\n            />\n            {!disableFields && (\n              <button\n                style={{\n                  margin: 0,\n                  padding: \"5px\",\n                  borderRadius: \"5px\",\n                  background: \"transparent\",\n                }}\n                onClick={handleCancel}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"17px\"\n                  height=\"17px\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                    fill=\"#d97706\"\n                  />\n                </svg>\n              </button>\n            )}\n            {disableFields && (\n              <button\n                style={{\n                  margin: 0,\n                  padding: \"5px\",\n                  borderRadius: \"5px\",\n                  background: \"transparent\",\n                }}\n                onClick={handleAdd}\n              >\n                <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\">\n                  <title />\n\n                  <g id=\"Complete\">\n                    <g data-name=\"add\" id=\"add-2\">\n                      <g>\n                        <line\n                          fill=\"none\"\n                          stroke=\"#000000\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          x1=\"12\"\n                          x2=\"12\"\n                          y1=\"19\"\n                          y2=\"5\"\n                        />\n\n                        <line\n                          fill=\"none\"\n                          stroke=\"#000000\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          x1=\"5\"\n                          x2=\"19\"\n                          y1=\"12\"\n                          y2=\"12\"\n                        />\n                      </g>\n                    </g>\n                  </g>\n                </svg>\n              </button>\n            )}\n            <button\n              style={{\n                margin: 0,\n                padding: \"5px\",\n                borderRadius: \"5px\",\n                background: \"transparent\",\n              }}\n              onClick={handleSave}\n              disabled={disableFields}\n            >\n              <svg width=\"17px\" height=\"17px\" viewBox=\"0 0 24 24\" fill=\"green\">\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M18.1716 1C18.702 1 19.2107 1.21071 19.5858 1.58579L22.4142 4.41421C22.7893 4.78929 23 5.29799 23 5.82843V20C23 21.6569 21.6569 23 20 23H4C2.34315 23 1 21.6569 1 20V4C1 2.34315 2.34315 1 4 1H18.1716ZM4 3C3.44772 3 3 3.44772 3 4V20C3 20.5523 3.44772 21 4 21L5 21L5 15C5 13.3431 6.34315 12 8 12L16 12C17.6569 12 19 13.3431 19 15V21H20C20.5523 21 21 20.5523 21 20V6.82843C21 6.29799 20.7893 5.78929 20.4142 5.41421L18.5858 3.58579C18.2107 3.21071 17.702 3 17.1716 3H17V5C17 6.65685 15.6569 8 14 8H10C8.34315 8 7 6.65685 7 5V3H4ZM17 21V15C17 14.4477 16.5523 14 16 14L8 14C7.44772 14 7 14.4477 7 15L7 21L17 21ZM9 3H15V5C15 5.55228 14.5523 6 14 6H10C9.44772 6 9 5.55228 9 5V3Z\"\n                  fill=\"green\"\n                />\n              </svg>\n            </button>\n            <button\n              style={{\n                margin: 0,\n                padding: \"5px\",\n                borderRadius: \"5px\",\n                background: \"transparent\",\n              }}\n              onClick={handleDelete}\n              disabled={mode !== \"update\"}\n            >\n              <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\">\n                <path\n                  d=\"M4 7H20\"\n                  stroke=\"red\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M6 7V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V7\"\n                  stroke=\"red\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z\"\n                  stroke=\"red\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </button>\n          </div>\n          <div\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"30px\",\n              rowGap: \"15px\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Code: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"40px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"90px\" },\n              }}\n              inputRef={inputCodeRef}\n            />\n            <TextInput\n              label={{\n                title: \"Account Classification: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"135px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"120px\" },\n              }}\n              inputRef={inputAccountClassificationRef}\n            />\n            <TextInput\n              label={{\n                title: \"Account Type: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"90px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"100px\" },\n              }}\n              inputRef={inputAccountTypeRef}\n            />\n            <TextInput\n              label={{\n                title: \"Name/Title: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"80px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"350px\" },\n              }}\n              inputRef={inputNameRef}\n            />\n            <TextInput\n              label={{\n                title: \"ShortName: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"80px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"200px\" },\n              }}\n              inputRef={inputShortNameRef}\n            />\n            <TextInput\n              label={{\n                title: \"Required sub-account?: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"140px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n\n                type: \"checkbox\",\n                style: { width: \"12px\", height: \"12px\" },\n              }}\n              inputRef={inputRequiredSubAccountRef}\n            />\n\n            <TextInput\n              label={{\n                title: \"Required I.D.?: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"85px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n\n                type: \"checkbox\",\n                style: { width: \"12px\", height: \"12px\" },\n              }}\n              inputRef={inputRequiredIDRef}\n            />\n            <TextInput\n              label={{\n                title: \"Mark As Inactive: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n\n                type: \"checkbox\",\n                style: { width: \"12px\", height: \"12px\" },\n              }}\n              inputRef={inputMarkInactiveRef}\n            />\n          </div>\n        </div>\n        <UpwardTable\n          rows={rows}\n          column={chartAccountColumn}\n          width={width}\n          height={height}\n          dataReadOnly={true}\n          onSelectionChange={onSelectionChange}\n        />\n      </div>\n    </div>\n  );\n}\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n"],"names":["UpwardTable","_ref","rows","column","width","height","dataReadOnly","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onSelectionChangeRef","useRef","_useState","useState","_useState2","_slicedToArray","columns","setColumns","_useState3","_useState4","hoveredColumn","setHoveredColumn","_useState5","_useState6","selectedRows","setSelectedRows","_useState7","_useState8","lastSelectedRowIndex","setLastSelectedRowIndex","_useState9","_useState10","selectedItems","setSelectedItems","startResize","index","e","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","handleKeyDown","target","closest","key","selectedItemsParams","rowIndex","length","includes","filter","i","console","log","selectedRowData","d","idx","current","concat","prevIndex","_row$querySelector","newPrevIndex","row","querySelector","focus","scrollIntoView","block","behavior","_row$querySelector2","useEffect","window","_jsx","style","display","justifyContent","children","_jsxs","className","flexDirection","tabIndex","position","zIndex","top","background","map","col","fontWeight","defaultValue","headerName","readOnly","onChange","onMouseDown","onMouseEnter","onMouseLeave","onClick","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","push","ctrlKey","metaKey","handleRowClick","onDoubleClick","handleRowDoubleClick","colIndex","value","field","TextInput","input","label","inputRef","id","useId","alignItems","_objectSpread","htmlFor","title","ref","reducer","state","action","type","_defineProperty","chartAccountColumn","queryKey","ChartAccount","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","inputSearchRef","inputCodeRef","inputAccountClassificationRef","inputAccountTypeRef","inputNameRef","inputShortNameRef","inputRequiredSubAccountRef","inputRequiredIDRef","inputMarkInactiveRef","_useContext","useContext","AuthContext","myAxios","user","setRows","mode","setMode","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_inputSearchRef$curre","_inputSearchRef$curre2","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","data","chartAccount","checked","refetchOnWindowFocus","isLoading","refetchChartAccountSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","success","Swal","icon","message","showConfirmButton","timer","then","handleCancel","innerWidth","innerHeight","disableFields","flex","backgroundColor","margin","columnGap","fontSize","onKeyDown","padding","borderRadius","xmlns","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","x2","y1","y2","_inputCodeRef$current","_inputNameRef$current","_inputShortNameRef$cu","_inputCodeRef$current2","_inputNameRef$current2","_inputShortNameRef$cu2","_inputCodeRef$current3","_inputNameRef$current3","_inputShortNameRef$cu3","_inputAccountClassifi","_inputAccountTypeRef$","_inputRequiredIDRef$c","_inputRequiredSubAcco","_inputMarkInactiveRef","Acct_Code","Acct_Title","Short","Account","Acct_Type","IDNo","SubAccnt","Inactive","search","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","disabled","fillRule","clipRule","_inputCodeRef$current4","marginTop","rowGap","flexWrap","selectedRow","props","_preConfirm","html","text","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","confirmButtonColor","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","result","isConfirmed","isDeclined","cancelButtonColor"],"sourceRoot":""}