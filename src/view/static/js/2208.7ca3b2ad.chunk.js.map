{"version":3,"file":"static/js/2208.7ca3b2ad.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/PrintPreview/dataCore.ts","components/Table.tsx","feautures/Admin/Reports/Accounting/SubsidiaryLedger.tsx","hooks/useQueryModalTable.tsx","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        sx={{\n          minWidth,\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","export function getTableCellHeight(\r\n  tempCell: HTMLTableCellElement,\r\n  content: string,\r\n  columnWidth: string,\r\n  contentElment: Element,\r\n  tempTable: HTMLTableElement\r\n) {\r\n  tempCell.style.width = columnWidth;\r\n  tempCell.textContent = content;\r\n  contentElment.appendChild(tempTable);\r\n}\r\n\r\nexport function defaultArrangeDataCore({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  fontSize = \"11px\",\r\n  summaryHeight = 0,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  fontSize: string;\r\n  summaryHeight?: number;\r\n}) {\r\n  const newData: Array<any> = [];\r\n  let trHeight = 0;\r\n  let temp: Array<any> = [];\r\n  const contentElment = document.querySelector(\".content\") as Element;\r\n  const maxHeight =\r\n    contentElment.getBoundingClientRect().height - adjustMaxHeight;\r\n\r\n  data.forEach((itm: any, idx: number) => {\r\n    itm = beforeArrangeData(itm);\r\n    const contentElment = document.querySelector(\".content\") as Element;\r\n    const tempTable = document.createElement(\"table\");\r\n    const tempRow = tempTable.insertRow();\r\n\r\n    if (itm.summaryReport) {\r\n      if (maxHeight - trHeight <= summaryHeight + 20) {\r\n        trHeight += maxHeight - trHeight;\r\n      }\r\n    }\r\n    column.forEach((col) => {\r\n      const tempCell = tempRow.insertCell();\r\n      tempTable.style.visibility = \"hidden\";\r\n      tempTable.style.width = `100%`;\r\n      tempTable.style.fontSize = fontSize;\r\n\r\n      getTableCellHeight(\r\n        tempCell,\r\n        itm[col.datakey],\r\n        col.width,\r\n        contentElment,\r\n        tempTable\r\n      );\r\n    });\r\n    trHeight += tempRow.getBoundingClientRect().height;\r\n    contentElment.removeChild(tempTable);\r\n    temp.push(itm);\r\n    if (\r\n      trHeight >= maxHeight ||\r\n      (idx === data.length - 1 && trHeight < maxHeight)\r\n    ) {\r\n      newData.push(temp);\r\n      trHeight = 0;\r\n      temp = [];\r\n    }\r\n  });\r\n\r\n  return newData;\r\n}\r\nexport const arrangeData = async ({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  cb,\r\n  fontSize = \"11px\",\r\n  summaryHeight,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  cb?: ({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n  }: {\r\n    data: any;\r\n    column: Array<any>;\r\n    beforeArrangeData: (itm: any) => any;\r\n    adjustMaxHeight: number;\r\n  }) => any[];\r\n  fontSize?: string;\r\n  summaryHeight?: number;\r\n}) => {\r\n  if (data === undefined) return [];\r\n  if (cb) {\r\n    return cb({\r\n      data,\r\n      column,\r\n      beforeArrangeData,\r\n      adjustMaxHeight,\r\n    });\r\n  }\r\n\r\n  return defaultArrangeDataCore({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n    fontSize,\r\n    summaryHeight,\r\n  });\r\n};\r\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useRef, useState, CSSProperties } from \"react\";\nimport {\n  FormControl,\n  MenuItem,\n  Select,\n  TextField,\n  InputLabel,\n  Box,\n  InputAdornment,\n  IconButton,\n  OutlinedInput,\n} from \"@mui/material\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport PrintPreview, {\n  columnSelection,\n  copiedByHeaderOnDoubleClick,\n} from \"../../../../components/PrintPreview/PrintPreview\";\nimport \"./productionreport.css\";\nimport { flushSync } from \"react-dom\";\nimport { arrangeData } from \"../../../../components/PrintPreview/dataCore\";\nimport { format } from \"date-fns\";\n\nconst initialState = {\n  account: \"\",\n  account_title: \"\",\n  dateFormat: \"Custom\",\n  dateFrom: new Date(),\n  dateTo: new Date(),\n  yearCount: new Date().getFullYear().toString().slice(-2),\n  subsi: 0,\n  subsi_options: \"\",\n  format: 0,\n  field: 0,\n  title: \"\",\n  report: \"Custom\",\n};\nconst subsidiaryLedgerColumnWithBalance = [\n  {\n    datakey: \"Date_Entry\",\n    header: \"DATE\",\n    width: \"170px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Source_No\",\n    header: \"REF NO.\",\n    width: \"300px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Sub_Acct\",\n    header: \"SUB ACCT.\",\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"ID_No\",\n    header: \"ID NO\",\n    width: \"300px\",\n    excelColumnWidth: 20,\n  },\n  // {\n  //   datakey: \"Check_No\",\n  //   header: \"CHECK NO\",\n  //   width: \"120px\",\n  //   excelColumnWidth: 20,\n  // },\n  {\n    datakey: \"Debit\",\n    header: \"DEBIT\",\n    type: \"number\",\n    total: true,\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Credit\",\n    header: \"CREDIT\",\n    type: \"number\",\n    total: true,\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Bal\",\n    header: \"BALANCE\",\n    total: true,\n    type: \"number\",\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Explanation\",\n    header: \"EXPLANATION\",\n    width: \"300px\",\n    excelColumnWidth: 20,\n  },\n];\nconst subsidiaryLedgerColumnNoBalance = [\n  {\n    datakey: \"Date_Entry\",\n    header: \"DATE\",\n    width: \"170px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Source_No\",\n    header: \"REF NO.\",\n    width: \"250px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Sub_Acct\",\n    header: \"SUB ACCT.\",\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"ID_No\",\n    header: \"ID NO\",\n    width: \"300px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Check_No\",\n    header: \"CHECK NO\",\n    width: \"120px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Debit\",\n    header: \"DEBIT\",\n    total: true,\n    type: \"number\",\n    width: \"120px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Credit\",\n    header: \"CREDIT\",\n    total: true,\n    type: \"number\",\n    width: \"120px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Explanation\",\n    header: \"EXPLANATION\",\n    width: \"200px\",\n    excelColumnWidth: 20,\n  },\n];\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nfunction ShowDateSelection({ state, dispatch, handleInputChange, user }: any) {\n  const dateFromRef = useRef<HTMLElement>(null);\n  const dateToRef = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <CustomDatePicker\n        fullWidth={true}\n        label=\"Date From\"\n        onChange={(value: any) => {\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"dateFrom\",\n            value: value,\n          });\n          state.dateFrom = value;\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"title\",\n            value: setupTitle(state, user?.department as string),\n          });\n        }}\n        value={new Date(state.dateFrom)}\n        onKeyDown={(e: any) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            const timeout = setTimeout(() => {\n              dateFromRef.current?.querySelector(\"button\")?.click();\n              clearTimeout(timeout);\n            }, 150);\n          }\n        }}\n        datePickerRef={dateFromRef}\n        textField={{\n          InputLabelProps: {\n            style: {\n              fontSize: \"14px\",\n            },\n          },\n          InputProps: {\n            style: { height: \"27px\", fontSize: \"14px\" },\n          },\n        }}\n        sx={{}}\n      />\n      <CustomDatePicker\n        fullWidth={true}\n        label=\"Date To\"\n        onChange={(value: any) => {\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"dateTo\",\n            value: value,\n          });\n          state.dateTo = value;\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"title\",\n            value: setupTitle(state, user?.department as string),\n          });\n        }}\n        value={new Date(state.dateTo)}\n        onKeyDown={(e: any) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            const timeout = setTimeout(() => {\n              dateToRef.current?.querySelector(\"button\")?.click();\n              clearTimeout(timeout);\n            }, 150);\n          }\n        }}\n        datePickerRef={dateToRef}\n        textField={{\n          InputLabelProps: {\n            style: {\n              fontSize: \"14px\",\n            },\n          },\n          InputProps: {\n            style: { height: \"27px\", fontSize: \"14px\" },\n          },\n        }}\n      />\n    </>\n  );\n}\nfunction setupTitle(state: any, department: string) {\n  return `${\n    department === \"UMIS\"\n      ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n      : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n  }\\nSubsidiary Ledger\\n\\n\\nAccount:${\n    state.account === \"\" ? \"\" : `${state.account_title} `\n  }(${state.account === \"\" ? \"ALL\" : state.account})\\n${\n    state.subsi === 0\n      ? `For the Period: ${DateToStringFormat(state)}`\n      : state.subsi === 1\n      ? `ID No.:  (${state.subsi_options})`\n      : `Sub Account: (${state.subsi_options})`\n  }\n`;\n}\nfunction DateToStringFormat(state: any) {\n  let dateString = \"\";\n  if (state.dateFormat === \"Daily\") {\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  } else if (state.dateFormat === \"Monthly\") {\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n    });\n  } else if (state.dateFormat === \"Yearly\") {\n    const year = new Date(state.dateFrom).getFullYear();\n    const { startYearFormatted, endYearFormatted } = formatYearRange(\n      year,\n      parseInt(state.yearCount)\n    );\n    dateString = `${startYearFormatted}-${endYearFormatted}`;\n  } else {\n    const dateFrom = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n    const dateTo = state.dateTo.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n    dateString = `${dateFrom} to ${dateTo}`;\n  }\n\n  return dateString;\n}\nfunction formatYearRange(startYear: number, yearCount: number) {\n  const startDate = new Date(startYear, 0, 1); // Month is 0-based, so 0 is January\n  const endDate = new Date(startYear + yearCount, 11, 31); // Last day of the last year\n\n  const startYearFormatted = startDate.getFullYear();\n  const endYearFormatted = endDate.getFullYear();\n\n  if (endYearFormatted < startYearFormatted) {\n    return {\n      startYearFormatted: endYearFormatted,\n      endYearFormatted: startYearFormatted,\n    };\n  } else {\n    return {\n      startYearFormatted,\n      endYearFormatted,\n    };\n  }\n}\nfunction Setting({ state, dispatch }: { state: any; dispatch: any }) {\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const clientSearchInput = useRef<HTMLInputElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const { data: dataSubAccounts, isLoading: isLoadingSubAccounts } = useQuery({\n    queryKey: \"sub-accounts\",\n    queryFn: async () =>\n      await myAxios.get(\"/reports/accounting/get-sub-account-acronym\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"client-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"subsi_options\",\n        value: selectedRowData[0].IDNo,\n      });\n      state.subsi_options = selectedRowData[0].IDNo;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n\n      closeCliendIDsModal();\n    },\n    searchRef: clientSearchInput,\n  });\n\n  const {\n    ModalComponent: modalChartAccount,\n    openModal: openChartAccountModal,\n    isLoading: isLoadingChartAccountModal,\n    closeModal: closeChartAccountModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reports/accounting/chart-schedule-account\",\n      queryUrlName: \"account_search\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Tittle\", flex: 1 },\n      {\n        field: \"Short\",\n        headerName: \"Short Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"chart-account-ids\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"account\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"account_title\",\n        value: selectedRowData[0].Acct_Title,\n      });\n\n      state.account = selectedRowData[0].Acct_Code;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n\n      state.account_title = selectedRowData[0].Acct_Title;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n\n      closeChartAccountModal();\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"account\" && value === \"\") {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"account_title\", value: \"\" });\n    }\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"title\",\n      value: setupTitle(\n        { ...state, [name]: value },\n        user?.department as string\n      ),\n    });\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"10px\",\n      }}\n    >\n      <TextField\n        label=\"Title\"\n        fullWidth\n        name=\"title\"\n        value={state.title}\n        onChange={handleInputChange}\n        rows={6}\n        multiline\n        InputProps={{\n          style: { height: \"140px\", fontSize: \"12px\" },\n        }}\n        sx={{\n          flex: 1,\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n        }}\n      />\n      <Box\n        sx={(theme) => ({\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"10px\",\n          margin: \"10px 0\",\n          width: \"100%\",\n        })}\n      >\n        {isLoadingChartAccountModal ? (\n          <LoadingButton loading={isLoadingChartAccountModal} />\n        ) : (\n          <FormControl\n            sx={{\n              gridColumn: \"1 / span 2\",\n              width: \"100%\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          >\n            <InputLabel htmlFor=\"account_id\">Account</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              name=\"account\"\n              value={state.account}\n              onChange={handleInputChange}\n              id=\"account_id\"\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return openChartAccountModal(state.account);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      openChartAccountModal(state.account);\n                    }}\n                    edge=\"end\"\n                    color=\"secondary\"\n                  >\n                    <PersonSearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Account\"\n            />\n          </FormControl>\n        )}\n        <TextField\n          fullWidth\n          name=\"account_title\"\n          value={state.account_title}\n          onChange={handleInputChange}\n          InputProps={{\n            readOnly: true,\n            style: { height: \"27px\" },\n          }}\n          sx={{\n            gridColumn: \"1 / span 2\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"subsi_id\">Subsidiary</InputLabel>\n          <Select\n            labelId=\"subsi_id\"\n            value={state.subsi}\n            label=\"Subsidiary\"\n            name=\"subsi\"\n            onChange={(e) => {\n              handleInputChange(e);\n              handleInputChange({\n                target: {\n                  value: \"\",\n                  name: \"subsi_options\",\n                },\n              });\n            }}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n              width: \"120px\",\n            }}\n          >\n            <MenuItem value={0}>All</MenuItem>\n            <MenuItem value={1}>I.D No.</MenuItem>\n            <MenuItem value={2}>Sub Acct</MenuItem>\n          </Select>\n        </FormControl>\n        {state.subsi === 0 && (\n          <TextField\n            InputProps={{\n              readOnly: true,\n              style: { height: \"27px\" },\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n        {state.subsi === 1 && (\n          <React.Fragment>\n            {isLoadingClientIdsModal ? (\n              <LoadingButton loading={isLoadingClientIdsModal} />\n            ) : (\n              <FormControl\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                <InputLabel htmlFor=\"clients_id\">Clients</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  label=\"Clients\"\n                  name=\"subsi_options\"\n                  value={state.subsi_options}\n                  onChange={handleInputChange}\n                  id=\"clients_id\"\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      return openCliendIDsModal(state.subsi_options);\n                    }\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        onClick={() => {\n                          openCliendIDsModal(state.subsi_options);\n                        }}\n                        edge=\"end\"\n                        color=\"secondary\"\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n        {state.subsi === 2 && (\n          <React.Fragment>\n            {isLoadingSubAccounts ? (\n              <LoadingButton loading={isLoadingSubAccounts} />\n            ) : (\n              <FormControl\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"sub_account_id\">Sub Account</InputLabel>\n                <Select\n                  labelId=\"sub_account_id\"\n                  value={state.subsi_options}\n                  label=\"Sub Account\"\n                  name=\"subsi_options\"\n                  onChange={handleInputChange}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  <MenuItem value={\"All\"}>All</MenuItem>\n                  {dataSubAccounts?.data.sub_account.map(\n                    (itm: any, idx: number) => {\n                      return (\n                        <MenuItem key={idx} value={itm.Acronym}>\n                          {itm.Acronym}\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n\n        <ShowDateSelection\n          dispatch={dispatch}\n          state={state}\n          handleInputChange={handleInputChange}\n          user={user}\n        />\n      </Box>\n      <fieldset\n        style={\n          {\n            gridArea: \"content4\",\n            padding: \"15px\",\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            flex: 1,\n          } as CSSProperties\n        }\n      >\n        <legend style={{ color: \"black\", fontFamily: \"serif\" }}>Report</legend>\n        <Box\n          sx={(theme) => ({\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            alignItems: \"center\",\n          })}\n        >\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"format\">Format</InputLabel>\n            <Select\n              labelId=\"format\"\n              value={state.format}\n              label=\"Format\"\n              name=\"format\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={0}>With Running Balance</MenuItem>\n              <MenuItem value={1}>No Running Balance</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"field\">Field</InputLabel>\n            <Select\n              labelId=\"field\"\n              value={state.field}\n              label=\"Sort\"\n              name=\"field\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={0}>Explanations</MenuItem>\n              <MenuItem value={1}>Payee</MenuItem>\n              <MenuItem value={2}>Remarks</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n      </fieldset>\n      {modalChartAccount}\n      {ModalClientIDs}\n    </div>\n  );\n}\nfunction columnRender(format: any) {\n  return [\n    subsidiaryLedgerColumnWithBalance,\n    subsidiaryLedgerColumnWithBalance,\n    subsidiaryLedgerColumnNoBalance,\n  ][format];\n}\n\nexport default function SubsidiaryLedger() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [column, setColumn] = useState(columnRender(initialState.subsi));\n  async function onReportSubmit(setData: any, setLoading: any, state: any) {\n    const updateColumn = columnRender(state.subsi);\n    flushSync(() => {\n      setColumn(updateColumn);\n    });\n\n    const response = await myAxios.post(\n      \"/reports/accounting/subsidiary-ledger-report\",\n      state,\n      {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }\n    );\n    const jsonData = await response.data;\n    arrangeData({\n      data: JSON.parse(jsonData.report),\n      column: updateColumn,\n      beforeArrangeData: (itm) => {\n        const columnNumber = updateColumn\n          .filter((itm: any) => itm.type === \"number\")\n          .map((d: any) => d.datakey);\n\n        columnNumber.forEach((datakey: any) => {\n          if (itm.hasOwnProperty(datakey)) {\n            itm[datakey] = formatNumberWithCommas(\n              parseFloat(itm[datakey].toString().replace(/,/g, \"\"))\n            );\n          }\n        });\n\n        return itm;\n      },\n      adjustMaxHeight: 250,\n      // drawHeader: (data: any) => {\n      //   const DrawHeader = ({ state }: any) => (\n      //     <thead>\n      //       {state.title.split(\"\\n\").map((t: string, idx: number) => {\n      //         return (\n      //           <tr key={idx}>\n      //             <th\n      //               style={{\n      //                 fontSize: \"14px\",\n      //                 fontWeight: \"bold\",\n      //                 textAlign: \"left\",\n      //               }}\n      //               colSpan={column.length}\n      //             >\n      //               {t}\n      //             </th>\n      //           </tr>\n      //         );\n      //       })}\n      //       <tr style={{ height: \"40px\" }}></tr>\n      //       <tr>\n      //         {column.map((itm: any, rowIdx: number) => {\n      //           return (\n      //             <th\n      //               onDoubleClick={(e) =>\n      //                 copiedByHeaderOnDoubleClick(e, itm.datakey, data)\n      //               }\n      //               style={{\n      //                 width: itm.width,\n      //                 fontSize: \"12px\",\n      //                 fontWeight: \"bold\",\n      //                 borderBottom: \"1px solid black\",\n      //               }}\n      //               key={rowIdx}\n      //             >\n      //               {itm.header}\n      //             </th>\n      //           );\n      //         })}\n      //       </tr>\n      //     </thead>\n      //   );\n\n      //   return ReactDOMServer.renderToString(<DrawHeader state={state} />);\n      // },\n      // drawTable: (rowItem: any) => {\n      //   const DrawData = () => {\n      //     return (\n      //       <tr>\n      //         {column.map((colItem: any, colIdx: number) => {\n      //           return (\n      //             <td\n      //               onClick={columnSelection}\n      //               className={`editable not-looking `}\n      //               key={colIdx}\n      //               style={{\n      //                 fontSize: \"11px\",\n      //                 fontWeight: \"500\",\n      //                 width: `${colItem.width} !important`,\n      //                 textAlign:\n      //                   colItem.datakey === \"AssuredName\" ||\n      //                   colItem.datakey === \"Mortgagee\"\n      //                     ? \"center\"\n      //                     : colItem.total || colItem.datakey === \"InsuredValue\"\n      //                     ? \"right\"\n      //                     : \"left\",\n      //               }}\n      //             >\n      //               {rowItem[colItem.datakey]}\n      //             </td>\n      //           );\n      //         })}\n      //       </tr>\n      //     );\n      //   };\n\n      //   return ReactDOMServer.renderToString(<DrawData />);\n      // },\n    }).then((newData) => {\n      setData(newData);\n      setLoading(false);\n    });\n  }\n  initialState.title = setupTitle(initialState, user?.department as string);\n\n  return (\n    <PrintPreview\n      column={column}\n      initialState={initialState}\n      Setting={(state, dispatch) => (\n        <Setting state={state} dispatch={dispatch} />\n      )}\n      onReportSubmit={onReportSubmit}\n      scaleDefaultValue={100}\n      drawTable={(data, state) => {\n        return data.map((pages: any, pageNumber: number) => {\n          return (\n            <div className=\"page out-page\" key={pageNumber}>\n              <div className=\"header\" style={{ height: \"50px\" }}></div>\n              <div className=\"content\">\n                <table>\n                  <thead>\n                    {state.title.split(\"\\n\").map((t: string, idx: number) => {\n                      return (\n                        <tr key={idx}>\n                          <th\n                            style={{\n                              fontSize: \"14px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            colSpan={column.length}\n                          >\n                            {t}\n                          </th>\n                        </tr>\n                      );\n                    })}\n                    <tr style={{ height: \"40px\" }}></tr>\n                    <tr>\n                      {column.map((itm: any, rowIdx: number) => {\n                        return (\n                          <th\n                            onDoubleClick={(e) =>\n                              copiedByHeaderOnDoubleClick(e, itm.datakey, data)\n                            }\n                            style={{\n                              width: itm.width,\n                              fontSize: \"12px\",\n                              fontWeight: \"bold\",\n                              borderBottom: \"1px solid black\",\n                            }}\n                            key={rowIdx}\n                          >\n                            {itm.header}\n                          </th>\n                        );\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {pages.map((rowItem: any, rowIdx: number) => {\n                      return (\n                        <tr key={rowIdx}>\n                          {column.map((colItem: any, colIdx: number) => {\n                            return (\n                              <td\n                                onClick={columnSelection}\n                                className={`editable not-looking page-${pageNumber}  row-${rowIdx}_col-${colIdx}`}\n                                key={colIdx}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"500\",\n                                  width: `${colItem.width} !important`,\n                                  textAlign:\n                                    colItem.datakey === \"AssuredName\" ||\n                                    colItem.datakey === \"Mortgagee\"\n                                      ? \"center\"\n                                      : colItem.total ||\n                                        colItem.datakey === \"InsuredValue\"\n                                      ? \"right\"\n                                      : \"left\",\n                                }}\n                              >\n                                {rowItem[colItem.datakey]}\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                  <tfoot>\n                    {pageNumber === data.length - 1 && (\n                      <tr>\n                        <td\n                          style={{\n                            fontWeight: \"bold\",\n                            borderTop: \"1px solid black\",\n                            fontSize: \"11px\",\n                          }}\n                          colSpan={3}\n                        >\n                          No. of Records: {data.flat().length - 1}\n                        </td>\n                        {column.map((itm: any, idx: number) => {\n                          if (!itm.total) {\n                            if (idx < 3) {\n                              return (\n                                <React.Fragment key={idx}></React.Fragment>\n                              );\n                            }\n                            return (\n                              <td\n                                key={idx}\n                                style={{\n                                  borderTop: \"1px solid black\",\n                                }}\n                              ></td>\n                            );\n                          }\n                          let flattenedArray = data.flat();\n                          const total = flattenedArray.reduce(\n                            (d: any, itms: any) => {\n                              return (\n                                d +\n                                parseFloat(itms[itm.datakey]?.replace(/,/g, \"\"))\n                              );\n                            },\n                            0\n                          );\n\n                          return (\n                            <td\n                              key={idx}\n                              style={{\n                                borderTop: \"1px solid black\",\n                                fontWeight: \"bold\",\n                                textAlign: \"right\",\n                                fontSize: \"11px\",\n                              }}\n                            >\n                              {isNaN(total)\n                                ? \"0\"\n                                : formatNumberWithCommas(total)}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    )}\n                  </tfoot>\n                </table>\n              </div>\n              <div\n                className=\"footer\"\n                style={{\n                  height: \"50px\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  {format(new Date(), \"dd/MM/yyyy\")}\n                </p>\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  Page {pageNumber + 1} of {data.length}\n                </p>\n              </div>\n            </div>\n          );\n        });\n      }}\n      pageHeight={\"14in\"}\n      pageWidth={\"10.5in\"}\n    />\n  );\n}\n\nfunction formatNumberWithCommas(number: number) {\n  return number.toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","ref","slotProps","size","sx","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","marginBottom","InputProps","e","_searchRef$current","code","preventDefault","current","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","defaultArrangeDataCore","column","beforeArrangeData","adjustMaxHeight","_ref$fontSize","_ref$summaryHeight","summaryHeight","newData","trHeight","temp","maxHeight","getBoundingClientRect","itm","contentElment","tempTable","createElement","tempRow","insertRow","summaryReport","col","tempCell","insertCell","visibility","content","columnWidth","textContent","appendChild","getTableCellHeight","datakey","removeChild","push","arrangeData","_x","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","cb","_ref2$fontSize","wrap","_context","prev","next","undefined","abrupt","stop","apply","arguments","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","account","account_title","dateFormat","dateFrom","Date","dateTo","yearCount","getFullYear","toString","slice","subsi","subsi_options","format","field","report","subsidiaryLedgerColumnWithBalance","header","excelColumnWidth","type","total","subsidiaryLedgerColumnNoBalance","reducer","state","action","_defineProperty","ShowDateSelection","dispatch","user","handleInputChange","dateFromRef","useRef","dateToRef","_Fragment","setupTitle","department","timeout","setTimeout","_dateFromRef$current","_dateFromRef$current$","click","clearTimeout","InputLabelProps","_dateToRef$current","_dateToRef$current$qu","dateString","toLocaleDateString","year","month","day","_formatYearRange","startYear","startDate","endDate","startYearFormatted","endYearFormatted","formatYearRange","parseInt","DateToStringFormat","Setting","_queryFn","chartAccountSearchInput","clientSearchInput","AuthContext","myAxios","_useQuery","useQuery","queryFn","get","headers","Authorization","accessToken","sent","dataSubAccounts","isLoadingSubAccounts","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","IDNo","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountModal","modalChartAccount","openChartAccountModal","isLoadingChartAccountModal","_e$target","target","multiline","theme","gap","margin","LoadingButton","FormControl","gridColumn","zIndex","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","edge","PersonSearchIcon","readOnly","Select","labelId","MenuItem","React","sub_account","map","Acronym","gridArea","border","borderRadius","fontFamily","rowGap","columnRender","SubsidiaryLedger","_onReportSubmit","_useContext2","setColumn","PrintPreview","_Setting","onReportSubmit","_x2","_x3","_callee2","setData","setLoading","updateColumn","response","jsonData","_context2","flushSync","post","JSON","parse","columnNumber","d","hasOwnProperty","formatNumberWithCommas","parseFloat","replace","then","scaleDefaultValue","drawTable","pages","pageNumber","split","t","textAlign","colSpan","rowIdx","onDoubleClick","copiedByHeaderOnDoubleClick","borderBottom","rowItem","colItem","colIdx","columnSelection","borderTop","flat","reduce","itms","_itms$itm$datakey","isNaN","pageHeight","pageWidth","number","toLocaleString","minimumFractionDigits","maximumFractionDigits","CustomizeAxiosFunc","_CustomizeAxiosFunc","search","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","_useState3","_useState4","customizeAxiostool","_args2","_callee3","_context3","res","refetchOnWindowFocus","refetch","success","alert","message","_searchRef$current2","_searchRef$current3","selectedIDs","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","source","excluded","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}