{"version":3,"file":"static/js/7664.798b2d5c.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/PrintPreview/dataCore.ts","feautures/Admin/Reports/Production/productionreport.column.ts","feautures/Admin/Reports/Production/ProductionReport.tsx","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        sx={{\n          minWidth,\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","export function getTableCellHeight(\r\n  tempCell: HTMLTableCellElement,\r\n  content: string,\r\n  columnWidth: string,\r\n  contentElment: Element,\r\n  tempTable: HTMLTableElement\r\n) {\r\n  tempCell.style.width = columnWidth;\r\n  tempCell.textContent = content;\r\n  contentElment.appendChild(tempTable);\r\n}\r\n\r\nexport function defaultArrangeDataCore({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  fontSize = \"11px\",\r\n  summaryHeight = 0,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  fontSize: string;\r\n  summaryHeight?: number;\r\n}) {\r\n  const newData: Array<any> = [];\r\n  let trHeight = 0;\r\n  let temp: Array<any> = [];\r\n  const contentElment = document.querySelector(\".content\") as Element;\r\n  const maxHeight =\r\n    contentElment.getBoundingClientRect().height - adjustMaxHeight;\r\n\r\n  data.forEach((itm: any, idx: number) => {\r\n    itm = beforeArrangeData(itm);\r\n    const contentElment = document.querySelector(\".content\") as Element;\r\n    const tempTable = document.createElement(\"table\");\r\n    const tempRow = tempTable.insertRow();\r\n\r\n    if (itm.summaryReport) {\r\n      if (maxHeight - trHeight <= summaryHeight + 20) {\r\n        trHeight += maxHeight - trHeight;\r\n      }\r\n    }\r\n    column.forEach((col) => {\r\n      const tempCell = tempRow.insertCell();\r\n      tempTable.style.visibility = \"hidden\";\r\n      tempTable.style.width = `100%`;\r\n      tempTable.style.fontSize = fontSize;\r\n\r\n      getTableCellHeight(\r\n        tempCell,\r\n        itm[col.datakey],\r\n        col.width,\r\n        contentElment,\r\n        tempTable\r\n      );\r\n    });\r\n    trHeight += tempRow.getBoundingClientRect().height;\r\n    contentElment.removeChild(tempTable);\r\n    temp.push(itm);\r\n    if (\r\n      trHeight >= maxHeight ||\r\n      (idx === data.length - 1 && trHeight < maxHeight)\r\n    ) {\r\n      newData.push(temp);\r\n      trHeight = 0;\r\n      temp = [];\r\n    }\r\n  });\r\n\r\n  return newData;\r\n}\r\nexport const arrangeData = async ({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  cb,\r\n  fontSize = \"11px\",\r\n  summaryHeight,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  cb?: ({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n  }: {\r\n    data: any;\r\n    column: Array<any>;\r\n    beforeArrangeData: (itm: any) => any;\r\n    adjustMaxHeight: number;\r\n  }) => any[];\r\n  fontSize?: string;\r\n  summaryHeight?: number;\r\n}) => {\r\n  if (data === undefined) return [];\r\n  if (cb) {\r\n    return cb({\r\n      data,\r\n      column,\r\n      beforeArrangeData,\r\n      adjustMaxHeight,\r\n    });\r\n  }\r\n\r\n  return defaultArrangeDataCore({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n    fontSize,\r\n    summaryHeight,\r\n  });\r\n};\r\n","const summaryColumn = (props: {\r\n  removeList: Array<string>;\r\n  column: Array<any>;\r\n  cb?: (column: Array<any>) => Array<any>;\r\n}) => {\r\n  let newColumn: Array<any> = [];\r\n  newColumn = props.column.filter(\r\n    (itms) => !props.removeList.includes(itms.datakey)\r\n  );\r\n  if (props?.cb) {\r\n    return props.cb(newColumn);\r\n  }\r\n\r\n  return newColumn;\r\n};\r\nconst reportBondsColumn = [\r\n  {\r\n    datakey: \"DateIssued\",\r\n    header: \"Date Issued\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"PolicyNo\",\r\n    header: \"Policy No\",\r\n    width: \"250px\",\r\n    excelColumnWidth: 30,\r\n  },\r\n  {\r\n    datakey: \"AssuredName\",\r\n    header: \"Assured Name\",\r\n    width: \"350px\",\r\n    excelColumnWidth: 50,\r\n  },\r\n  {\r\n    datakey: \"EffictiveDate\",\r\n    header: \"Effictive Date\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"InsuredValue\",\r\n    header: \"Insured Value\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalPremium\",\r\n    header: \"Premium\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Misc\",\r\n    header: \"Misc\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Notarial\",\r\n    header: \"Notarial Fee\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"DocStamp\",\r\n    header: \"Doc Stamp\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Vat\",\r\n    header: \"EVat\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"LGovTax\",\r\n    header: \"LGT\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalDue\",\r\n    header: \"Total\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n];\r\nconst summaryBondsColumn = summaryColumn({\r\n  column: reportBondsColumn,\r\n  removeList: [\r\n    \"InsuredValue\",\r\n    \"TotalPremium\",\r\n    \"Misc\",\r\n    \"Notarial\",\r\n    \"DocStamp\",\r\n    \"Vat\",\r\n    \"LGovTax\",\r\n  ],\r\n});\r\nconst reportCGLColumn = [\r\n  {\r\n    datakey: \"DateIssued\",\r\n    header: \"Date Issued\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"PolicyNo\",\r\n    header: \"Policy No\",\r\n    width: \"250px\",\r\n    excelColumnWidth: 30,\r\n  },\r\n  {\r\n    datakey: \"AssuredName\",\r\n    header: \"Assured Name\",\r\n    width: \"350px\",\r\n    excelColumnWidth: 50,\r\n  },\r\n  {\r\n    datakey: \"EffictiveDate\",\r\n    header: \"Effictive Date\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"InsuredValue\",\r\n    header: \"Insured Value\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalPremium\",\r\n    header: \"Premium\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"DocStamp\",\r\n    header: \"Doc Stamp\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Vat\",\r\n    header: \"EVat\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"LGovTax\",\r\n    header: \"LGT\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalDue\",\r\n    header: \"Total\",\r\n    type: \"number\",\r\n    total: true,\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n];\r\nconst summaryCGLColumn = summaryColumn({\r\n  column: reportCGLColumn,\r\n  removeList: [\"InsuredValue\", \"TotalPremium\", \"DocStamp\", \"Vat\", \"LGovTax\"],\r\n});\r\nconst reportCOMColumn = [\r\n  {\r\n    datakey: \"DateIssued\",\r\n    header: \"Date Issued\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"PolicyNo\",\r\n    header: \"Policy No\",\r\n    width: \"250px\",\r\n    excelColumnWidth: 30,\r\n  },\r\n  {\r\n    datakey: \"AssuredName\",\r\n    header: \"Assured Name\",\r\n    width: \"350px\",\r\n    excelColumnWidth: 50,\r\n  },\r\n  {\r\n    datakey: \"EffictiveDate\",\r\n    header: \"Effictive Date\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"InsuredValue\",\r\n    header: \"Sum Insured\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"PLimit\",\r\n    header: \"LD Premium\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Sec4A\",\r\n    header: \"ETPL BI Premium\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Sec4B\",\r\n    header: \"PD Premium\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Sec4C\",\r\n    header: \"PAR Premium\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalPremium\",\r\n    header: \"Sub Total\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"DocStamp\",\r\n    header: \"Doc Stamp\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Vat\",\r\n    header: \"Evat\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"LGovTax\",\r\n    header: \"LGT\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalDue\",\r\n    header: \"Total\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n];\r\nconst summaryCOMColumn = summaryColumn({\r\n  column: reportCOMColumn,\r\n  removeList: [\r\n    \"PLimit\",\r\n    \"Sec4A\",\r\n    \"Sec4B\",\r\n    \"Sec4C\",\r\n    \"TotalPremium\",\r\n    \"DocStamp\",\r\n    \"Vat\",\r\n    \"LGovTax\",\r\n  ],\r\n  cb: (column) => {\r\n    const addColum = [\r\n      {\r\n        datakey: \"BodyType\",\r\n        header: \"Body Type\",\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        datakey: \"PlateNo\",\r\n        header: \"Plate No\",\r\n        width: \"150px\",\r\n      },\r\n      {\r\n        datakey: \"ChassisNo\",\r\n        header: \"Chassis No\",\r\n        width: \"180px\",\r\n      },\r\n      {\r\n        datakey: \"MotorNo\",\r\n        header: \"Engine No\",\r\n        width: \"150px\",\r\n      },\r\n    ];\r\n    column.splice(5, 0, ...addColum);\r\n    column.push({\r\n      datakey: \"Mortgagee\",\r\n      header: \"Mortgagee\",\r\n      width: \"340px\",\r\n      excelColumnWidth: 50,\r\n    });\r\n    return column;\r\n  },\r\n});\r\nconst reportFIREColumn = [\r\n  {\r\n    datakey: \"DateIssued\",\r\n    header: \"Date Issued\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"PolicyNo\",\r\n    header: \"Policy No\",\r\n    width: \"250px\",\r\n    excelColumnWidth: 30,\r\n  },\r\n  {\r\n    datakey: \"AssuredName\",\r\n    header: \"Assured Name\",\r\n    width: \"350px\",\r\n    excelColumnWidth: 50,\r\n  },\r\n  {\r\n    datakey: \"EffictiveDate\",\r\n    header: \"Effictive Date\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"InsuredValue\",\r\n    header: \"Insured Value\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalPremium\",\r\n    header: \"Premium\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"DocStamp\",\r\n    header: \"Doc Stamp\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"FireTax\",\r\n    header: \"F.S. TAX\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Vat\",\r\n    header: \"EVAT\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"LGovTax\",\r\n    header: \"LGT\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalDue\",\r\n    header: \"Total\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n];\r\nconst summaryFIREColumn = summaryColumn({\r\n  column: reportFIREColumn,\r\n  removeList: [\r\n    \"InsuredValue\",\r\n    \"TotalPremium\",\r\n    \"DocStamp\",\r\n    \"FireTax\",\r\n    \"Vat\",\r\n    \"LGovTax\",\r\n  ],\r\n});\r\nconst reportMARColumn = [\r\n  {\r\n    datakey: \"DateIssued\",\r\n    header: \"Date Issued\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"PolicyNo\",\r\n    header: \"Policy No\",\r\n    width: \"250px\",\r\n    excelColumnWidth: 30,\r\n  },\r\n  {\r\n    datakey: \"AssuredName\",\r\n    header: \"Assured Name\",\r\n    width: \"350px\",\r\n    excelColumnWidth: 50,\r\n  },\r\n  {\r\n    datakey: \"EffictiveDate\",\r\n    header: \"Effictive Date\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"InsuredValue\",\r\n    header: \"Insured Value\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalPremium\",\r\n    header: \"Premium\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"DocStamp\",\r\n    header: \"Doc Stamp\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Vat\",\r\n    header: \"EVat\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"LGovTax\",\r\n    header: \"LGT\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalDue\",\r\n    header: \"Total\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n];\r\nconst summaryMARColumn = summaryColumn({\r\n  column: reportMARColumn,\r\n  removeList: [\"InsuredValue\", \"TotalPremium\", \"DocStamp\", \"Vat\", \"LGovTax\"],\r\n});\r\nconst reportMSPRColumn = [\r\n  {\r\n    datakey: \"DateIssued\",\r\n    header: \"Date Issued\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"PolicyNo\",\r\n    header: \"Policy No\",\r\n    width: \"250px\",\r\n    excelColumnWidth: 30,\r\n  },\r\n  {\r\n    datakey: \"AssuredName\",\r\n    header: \"Assured Name\",\r\n    width: \"350px\",\r\n    excelColumnWidth: 50,\r\n  },\r\n  {\r\n    datakey: \"EffictiveDate\",\r\n    header: \"Effictive Date\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"InsuredValue\",\r\n    header: \"Insured Value\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalPremium\",\r\n    header: \"Premium\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"DocStamp\",\r\n    header: \"Doc Stamp\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Vat\",\r\n    header: \"EVat\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"LGovTax\",\r\n    header: \"LGT\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalDue\",\r\n    header: \"Total\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n];\r\nconst summaryMSPRColumn = summaryColumn({\r\n  column: reportMSPRColumn,\r\n  removeList: [\"InsuredValue\", \"TotalPremium\", \"DocStamp\", \"Vat\", \"LGovTax\"],\r\n});\r\nconst reportPAColumn = [\r\n  {\r\n    datakey: \"DateIssued\",\r\n    header: \"Date Issued\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"PolicyNo\",\r\n    header: \"Policy No\",\r\n    width: \"250px\",\r\n    excelColumnWidth: 30,\r\n  },\r\n  {\r\n    datakey: \"AssuredName\",\r\n    header: \"Assured Name\",\r\n    width: \"350px\",\r\n    excelColumnWidth: 50,\r\n  },\r\n  {\r\n    datakey: \"EffictiveDate\",\r\n    header: \"Effictive Date\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"InsuredValue\",\r\n    header: \"Insured Value\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalPremium\",\r\n    header: \"Premium\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"DocStamp\",\r\n    header: \"Doc Stamp\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Vat\",\r\n    header: \"EVat\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"LGovTax\",\r\n    header: \"LGT\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalDue\",\r\n    header: \"Total\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n];\r\nconst summaryPAColumn = summaryColumn({\r\n  column: reportPAColumn,\r\n  removeList: [\"InsuredValue\", \"TotalPremium\", \"DocStamp\", \"Vat\", \"LGovTax\"],\r\n});\r\nconst reportTPLColumn = [\r\n  {\r\n    datakey: \"DateIssued\",\r\n    header: \"Date Issued\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"PolicyNo\",\r\n    header: \"Policy No\",\r\n    width: \"250px\",\r\n    excelColumnWidth: 30,\r\n  },\r\n  {\r\n    datakey: \"AssuredName\",\r\n    header: \"Assured Name\",\r\n    width: \"350px\",\r\n    excelColumnWidth: 50,\r\n  },\r\n  {\r\n    datakey: \"EffictiveDate\",\r\n    header: \"Effictive Date\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"InsuredValue\",\r\n    header: \"Tpl Coverage\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"90px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalPremium\",\r\n    header: \"Premium\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"DocStamp\",\r\n    header: \"Doc Stamp\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Vat\",\r\n    header: \"EVat\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"LGovTax\",\r\n    header: \"LGT\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"Misc\",\r\n    header: \"Strad Com\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n  {\r\n    datakey: \"TotalDue\",\r\n    header: \"Total\",\r\n    total: true,\r\n    type: \"number\",\r\n    width: \"80px\",\r\n    excelColumnWidth: 20,\r\n  },\r\n];\r\nconst summaryTPLColumn = summaryColumn({\r\n  column: reportTPLColumn,\r\n  removeList: [\r\n    \"InsuredValue\",\r\n    \"TotalPremium\",\r\n    \"DocStamp\",\r\n    \"Vat\",\r\n    \"LGovTax\",\r\n    \"Misc\",\r\n  ],\r\n  cb(column) {\r\n    const addColum = [\r\n      {\r\n        datakey: \"BodyType\",\r\n        header: \"Body Type\",\r\n        width: \"140px\",\r\n\r\n        excelColumnWidth: 30,\r\n      },\r\n      {\r\n        datakey: \"PlateNo\",\r\n        header: \"Plate No\",\r\n        width: \"140px\",\r\n        excelColumnWidth: 20,\r\n      },\r\n      {\r\n        datakey: \"ChassisNo\",\r\n        header: \"Chassis No\",\r\n        width: \"140px\",\r\n        excelColumnWidth: 30,\r\n      },\r\n    ];\r\n    column.splice(5, 0, ...addColum);\r\n    column.push({\r\n      datakey: \"MotorNo\",\r\n      header: \"Engine No\",\r\n      width: \"140px\",\r\n      excelColumnWidth: 50,\r\n    });\r\n    return column;\r\n  },\r\n});\r\nconst columnRender = (policy: string, format: string) => {\r\n  let selectedColumn: Array<any> = [];\r\n  let columnFormat: any = {};\r\n  switch (policy) {\r\n    case \"Bonds\":\r\n      columnFormat = {\r\n        Full: reportBondsColumn,\r\n        Summary: summaryBondsColumn,\r\n      };\r\n      selectedColumn = columnFormat[format];\r\n      break;\r\n    case \"COM\":\r\n      columnFormat = {\r\n        Full: reportCOMColumn,\r\n        Summary: summaryCOMColumn,\r\n      };\r\n      selectedColumn = columnFormat[format];\r\n      break;\r\n    case \"TPL\":\r\n      columnFormat = {\r\n        Full: reportTPLColumn,\r\n        Summary: summaryTPLColumn,\r\n      };\r\n      selectedColumn = columnFormat[format];\r\n      break;\r\n    case \"FIRE\":\r\n      columnFormat = {\r\n        Full: reportFIREColumn,\r\n        Summary: summaryFIREColumn,\r\n      };\r\n      selectedColumn = columnFormat[format];\r\n      break;\r\n    case \"CGL\":\r\n      columnFormat = {\r\n        Full: reportCGLColumn,\r\n        Summary: summaryCGLColumn,\r\n      };\r\n      selectedColumn = columnFormat[format];\r\n      break;\r\n    case \"PA\":\r\n      columnFormat = {\r\n        Full: reportPAColumn,\r\n        Summary: summaryPAColumn,\r\n      };\r\n      selectedColumn = columnFormat[format];\r\n      break;\r\n    case \"MAR\":\r\n      columnFormat = {\r\n        Full: reportMARColumn,\r\n        Summary: summaryMARColumn,\r\n      };\r\n      selectedColumn = columnFormat[format];\r\n      break;\r\n    case \"MSPR\":\r\n      columnFormat = {\r\n        Full: reportMSPRColumn,\r\n        Summary: summaryMSPRColumn,\r\n      };\r\n      selectedColumn = columnFormat[format];\r\n      break;\r\n  }\r\n\r\n  return selectedColumn;\r\n};\r\nexport {\r\n  reportBondsColumn,\r\n  summaryBondsColumn,\r\n  reportCGLColumn,\r\n  summaryCGLColumn,\r\n  reportCOMColumn,\r\n  summaryCOMColumn,\r\n  reportFIREColumn,\r\n  summaryFIREColumn,\r\n  reportMARColumn,\r\n  summaryMARColumn,\r\n  reportMSPRColumn,\r\n  summaryMSPRColumn,\r\n  reportPAColumn,\r\n  summaryPAColumn,\r\n  reportTPLColumn,\r\n  summaryTPLColumn,\r\n  columnRender,\r\n};\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport PrintPreview, {\r\n  columnSelection,\r\n  copiedByHeaderOnDoubleClick,\r\n  formatNumberWithCommas,\r\n} from \"../../../../components/PrintPreview/PrintPreview\";\r\nimport { columnRender } from \"../Production/productionreport.column\";\r\nimport { AuthContext } from \"../../../../components/AuthContext\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport {\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  InputLabel,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../../../../components/DatePicker\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { useQuery } from \"react-query\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { flushSync } from \"react-dom\";\r\nimport { arrangeData } from \"../../../../components/PrintPreview/dataCore\";\r\n\r\nconst center = [\"DateIssued\", \"PolicyNo\", \"AssuredName\", \"EffictiveDate\"];\r\nfunction ShowDateSelection({ user, state, dispatch, handleInputChange }: any) {\r\n  const dateFromRef = useRef<HTMLElement>(null);\r\n  const dateToRef = useRef<HTMLElement>(null);\r\n  return (\r\n    <React.Fragment>\r\n      {state.report === \"Custom\" && (\r\n        <React.Fragment>\r\n          <CustomDatePicker\r\n            fullWidth={true}\r\n            label=\"Date From\"\r\n            onChange={(value: any) => {\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"dateFrom\",\r\n                value: value,\r\n              });\r\n              state.dateFrom = value;\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"title\",\r\n                value: setupTitle(state, user?.department as string),\r\n              });\r\n            }}\r\n            value={new Date(state.dateFrom)}\r\n            onKeyDown={(e: any) => {\r\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\r\n                const timeout = setTimeout(() => {\r\n                  dateFromRef.current?.querySelector(\"button\")?.click();\r\n                  clearTimeout(timeout);\r\n                }, 150);\r\n              }\r\n            }}\r\n            datePickerRef={dateFromRef}\r\n            textField={{\r\n              InputLabelProps: {\r\n                style: {\r\n                  fontSize: \"14px\",\r\n                },\r\n              },\r\n              InputProps: {\r\n                style: { height: \"27px\", fontSize: \"14px\" },\r\n              },\r\n            }}\r\n          />\r\n          <CustomDatePicker\r\n            fullWidth={true}\r\n            label=\"Date To\"\r\n            onChange={(value: any) => {\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"dateTo\",\r\n                value: value,\r\n              });\r\n\r\n              state.dateTo = value;\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"title\",\r\n                value: setupTitle(state, user?.department as string),\r\n              });\r\n            }}\r\n            value={new Date(state.dateTo)}\r\n            onKeyDown={(e: any) => {\r\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\r\n                const timeout = setTimeout(() => {\r\n                  dateToRef.current?.querySelector(\"button\")?.click();\r\n                  clearTimeout(timeout);\r\n                }, 150);\r\n              }\r\n            }}\r\n            datePickerRef={dateToRef}\r\n            textField={{\r\n              InputLabelProps: {\r\n                style: {\r\n                  fontSize: \"14px\",\r\n                },\r\n              },\r\n              InputProps: {\r\n                style: { height: \"27px\", fontSize: \"14px\" },\r\n              },\r\n            }}\r\n          />\r\n        </React.Fragment>\r\n      )}\r\n\r\n      {state.report === \"Daily\" && (\r\n        <CustomDatePicker\r\n          fullWidth={true}\r\n          label=\"Date\"\r\n          onChange={(value: any) => {\r\n            dispatch({\r\n              type: \"UPDATE_FIELD\",\r\n              field: \"dateFrom\",\r\n              value: value,\r\n            });\r\n            state.dateFrom = value;\r\n            dispatch({\r\n              type: \"UPDATE_FIELD\",\r\n              field: \"title\",\r\n              value: setupTitle(state, user?.department as string),\r\n            });\r\n          }}\r\n          value={new Date(state.dateFrom)}\r\n          onKeyDown={(e: any) => {\r\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\r\n              const timeout = setTimeout(() => {\r\n                dateFromRef.current?.querySelector(\"button\")?.click();\r\n                clearTimeout(timeout);\r\n              }, 150);\r\n            }\r\n          }}\r\n          datePickerRef={dateFromRef}\r\n          textField={{\r\n            InputLabelProps: {\r\n              style: {\r\n                fontSize: \"14px\",\r\n              },\r\n            },\r\n            InputProps: {\r\n              style: { height: \"27px\", fontSize: \"14px\" },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        {state.report === \"Monthly\" && (\r\n          <DatePicker\r\n            sx={{\r\n              width: \"100%\",\r\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n            }}\r\n            slotProps={{\r\n              textField: {\r\n                size: \"small\",\r\n                name: \"\",\r\n                InputLabelProps: {\r\n                  style: {\r\n                    fontSize: \"14px\",\r\n                  },\r\n                },\r\n                InputProps: {\r\n                  style: { height: \"27px\", fontSize: \"14px\" },\r\n                },\r\n              },\r\n            }}\r\n            label={\"Date\"}\r\n            views={[\"month\", \"year\"]}\r\n            value={state.dateFrom}\r\n            onChange={(value) => {\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"dateFrom\",\r\n                value: value,\r\n              });\r\n\r\n              state.dateFrom = value;\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"title\",\r\n                value: setupTitle(state, user?.department as string),\r\n              });\r\n            }}\r\n          />\r\n        )}\r\n        {state.report === \"Yearly\" && (\r\n          <React.Fragment>\r\n            <DatePicker\r\n              sx={{\r\n                width: \"100%\",\r\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n              }}\r\n              slotProps={{\r\n                textField: {\r\n                  size: \"small\",\r\n                  name: \"\",\r\n                  inputRef: dateFromRef,\r\n                  InputLabelProps: {\r\n                    style: {\r\n                      fontSize: \"14px\",\r\n                    },\r\n                  },\r\n                  InputProps: {\r\n                    style: { height: \"27px\", fontSize: \"14px\" },\r\n                  },\r\n                },\r\n              }}\r\n              label={\"Date\"}\r\n              views={[\"year\"]}\r\n              value={state.dateFrom}\r\n              onChange={(value) => {\r\n                dispatch({\r\n                  type: \"UPDATE_FIELD\",\r\n                  field: \"dateFrom\",\r\n                  value: value,\r\n                });\r\n                state.dateFrom = value;\r\n                dispatch({\r\n                  type: \"UPDATE_FIELD\",\r\n                  field: \"title\",\r\n                  value: setupTitle(state, user?.department as string),\r\n                });\r\n              }}\r\n            />\r\n            <TextField\r\n              type=\"number\"\r\n              label=\"Year Count\"\r\n              name=\"yearCount\"\r\n              value={state.yearCount}\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                state.yearCount = e.target.value;\r\n                dispatch({\r\n                  type: \"UPDATE_FIELD\",\r\n                  field: \"title\",\r\n                  value: setupTitle(state, user?.department as string),\r\n                });\r\n              }}\r\n              InputProps={{\r\n                style: { height: \"27px\", fontSize: \"12px\" },\r\n              }}\r\n              sx={{\r\n                flex: 1,\r\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\r\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n              }}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </LocalizationProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\nfunction Setting({ state, dispatch }: { state: any; dispatch: any }) {\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  const { data: dataAccount, isLoading: isLoadingAccount } = useQuery({\r\n    queryKey: \"account\",\r\n    queryFn: async () =>\r\n      await myAxios.get(\"/reports/reports/report-fields/accounts\", {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }),\r\n  });\r\n  const { data: dataPolicy, isLoading: isLoadingPolicy } = useQuery({\r\n    queryKey: \"policy\",\r\n    queryFn: async () =>\r\n      await myAxios.get(\"/reports/reports/report-fields/policy\", {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }),\r\n  });\r\n  const handleInputChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"policy\" && value !== \"TPL\") {\r\n      dispatch({ type: \"UPDATE_FIELD\", field: \"mortgagee\", value: \"\" });\r\n    }\r\n    if (name === \"mortgagee\" && value !== \"\") {\r\n      dispatch({ type: \"UPDATE_FIELD\", field: \"account\", value: \"\" });\r\n    }\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"10px\",\r\n      }}\r\n    >\r\n      <TextField\r\n        label=\"Title\"\r\n        fullWidth\r\n        name=\"title\"\r\n        value={state.title}\r\n        onChange={handleInputChange}\r\n        rows={6}\r\n        multiline\r\n        InputProps={{\r\n          style: { height: \"140px\", fontSize: \"12px\" },\r\n        }}\r\n        sx={{\r\n          flex: 1,\r\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\r\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n        }}\r\n      />\r\n      <Box\r\n        sx={(theme) => ({\r\n          height: \"100%\",\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(2,1fr)\",\r\n          gap: \"10px\",\r\n          margin: \"10px 0\",\r\n          [theme.breakpoints.down(\"sm\")]: {\r\n            gridTemplateColumns: \"repeat(1,1fr)\",\r\n          },\r\n        })}\r\n      >\r\n        <FormControl\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          sx={{\r\n            \".MuiFormLabel-root\": {\r\n              fontSize: \"14px\",\r\n              background: \"white\",\r\n              zIndex: 99,\r\n              padding: \"0 3px\",\r\n            },\r\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n          }}\r\n        >\r\n          <InputLabel id=\"paper-format-1\">Format</InputLabel>\r\n          <Select\r\n            labelId=\"paper-format-1\"\r\n            value={state.format1}\r\n            label=\"Format\"\r\n            name=\"format1\"\r\n            onChange={(e) => {\r\n              handleInputChange(e);\r\n              state.format1 = e.target.value;\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"title\",\r\n                value: setupTitle(state, user?.department as string),\r\n              });\r\n            }}\r\n            sx={{\r\n              height: \"27px\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            <MenuItem value={\"Full\"}>Full</MenuItem>\r\n            <MenuItem value={\"Summary\"}>Summary</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        {state.mortgagee === \"\" && (\r\n          <FormControl\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            sx={{\r\n              \".MuiFormLabel-root\": {\r\n                fontSize: \"14px\",\r\n                background: \"white\",\r\n                zIndex: 99,\r\n                padding: \"0 3px\",\r\n              },\r\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n            }}\r\n          >\r\n            <InputLabel id=\"paper-format-2\">Format</InputLabel>\r\n\r\n            <Select\r\n              id=\"paper-format-2\"\r\n              label=\"Format\"\r\n              value={state.format2}\r\n              name=\"format2\"\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                state.format2 = e.target.value;\r\n                dispatch({\r\n                  type: \"UPDATE_FIELD\",\r\n                  field: \"title\",\r\n                  value: setupTitle(state, user?.department as string),\r\n                });\r\n              }}\r\n              sx={{\r\n                height: \"27px\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"All\"}>All</MenuItem>\r\n              <MenuItem value={\"Financed\"}>Financed</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n        <FormControl\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          sx={{\r\n            \".MuiFormLabel-root\": {\r\n              fontSize: \"14px\",\r\n              background: \"white\",\r\n              zIndex: 99,\r\n              padding: \"0 3px\",\r\n            },\r\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n          }}\r\n        >\r\n          <InputLabel id=\"report\">Report</InputLabel>\r\n          <Select\r\n            id=\"report\"\r\n            label=\"Report\"\r\n            value={state.report}\r\n            name=\"report\"\r\n            onChange={(e) => {\r\n              handleInputChange(e);\r\n              state.report = e.target.value;\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"title\",\r\n                value: setupTitle(state, user?.department as string),\r\n              });\r\n            }}\r\n            sx={{\r\n              height: \"27px\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            <MenuItem value={\"Daily\"}>Daily</MenuItem>\r\n            <MenuItem value={\"Monthly\"}>Monthly</MenuItem>\r\n            {state.mortgagee === \"\" && (\r\n              <MenuItem value={\"Yearly\"}>Yearly</MenuItem>\r\n            )}\r\n            <MenuItem value={\"Custom\"}>Custom</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        {isLoadingPolicy ? (\r\n          <LoadingButton loading={isLoadingPolicy} />\r\n        ) : (\r\n          <FormControl\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            sx={{\r\n              \".MuiFormLabel-root\": {\r\n                fontSize: \"14px\",\r\n                background: \"white\",\r\n                zIndex: 99,\r\n                padding: \"0 3px\",\r\n              },\r\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n            }}\r\n          >\r\n            <InputLabel id=\"policy\">Type</InputLabel>\r\n            <Select\r\n              id=\"policy\"\r\n              label=\"Type\"\r\n              value={state.policy}\r\n              name=\"policy\"\r\n              onChange={(e) => {\r\n                handleInputChange(e);\r\n                state.policy = e.target.value;\r\n                dispatch({\r\n                  type: \"UPDATE_FIELD\",\r\n                  field: \"title\",\r\n                  value: setupTitle(state, user?.department as string),\r\n                });\r\n              }}\r\n              sx={{\r\n                height: \"27px\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            >\r\n              {dataPolicy?.data.policy.map((item: any, idx: number) => {\r\n                return (\r\n                  <MenuItem key={idx} value={item.Bonds}>\r\n                    {item.Bonds}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n        <ShowDateSelection\r\n          dispatch={dispatch}\r\n          state={state}\r\n          handleInputChange={handleInputChange}\r\n          user={user}\r\n        />\r\n        {state.mortgagee === \"\" && (\r\n          <FormControl\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            sx={{\r\n              \".MuiFormLabel-root\": {\r\n                fontSize: \"14px\",\r\n                background: \"white\",\r\n                zIndex: 99,\r\n                padding: \"0 3px\",\r\n              },\r\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n            }}\r\n          >\r\n            <InputLabel id=\"policyType\">Policy Type</InputLabel>\r\n            <Select\r\n              id=\"policyType\"\r\n              label=\"Policy Type\"\r\n              value={state.policyType}\r\n              name=\"policyType\"\r\n              onChange={handleInputChange}\r\n              sx={{\r\n                height: \"27px\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Regular\"}>Regular</MenuItem>\r\n              <MenuItem value={\"Temporary\"}>Temporary</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n        {state.policy === \"TPL\" && (\r\n          <FormControl\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            sx={{\r\n              \".MuiFormLabel-root\": {\r\n                fontSize: \"14px\",\r\n                background: \"white\",\r\n                zIndex: 99,\r\n                padding: \"0 3px\",\r\n              },\r\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n            }}\r\n          >\r\n            <InputLabel id=\"Mortgagee\">Mortgagee</InputLabel>\r\n            <Select\r\n              id=\"Mortgagee\"\r\n              label=\"Mortgagee\"\r\n              value={state.mortgagee}\r\n              name=\"mortgagee\"\r\n              onChange={handleInputChange}\r\n              sx={{\r\n                height: \"27px\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"\"}></MenuItem>\r\n              <MenuItem value={\"AMIFIN\"}>AMIFIN</MenuItem>\r\n              <MenuItem value={\"N I L - HN\"}>N I L - HN</MenuItem>\r\n              <MenuItem value={\"N I L - ASTRA\"}>N I L - ASTRA</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          height: \"100%\",\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          padding: \"20px 10px\",\r\n          border: \"1px solid #94a3b8\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={(theme) => ({\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            columnGap: \"10px\",\r\n            alignItems: \"center\",\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n              flexDirection: \"column\",\r\n              rowGap: \"10px\",\r\n            },\r\n          })}\r\n        >\r\n          <FormControl\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            sx={{\r\n              \".MuiFormLabel-root\": {\r\n                fontSize: \"14px\",\r\n                background: \"white\",\r\n                zIndex: 99,\r\n                padding: \"0 3px\",\r\n              },\r\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n            }}\r\n          >\r\n            <InputLabel id=\"sort\">Sort</InputLabel>\r\n            <Select\r\n              labelId=\"sort\"\r\n              value={state.sort}\r\n              label=\"Sort\"\r\n              name=\"sort\"\r\n              onChange={handleInputChange}\r\n              sx={{\r\n                height: \"27px\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Date Issued\"}>Date Issued</MenuItem>\r\n              <MenuItem value={\"Policy No#\"}>Policy No#</MenuItem>\r\n              <MenuItem value={\"Date From\"}>Date From</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          {isLoadingAccount ? (\r\n            <LoadingButton loading={isLoadingAccount} />\r\n          ) : (\r\n            <FormControl\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{\r\n                \".MuiFormLabel-root\": {\r\n                  fontSize: \"14px\",\r\n                  background: \"white\",\r\n                  zIndex: 99,\r\n                  padding: \"0 3px\",\r\n                },\r\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n              }}\r\n            >\r\n              <InputLabel id=\"account\">Account</InputLabel>\r\n              <Select\r\n                id=\"account\"\r\n                label=\"Account\"\r\n                value={state.account}\r\n                name=\"account\"\r\n                onChange={(e) => {\r\n                  handleInputChange(e);\r\n                  state.account = e.target.value;\r\n                  dispatch({\r\n                    type: \"UPDATE_FIELD\",\r\n                    field: \"title\",\r\n                    value: setupTitle(state, user?.department as string),\r\n                  });\r\n                }}\r\n                sx={{\r\n                  height: \"27px\",\r\n                  fontSize: \"14px\",\r\n                }}\r\n              >\r\n                {[\r\n                  { Account: state.mortgagee === \"\" ? \"All\" : \"\" },\r\n                  ...dataAccount?.data.accounts,\r\n                ].map((item: any, idx: number) => {\r\n                  return (\r\n                    <MenuItem key={idx} value={item.Account}>\r\n                      {item.Account}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\nconst initialState = {\r\n  format1: \"Summary\",\r\n  format2: \"All\",\r\n  dateFrom: new Date(),\r\n  dateTo: new Date(),\r\n  policyType: \"Regular\",\r\n  policy: \"COM\",\r\n  sort: \"Policy No#\",\r\n  account: \"All\",\r\n  report: \"Monthly\",\r\n  yearCount: \"1\",\r\n  mortgagee: \"\",\r\n  title: \"\",\r\n};\r\nexport default function ProductionReport() {\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  initialState.title = setupTitle(initialState, user?.department as string);\r\n  const [column, setColumn] = useState(\r\n    columnRender(initialState.policy, initialState.format1)\r\n  );\r\n  async function fetchTable(setData: any, setLoading: any, state: any) {\r\n    const updateColumn = columnRender(state.policy, state.format1);\r\n    flushSync(() => {\r\n      setColumn(updateColumn);\r\n    });\r\n    const response = await myAxios.post(\r\n      \"/reports/reports/get-production-report\",\r\n      state,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    const jsonData = await response.data;\r\n    console.log(jsonData);\r\n    arrangeData({\r\n      data: jsonData.report,\r\n      column: updateColumn,\r\n      beforeArrangeData: (itm) => {\r\n        const columnNumber = updateColumn\r\n          .filter((itm) => itm.type === \"number\")\r\n          .map((d) => d.datakey);\r\n        columnNumber.forEach((datakey) => {\r\n          if (itm.hasOwnProperty(datakey)) {\r\n            itm[datakey] = formatNumberWithCommas(\r\n              parseFloat(itm[datakey].toString().replace(/,/g, \"\"))\r\n            );\r\n          }\r\n        });\r\n        return itm;\r\n      },\r\n      adjustMaxHeight: 320,\r\n    }).then((newData) => {\r\n      setData(newData);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PrintPreview\r\n      column={column}\r\n      initialState={initialState}\r\n      Setting={(state, dispatch) => (\r\n        <Setting state={state} dispatch={dispatch} />\r\n      )}\r\n      onReportSubmit={fetchTable}\r\n    \r\n      drawTable={(data, state) => {\r\n        return data.map((pages: any, pageNumber: number) => {\r\n          return (\r\n            <div className=\"page out-page\" key={pageNumber}>\r\n              <div className=\"header\" style={{ height: \"50px\" }}></div>\r\n              <div className=\"content\">\r\n                <table>\r\n                  <thead>\r\n                    {state.title.split(\"\\n\").map((d: any, i: number) => {\r\n                      return (\r\n                        <tr key={i}>\r\n                          <td\r\n                            style={{\r\n                              fontSize: \"14px\",\r\n                              fontWeight: \"bold\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                            colSpan={column.length}\r\n                          >\r\n                            {d}\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                    <tr style={{ height: \"40px\" }}></tr>\r\n                    <tr style={{ borderBottom: \"1px solid black\" }}>\r\n                      {column.map((itm, idx) => {\r\n                        return (\r\n                          <th\r\n                            onDoubleClick={(e) =>\r\n                              copiedByHeaderOnDoubleClick(e, itm.datakey, data)\r\n                            }\r\n                            key={idx}\r\n                            style={{\r\n                              width: itm.width,\r\n                              fontSize: \"12px\",\r\n                              fontWeight: \"bold\",\r\n                              textAlign: !center.includes(itm.datakey)\r\n                                ? \"center\"\r\n                                : \"left\",\r\n                            }}\r\n                          >\r\n                            {itm.header}\r\n                          </th>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {pages.map((r: any, idx: number) => {\r\n                      return (\r\n                        <tr key={idx}>\r\n                          {column.map((c, i) => {\r\n                            return (\r\n                              <td\r\n                                onClick={columnSelection}\r\n                                className={`page-${pageNumber} row-${idx}_col-${i}`}\r\n                                style={{\r\n                                  width: c.width,\r\n                                  fontSize:\r\n                                    c.datakey === \"AssuredName\"\r\n                                      ? \"10px\"\r\n                                      : \"11px\",\r\n                                  fontWeight: \"500\",\r\n                                  textAlign:\r\n                                    c.type === \"number\" ? \"right\" : \"left\",\r\n                                }}\r\n                                key={i}\r\n                              >\r\n                                {r[c.datakey]}\r\n                              </td>\r\n                            );\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    {pageNumber === data.length - 1 && (\r\n                      <tr>\r\n                        <td\r\n                          style={{ fontWeight: \"bold\", fontSize: \"11px\" }}\r\n                          colSpan={3}\r\n                        >\r\n                          No. of Records:{\" \"}\r\n                          {(data.flat().length - 1).toLocaleString(\"en-US\")}\r\n                        </td>\r\n                        {column.map((itm: any, idx: number) => {\r\n                          if (!itm.total) {\r\n                            if (idx < 3) {\r\n                              return (\r\n                                <React.Fragment key={idx}></React.Fragment>\r\n                              );\r\n                            }\r\n                            return <td key={idx}></td>;\r\n                          }\r\n                          let flattenedArray = data.flat();\r\n                          const total = flattenedArray.reduce(\r\n                            (d: any, itms: any) => {\r\n                              return (\r\n                                d +\r\n                                parseFloat(itms[itm.datakey]?.replace(/,/g, \"\"))\r\n                              );\r\n                            },\r\n                            0\r\n                          );\r\n\r\n                          return (\r\n                            <td\r\n                              key={idx}\r\n                              style={{\r\n                                borderTop: \"1px solid black\",\r\n                                fontWeight: \"bold\",\r\n                                textAlign: \"right\",\r\n                                fontSize: \"11px\",\r\n                              }}\r\n                            >\r\n                              {isNaN(total)\r\n                                ? \"0\"\r\n                                : formatNumberWithCommas(total)}\r\n                            </td>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    )}\r\n                    <tr style={{ height: \"50px\" }}></tr>\r\n                    <tr>\r\n                      <td\r\n                        colSpan={column.length}\r\n                        style={{\r\n                          fontSize: \"11px\",\r\n                          fontWeight: \"bolder\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Prepared: ________________________________\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        Checked: ________________________________\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Approved:\r\n                        ________________________________\r\n                      </td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n              <div\r\n                className=\"footer\"\r\n                style={{\r\n                  height: \"50px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\r\n                  01/01/2024\r\n                </p>\r\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\r\n                  Page {pageNumber + 1} of {data.length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n      }}\r\n    />\r\n  );\r\n}\r\nfunction setupTitle(state: any, department: string) {\r\n  return `${\r\n    department === \"UMIS\"\r\n      ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\r\n      : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\r\n  } ${state.format2 !== \"All\" ? \"(Financed)\" : \"\"}\\n${\r\n    state.report === \"Custom\" ? \"\" : `${state.report} `\r\n  }Production Report(${state.policy} - ${state.account}) ${\r\n    state.format1 === \"Summary\" ? \"Summary\" : \"\"\r\n  }\\nCut off Date: ${DateToStringFormat(state)}`;\r\n}\r\nfunction DateToStringFormat(state: any) {\r\n  let dateString = \"\";\r\n  if (state.report === \"Daily\") {\r\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n  } else if (state.report === \"Monthly\") {\r\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else if (state.report === \"Yearly\") {\r\n    const year = new Date(state.dateFrom).getFullYear();\r\n    const { startYearFormatted, endYearFormatted } = formatYearRange(\r\n      year,\r\n      parseInt(state.yearCount)\r\n    );\r\n    dateString = `${startYearFormatted}-${endYearFormatted}`;\r\n  } else {\r\n    const dateFrom = state.dateFrom.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n    const dateTo = state.dateTo.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n    dateString = `${dateFrom} to ${dateTo}`;\r\n  }\r\n\r\n  return dateString;\r\n}\r\nfunction formatYearRange(startYear: number, yearCount: number) {\r\n  const startDate = new Date(startYear, 0, 1); // Month is 0-based, so 0 is January\r\n  const endDate = new Date(startYear + yearCount, 11, 31); // Last day of the last year\r\n\r\n  const startYearFormatted = startDate.getFullYear();\r\n  const endYearFormatted = endDate.getFullYear();\r\n\r\n  if (endYearFormatted < startYearFormatted) {\r\n    return {\r\n      startYearFormatted: endYearFormatted,\r\n      endYearFormatted: startYearFormatted,\r\n    };\r\n  } else {\r\n    return {\r\n      startYearFormatted,\r\n      endYearFormatted,\r\n    };\r\n  }\r\n}\r\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\n// TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('span', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n  const {\n      children,\n      disabled = false,\n      id: idProp,\n      loading = false,\n      loadingIndicator: loadingIndicatorProp,\n      loadingPosition = 'center',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is shown and the button becomes disabled.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","ref","slotProps","size","sx","fontSize","top","defaultArrangeDataCore","data","column","beforeArrangeData","adjustMaxHeight","_ref$fontSize","_ref$summaryHeight","summaryHeight","newData","trHeight","temp","maxHeight","document","querySelector","getBoundingClientRect","height","forEach","itm","idx","contentElment","tempTable","createElement","tempRow","insertRow","summaryReport","col","tempCell","insertCell","style","visibility","width","content","columnWidth","textContent","appendChild","getTableCellHeight","datakey","removeChild","push","length","arrangeData","_x","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","cb","_ref2$fontSize","wrap","_context","prev","next","undefined","abrupt","stop","apply","arguments","summaryColumn","props","newColumn","filter","itms","removeList","includes","reportBondsColumn","header","excelColumnWidth","type","total","summaryBondsColumn","reportCGLColumn","summaryCGLColumn","reportCOMColumn","summaryCOMColumn","splice","concat","reportFIREColumn","summaryFIREColumn","reportMARColumn","summaryMARColumn","reportMSPRColumn","summaryMSPRColumn","reportPAColumn","summaryPAColumn","reportTPLColumn","summaryTPLColumn","columnRender","policy","format","selectedColumn","Full","Summary","center","ShowDateSelection","user","state","dispatch","handleInputChange","dateFromRef","useRef","dateToRef","_jsxs","React","report","field","dateFrom","setupTitle","department","Date","e","code","timeout","setTimeout","_dateFromRef$current","_dateFromRef$current$","current","click","clearTimeout","InputLabelProps","InputProps","dateTo","_dateToRef$current","_dateToRef$current$qu","_dateFromRef$current2","_dateFromRef$current3","views","TextField","yearCount","target","flex","Setting","_queryFn","_queryFn2","_useContext","useContext","AuthContext","myAxios","_useQuery","useQuery","queryKey","queryFn","get","headers","Authorization","accessToken","sent","dataAccount","isLoadingAccount","isLoading","_useQuery2","_callee2","_context2","dataPolicy","isLoadingPolicy","_e$target","padding","title","rows","multiline","Box","theme","_defineProperty","display","gridTemplateColumns","gap","margin","breakpoints","down","FormControl","variant","background","zIndex","InputLabel","id","Select","labelId","format1","MenuItem","mortgagee","format2","LoadingButton","loading","map","item","Bonds","policyType","alignItems","border","flexDirection","columnGap","rowGap","sort","account","Account","_toConsumableArray","accounts","initialState","ProductionReport","_fetchTable","_useContext2","_useState","useState","_useState2","_slicedToArray","setColumn","PrintPreview","_Setting","onReportSubmit","_x2","_x3","_callee3","setData","setLoading","updateColumn","response","jsonData","_context3","flushSync","post","console","log","columnNumber","d","hasOwnProperty","formatNumberWithCommas","parseFloat","toString","replace","then","drawTable","pages","pageNumber","className","split","i","fontWeight","textAlign","colSpan","borderBottom","onDoubleClick","copiedByHeaderOnDoubleClick","r","c","onClick","columnSelection","flat","toLocaleString","reduce","_itms$itm$datakey","borderTop","isNaN","justifyContent","dateString","toLocaleDateString","year","month","day","_formatYearRange","startYear","startDate","endDate","startYearFormatted","getFullYear","endYearFormatted","formatYearRange","parseInt","DateToStringFormat","getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","LoadingButtonRoot","styled","Button","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","root","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","color","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","_ref7","position","left","transform","vars","palette","action","disabled","right","inProps","useThemeProps","_props$disabled","idProp","_props$loading","loadingIndicatorProp","_props$loadingPositio","_props$variant","other","_objectWithoutPropertiesLoose","useId","CircularProgress","classes","slots","startIcon","endIcon","composedClasses","composeClasses","useUtilityClasses","loadingButtonLoadingIndicator","source","excluded","key","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}