{"version":3,"file":"static/js/2272.b4a5aff0.chunk.js","mappings":"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","sources":["components/Table.tsx","feautures/Admin/Reference/Bank.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useState, useRef, useReducer } from \"react\";\nimport { Box, TextField, Button } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { pink } from \"@mui/material/colors\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"../../../lib/wait\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { LoadingButton } from \"@mui/lab\";\nimport Table from \"../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\n\nconst initialState = {\n  Bank_Code: \"\",\n  Bank: \"\",\n  Inactive: false,\n  search: \"\",\n  mode: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const bankColumn = [\n  { field: \"Bank_Code\", headerName: \"Bank Code\", flex: 1 },\n  { field: \"Bank\", headerName: \"Bank\", flex: 1 },\n  { field: \"Inactive\", headerName: \"Active\", flex: 1 },\n];\nconst queryKey = \"bank\";\nexport default function Bank() {\n  const refParent = useRef<HTMLDivElement>(null);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const table = useRef<any>(null);\n  const queryClient = useQueryClient();\n  const { isLoading, refetch: refetchBankSearch } = useQuery({\n    queryKey,\n    queryFn: async () =>\n      await myAxios.get(`/reference/get-banks?bankSearch=${state.search}`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.bank);\n    },\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-bank\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-bank\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-bank\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function handleOnSave(e: any) {\n    e.preventDefault();\n    if (state.Bank_Code === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Code is Required\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Bank === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank is Required\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Bank_Code.length >= 10) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invalid bank code is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Bank.length >= 50) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invalid bank is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n  function resetModule() {\n    setNewStateValue(dispatch, initialState);\n    table.current?.removeSelection();\n    wait(500).then(() => {\n      refetchBankSearch();\n    });\n  }\n\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      queryClient.invalidateQueries(queryKey);\n      resetModule();\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      {/* <Box>\n        <Typography variant=\"h5\" sx={{ marginBottom: \"10px\" }}>\n          Bank Details\n        </Typography>\n      </Box> */}\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            marginBottom: \"15px\",\n          },\n        })}\n      >\n        <div\n          style={{\n            marginTop: \"10px\",\n            marginBottom: \"12px\",\n            width: \"100%\",\n          }}\n        >\n          <TextField\n            label=\"Search\"\n            fullWidth\n            size=\"small\"\n            type=\"text\"\n            value={state.search}\n            name=\"search\"\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return refetchBankSearch();\n              }\n            }}\n            sx={{\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {state.mode === \"\" && (\n              <Button\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                id=\"entry-header-save-button\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                onClick={() => {\n                  handleInputChange({ target: { value: \"add\", name: \"mode\" } });\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              onClick={handleOnSave}\n              startIcon={<SaveIcon />}\n              disabled={state.mode === \"\"}\n              loading={loadingAdd || loadingEdit}\n            >\n              Save\n            </LoadingButton>\n            {state.mode !== \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetModule();\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n\n            <LoadingButton\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              loading={loadingDelete}\n              startIcon={<DeleteIcon />}\n              disabled={state.mode !== \"edit\"}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      Bank_Code: state.Bank_Code,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </LoadingButton>\n          </div>\n        </div>\n      </Box>\n      <form\n        onSubmit={handleOnSave}\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            handleOnSave(e);\n            return;\n          }\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"15px\",\n            flexDirection: \"row\",\n            [theme.breakpoints.down(\"md\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          <TextField\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"100%\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Bank Code\"\n            name=\"Bank_Code\"\n            value={state.Bank_Code}\n            onChange={handleInputChange}\n            disabled={state.mode === \"edit\" || state.mode === \"\"}\n          />\n          <TextField\n            required\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"100%\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Bank Name\"\n            name=\"Bank\"\n            value={state.Bank}\n            onChange={handleInputChange}\n            disabled={state.mode === \"\"}\n          />\n          <FormControlLabel\n            sx={{\n              \".MuiTypography-root\": {\n                fontSize: \"14px\",\n              },\n              minWidth: \"200px\",\n            }}\n            disabled={state.mode === \"\"}\n            control={\n              <Checkbox\n                size=\"small\"\n                name=\"Inactive\"\n                checked={state.Inactive}\n                onChange={(e) => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"Inactive\",\n                    value: e.target.checked,\n                  });\n                }}\n              />\n            }\n            label=\"Mark As Inactive\"\n          />\n        </Box>\n      </form>\n      <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={isLoading || loadingDelete || loadingEdit || loadingAdd}\n            columns={bankColumn}\n            rows={rows}\n            table_id={\"Bank_Code\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.Bank_Code === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                setNewStateValue(dispatch, initialState);\n                handleInputChange({ target: { value: \"\", name: \"mode\" } });\n                return;\n              }\n              const newState = {\n                Bank_Code: rowSelected.Bank_Code,\n                Bank: rowSelected.Bank,\n                Inactive: rowSelected.Inactive === \"NO\",\n                mode: \"edit\",\n              };\n              setNewStateValue(dispatch, newState);\n              if (code === \"Delete\" || code === \"Backspace\") {\n                wait(350).then(() => {\n                  codeCondfirmationAlert({\n                    isUpdate: false,\n                    cb: (userCodeConfirmation) => {\n                      mutateDelete({\n                        Bank_Code: rowSelected.Bank_Code,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                });\n                return;\n              }\n            }}\n          />\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["TableContext","createContext","rows","rowSelectionModel","footerChildren","_jsx","footerPaginationPosition","showFooterSelectedCount","Table","forwardRef","_ref","ref","isLoading","columns","table_id","isSingleSelection","isRowFreeze","dataSelection","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","isRowSelectable","getCellClassName","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","onSelectionChange","selection","data","code","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","value","children","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","sx","_objectSpread","color","fill","background","padding","fontSize","display","fontWeight","height","width","onRowSelectionModelChange","length","selectionSet","Set","s","has","onCellKeyDown","__","key","preventDefault","rowNode","id","concat","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","className","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","variant","count","onChange","event","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","_jsxs","Box","columnGap","justifyContent","px","alignItems","flexDirection","flex","Bank_Code","Bank","Inactive","search","mode","reducer","state","action","type","_defineProperty","field","bankColumn","headerName","queryKey","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_refParent$current","refParent","useRef","_useReducer","useReducer","_useReducer2","dispatch","AuthContext","myAxios","user","setRows","table","queryClient","useQueryClient","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","bank","refetchBankSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","handleInputChange","e","_e$target","target","name","handleOnSave","Swal","position","icon","title","showConfirmButton","timer","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","resetModule","_table$current","setNewStateValue","current","wait","then","success","invalidateQueries","message","style","theme","breakpoints","down","marginBottom","marginTop","TextField","label","fullWidth","size","InputProps","onKeyDown","top","Button","startIcon","AddIcon","onClick","LoadingButton","SaveIcon","disabled","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","backgroundColor","pink","DeleteIcon","onSubmit","rowGap","required","FormControlLabel","minWidth","control","Checkbox","checked","getBoundingClientRect","overflowX","rowSelected","undefined","newState","obj","Object","entries","forEach","_ref3","_ref4","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","A100","A200","A400","A700"],"sourceRoot":""}