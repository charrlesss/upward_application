{"version":3,"file":"static/js/2738.968d8200.chunk.js","mappings":"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","sources":["components/NumberFormat.tsx","components/Table.tsx","feautures/Admin/Reference/Rates.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useState, useRef, useReducer } from \"react\";\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  LinearProgress,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { pink } from \"@mui/material/colors\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"../../../lib/wait\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { NumericFormatCustom } from \"../../../components/NumberFormat\";\nimport { LoadingButton } from \"@mui/lab\";\nimport Table from \"../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\n\nconst initialState = {\n  Line: \"Vehicle\",\n  Account: \"\",\n  Type: \"\",\n  Rate: \"\",\n  mode: \"\",\n  search: \"\",\n  ID: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const sublineColumn = [\n  { field: \"ID\", headerName: \"ID\", width: 100, hide: true },\n  { field: \"Account\", headerName: \"Account\", flex: 1 },\n  { field: \"Type\", headerName: \"Type\", flex: 1 },\n  { field: \"Rate\", headerName: \"Rate\", flex: 1 },\n  { field: \"createdAt\", headerName: \"Created At\", width: 150 },\n];\nconst queryKey = \"subline-account\";\nexport default function Rates() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n\n  const queryClient = useQueryClient();\n  const table = useRef<any>(null);\n\n  const {\n    data,\n    isLoading,\n    refetch: refetchRatesSearch,\n  } = useQuery({\n    queryKey,\n    queryFn: async () =>\n      await myAxios.get(`/reference/get-rates?ratesSearch=${state.search}`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (res) => {\n      setRows((res as any)?.data?.rate?.rate);\n    },\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-rates\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-rates\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-rates\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      queryClient.invalidateQueries(queryKey);\n      resetModule();\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n  function resetModule() {\n    setNewStateValue(dispatch, initialState);\n    table.current?.removeSelection();\n    wait(500).then(() => {\n      refetchRatesSearch();\n    });\n  }\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"Line\") {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"Type\", value: \"\" });\n    }\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave(e: any) {\n    e.preventDefault();\n\n    if (state.Line === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Line is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Account is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Type === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Type is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Rate === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Rate is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    if (state.Line.length >= 250) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Line is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account.length >= 250) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Account is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Type.length >= 250) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Type is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Rate.length >= 250) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Rate is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    if (state.mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n\n  const typeSelection = (data as any)?.data?.rate?.type[state.Line];\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      {/* <Box>\n        <Typography variant=\"h5\" sx={{ marginBottom: \"10px\" }}>\n          Rates Details\n        </Typography>\n      </Box> */}\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            flex: 1,\n            marginBottom: \"15px\",\n          },\n        })}\n      >\n        <div\n          style={{\n            marginTop: \"10px\",\n            marginBottom: \"12px\",\n            width: \"100%\",\n          }}\n        >\n          <TextField\n            label=\"Search\"\n            fullWidth\n            size=\"small\"\n            type=\"text\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"500px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return refetchRatesSearch();\n              }\n            }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {state.mode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                id=\"entry-header-save-button\"\n                onClick={() => {\n                  handleInputChange({ target: { value: \"add\", name: \"mode\" } });\n                }}\n              >\n                New\n              </Button>\n            )}\n\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={state.mode === \"\"}\n              startIcon={<SaveIcon />}\n              loading={loadingAdd || loadingEdit}\n            >\n              Save\n            </LoadingButton>\n            {state.mode !== \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetModule();\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n\n            <Button\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              disabled={state.mode !== \"edit\"}\n              startIcon={<DeleteIcon />}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: true,\n                  cb: (userCodeConfirmation) => {\n                    handleInputChange({\n                      target: { value: \"delete\", name: \"mode\" },\n                    });\n                    mutateDelete({\n                      ID: state.ID,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </Button>\n          </div>\n        </div>\n      </Box>\n      <form\n        onSubmit={handleOnSave}\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            handleOnSave(e);\n            return;\n          }\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            columnGap: \"15px\",\n            flexDirection: \"row\",\n            [theme.breakpoints.down(\"md\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          {isLoading ? (\n            <LinearProgress />\n          ) : (\n            <React.Fragment>\n              <FormControl\n                size=\"small\"\n                fullWidth\n                disabled={state.mode === \"\" || state.mode === \"edit\"}\n                required\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"Line\">Line</InputLabel>\n                <Select\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  labelId=\"Line\"\n                  value={state.Line}\n                  label=\"Line\"\n                  name=\"Line\"\n                  onChange={handleInputChange}\n                >\n                  {(data as any).data?.rate?.line.map(\n                    (items: any, idx: number) => {\n                      return (\n                        <MenuItem key={idx} value={items.Line}>\n                          {items.Line}\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n              <FormControl\n                size=\"small\"\n                fullWidth\n                disabled={state.mode === \"\" || state.mode === \"edit\"}\n                required\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"Account\">Account</InputLabel>\n                <Select\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  labelId=\"Account\"\n                  value={state.Account}\n                  label=\"Account\"\n                  name=\"Account\"\n                  onChange={handleInputChange}\n                >\n                  {(data as any).data?.rate?.policy.map(\n                    (items: any, idx: number) => {\n                      return (\n                        <MenuItem key={idx} value={items.Account}>\n                          {items.Account}\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n              {typeSelection ? (\n                <FormControl\n                  size=\"small\"\n                  fullWidth\n                  disabled={state.mode === \"\"}\n                  required\n                  sx={{\n                    flex: 1,\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel id=\"Type\">Type</InputLabel>\n                  <Select\n                    labelId=\"Type\"\n                    value={state.Type}\n                    label=\"Type\"\n                    name=\"Type\"\n                    onChange={handleInputChange}\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    {typeSelection.map((items: any, idx: number) => {\n                      return (\n                        <MenuItem key={idx} value={items.SublineName}>\n                          {items.SublineName}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </FormControl>\n              ) : (\n                <TextField\n                  fullWidth\n                  type=\"text\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Type\"\n                  name=\"Type\"\n                  value={state.Type}\n                  onChange={handleInputChange}\n                  disabled={state.mode === \"\"}\n                  required\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n              )}\n            </React.Fragment>\n          )}\n          <TextField\n            required\n            fullWidth\n            type=\"text\"\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Rate\"\n            name=\"Rate\"\n            value={state.Rate}\n            onChange={handleInputChange}\n            disabled={state.mode === \"\"}\n            placeholder=\"0.0000\"\n            onBlur={(e) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"Rate\",\n                value: parseFloat(state.Rate).toFixed(4),\n              });\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </Box>\n      </form>\n      <div\n      ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={isLoading || loadingAdd || loadingEdit || loadingDelete}\n            columns={sublineColumn}\n            rows={rows}\n            table_id={\"ID\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.ID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                setNewStateValue(dispatch, initialState);\n                handleInputChange({ target: { value: \"\", name: \"mode\" } });\n                return;\n              }\n\n              handleInputChange({ target: { value: \"edit\", name: \"mode\" } });\n              if (code === \"Delete\" || code === \"Backspace\") {\n                codeCondfirmationAlert({\n                  isUpdate: true,\n                  cb: (userCodeConfirmation) => {\n                    handleInputChange({\n                      target: { value: \"delete\", name: \"mode\" },\n                    });\n                    mutateDelete({\n                      ID: rowSelected.ID,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n\n                return;\n              }\n              setNewStateValue(dispatch, rowSelected);\n            }}\n          />\n        </Box>\n      </div>\n    </div>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["NumericFormatCustom","React","props","ref","onChange","other","_objectWithoutProperties","_excluded","_jsx","NumericFormat","_objectSpread","getInputRef","onValueChange","values","target","name","value","allowNegative","thousandSeparator","valueIsNumericString","TableContext","createContext","rows","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","Table","forwardRef","_ref","isLoading","columns","table_id","isSingleSelection","isRowFreeze","dataSelection","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","isRowSelectable","getCellClassName","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","onSelectionChange","selection","data","code","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","children","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","sx","color","fill","background","padding","fontSize","display","fontWeight","height","width","onRowSelectionModelChange","length","selectionSet","Set","s","has","onCellKeyDown","__","key","preventDefault","rowNode","id","concat","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","className","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","variant","count","event","newPage","CustomPagination","GridPagination","ActionsComponent","_useContext","useContext","_jsxs","Box","columnGap","justifyContent","px","alignItems","flexDirection","flex","Line","Account","Type","Rate","mode","search","ID","reducer","state","action","type","_defineProperty","field","sublineColumn","headerName","queryKey","Rates","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_data2","_data2$rate","_data3","_data3$rate","_data4","_data4$rate","_refParent$current","refParent","useRef","_useReducer","useReducer","_useReducer2","dispatch","AuthContext","myAxios","user","setRows","queryClient","useQueryClient","table","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","_data","_data$rate","rate","refetchRatesSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","success","invalidateQueries","resetModule","Swal","position","icon","title","message","showConfirmButton","timer","_table$current","setNewStateValue","current","wait","then","handleInputChange","e","_e$target","handleOnSave","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","typeSelection","style","theme","breakpoints","down","marginBottom","marginTop","TextField","label","fullWidth","size","InputProps","top","onKeyDown","Button","startIcon","AddIcon","onClick","LoadingButton","disabled","SaveIcon","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","backgroundColor","pink","DeleteIcon","onSubmit","rowGap","FormControl","required","zIndex","InputLabel","Select","labelId","line","map","items","idx","MenuItem","policy","SublineName","placeholder","onBlur","parseFloat","toFixed","inputComponent","getBoundingClientRect","overflowX","rowSelected","undefined","obj","Object","entries","forEach","_ref3","_ref4","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","A100","A200","A400","A700"],"sourceRoot":""}