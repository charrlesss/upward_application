{"version":3,"file":"static/js/5905.ca421694.chunk.js","mappings":"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","sources":["components/PrintPreview/dataCore.ts","feautures/Admin/Reports/Accounting/AgingAccounts.tsx"],"sourcesContent":["export function getTableCellHeight(\r\n  tempCell: HTMLTableCellElement,\r\n  content: string,\r\n  columnWidth: string,\r\n  contentElment: Element,\r\n  tempTable: HTMLTableElement\r\n) {\r\n  tempCell.style.width = columnWidth;\r\n  tempCell.textContent = content;\r\n  contentElment.appendChild(tempTable);\r\n}\r\n\r\nexport function defaultArrangeDataCore({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  fontSize = \"11px\",\r\n  summaryHeight = 0,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  fontSize: string;\r\n  summaryHeight?: number;\r\n}) {\r\n  const newData: Array<any> = [];\r\n  let trHeight = 0;\r\n  let temp: Array<any> = [];\r\n  const contentElment = document.querySelector(\".content\") as Element;\r\n  const maxHeight =\r\n    contentElment.getBoundingClientRect().height - adjustMaxHeight;\r\n\r\n  data.forEach((itm: any, idx: number) => {\r\n    itm = beforeArrangeData(itm);\r\n    const contentElment = document.querySelector(\".content\") as Element;\r\n    const tempTable = document.createElement(\"table\");\r\n    const tempRow = tempTable.insertRow();\r\n\r\n    if (itm.summaryReport) {\r\n      if (maxHeight - trHeight <= summaryHeight + 20) {\r\n        trHeight += maxHeight - trHeight;\r\n      }\r\n    }\r\n    column.forEach((col) => {\r\n      const tempCell = tempRow.insertCell();\r\n      tempTable.style.visibility = \"hidden\";\r\n      tempTable.style.width = `100%`;\r\n      tempTable.style.fontSize = fontSize;\r\n\r\n      getTableCellHeight(\r\n        tempCell,\r\n        itm[col.datakey],\r\n        col.width,\r\n        contentElment,\r\n        tempTable\r\n      );\r\n    });\r\n    trHeight += tempRow.getBoundingClientRect().height;\r\n    contentElment.removeChild(tempTable);\r\n    temp.push(itm);\r\n    if (\r\n      trHeight >= maxHeight ||\r\n      (idx === data.length - 1 && trHeight < maxHeight)\r\n    ) {\r\n      newData.push(temp);\r\n      trHeight = 0;\r\n      temp = [];\r\n    }\r\n  });\r\n\r\n  return newData;\r\n}\r\nexport const arrangeData = async ({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  cb,\r\n  fontSize = \"11px\",\r\n  summaryHeight,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  cb?: ({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n  }: {\r\n    data: any;\r\n    column: Array<any>;\r\n    beforeArrangeData: (itm: any) => any;\r\n    adjustMaxHeight: number;\r\n  }) => any[];\r\n  fontSize?: string;\r\n  summaryHeight?: number;\r\n}) => {\r\n  if (data === undefined) return [];\r\n  if (cb) {\r\n    return cb({\r\n      data,\r\n      column,\r\n      beforeArrangeData,\r\n      adjustMaxHeight,\r\n    });\r\n  }\r\n\r\n  return defaultArrangeDataCore({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n    fontSize,\r\n    summaryHeight,\r\n  });\r\n};\r\n","import React, { useContext, Fragment } from \"react\";\nimport {\n  FormControl,\n  MenuItem,\n  Select,\n  TextField,\n  InputLabel,\n  Box,\n} from \"@mui/material\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport PrintPreview, {\n  columnSelection,\n  copiedByHeaderOnDoubleClick,\n} from \"../../../../components/PrintPreview/PrintPreview\";\nimport { arrangeData } from \"../../../../components/PrintPreview/dataCore\";\nimport { format } from \"date-fns\";\nimport ReactDOMServer from \"react-dom/server\";\n\nconst initialState = {\n  format: \"All Accounts\",\n  dateFormat: \"Monthly\",\n  sub_acct: \"All\",\n  date: new Date(),\n  policyType: \"Regular\",\n  title: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst column = [\n  {\n    datakey: \"Row_Num\",\n    header: \"NO.\",\n    width: \"40px\",\n  },\n  {\n    datakey: \"IDNo\",\n    header: \"Client ID\",\n    width: \"100px\",\n  },\n  {\n    datakey: \"Shortname\",\n    header: \"Client Name\",\n    width: \"200px\",\n  },\n  {\n    datakey: \"PolicyNo\",\n    header: \"Policy No\",\n    width: \"100px\",\n  },\n  {\n    datakey: \"UnitInssured\",\n    header: \"Unit\\nInssured\",\n    width: \"160px\",\n  },\n  {\n    datakey: \"_DateIssued\",\n    header: \"DATE\\nISSUED\",\n    width: \"80px\",\n  },\n  {\n    datakey: \"_EstimatedValue\",\n    header: \"SUM\\nINSURED\",\n    width: \"100px\",\n  },\n  {\n    datakey: \"_TotalDue\",\n    header: \"GROSS\\nPRIUM\",\n    width: \"100px\",\n  },\n  {\n    datakey: \"_TotalPaid\",\n    header: \"PAYMENT\\nMADE\",\n    width: \"100px\",\n  },\n  {\n    datakey: \"_AgentCom\",\n    header: \"COMM.\",\n    width: \"80px\",\n  },\n  {\n    datakey: \"_Discount\",\n    header: \"DISC\",\n    width: \"80px\",\n  },\n  {\n    datakey: \"_Balance\",\n    header: \"COLLECTIBLE\",\n    width: \"100px\",\n  },\n  {\n    datakey: \"due_days\",\n    header: \"DAYS\\nDUE\",\n    width: \"80px\",\n  },\n  {\n    datakey: \"Remarks\",\n    header: \"Remarks\",\n    width: \"200px\",\n  },\n];\nfunction setupTitle(state: any, department: string) {\n  return `${\n    department === \"UMIS\"\n      ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n      : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n  }\\n${state.dateFormat} Aging of Accounts\\n${DateToStringFormat(state)}`;\n}\nfunction DateToStringFormat(state: any) {\n  const formattedDate = format(new Date(state.date), \"MMMM dd, yyyy\");\n\n  return formattedDate;\n}\nfunction Setting({ state, dispatch }: { state: any; dispatch: any }) {\n  const { user } = useContext(AuthContext);\n  // const { data: dataSubAccounts, isLoading: isLoadingSubAccounts } = useQuery({\n  //   queryKey: \"sub-accounts\",\n  //   queryFn: async () =>\n  //     await myAxios.get(\"/reports/accounting/get-sub-account-acronym\", {\n  //       headers: {\n  //         Authorization: `Bearer ${user?.accessToken}`,\n  //       },\n  //     }),\n  // });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"10px\",\n      }}\n    >\n      <TextField\n        label=\"Title\"\n        fullWidth\n        name=\"title\"\n        value={state.title}\n        onChange={handleInputChange}\n        rows={6}\n        multiline\n        InputProps={{\n          style: { height: \"140px\", fontSize: \"12px\" },\n        }}\n        sx={{\n          flex: 1,\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n        }}\n      />\n      <Box\n        sx={(theme) => ({\n          height: \"100%\",\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(1,1fr)\",\n          gap: \"10px\",\n          margin: \"10px 0\",\n          [theme.breakpoints.down(\"sm\")]: {\n            gridTemplateColumns: \"repeat(1,1fr)\",\n          },\n        })}\n      >\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"date_format\">Format</InputLabel>\n          <Select\n            labelId=\"date_format\"\n            value={state.format}\n            label=\"Format\"\n            name=\"format\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={\"All Accounts\"}>All Accounts</MenuItem>\n          </Select>\n        </FormControl>\n\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"date_format\">Report</InputLabel>\n          <Select\n            labelId=\"date_format\"\n            value={state.dateFormat}\n            label=\"Report\"\n            name=\"dateFormat\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={\"Monthly\"}>Monthly</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"sub_account_id\">Sub Account</InputLabel>\n          <Select\n            labelId=\"sub_account_id\"\n            value={state.sub_acct}\n            label=\"Sub Account\"\n            name=\"sub_acct\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={\"All\"}>All</MenuItem>\n          </Select>\n        </FormControl>\n        {/* {isLoadingSubAccounts ? (\n          <LoadingButton loading={isLoadingSubAccounts} />\n        ) : (\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"sub_account_id\">Sub Account</InputLabel>\n            <Select\n              labelId=\"sub_account_id\"\n              value={state.sub_acct}\n              label=\"Sub Account\"\n              name=\"sub_acct\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={\"All\"}>All</MenuItem>\n              {dataSubAccounts?.data.sub_account.map(\n                (itm: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={itm.Acronym}>\n                      {itm.Acronym}\n                    </MenuItem>\n                  );\n                }\n              )}\n            </Select>\n          </FormControl>\n        )} */}\n        {state.dateFormat === \"Monthly\" && (\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              slotProps={{\n                textField: {\n                  size: \"small\",\n                  name: \"\",\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                },\n              }}\n              label={\"Date\"}\n              views={[\"month\", \"year\"]}\n              value={state.date}\n              onChange={(value) => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"date\",\n                  value: value,\n                });\n                state.date = value;\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"title\",\n                  value: setupTitle(state, user?.department as string),\n                });\n              }}\n            />\n          </LocalizationProvider>\n        )}\n        {/* {state.dateFormat === \"Daily\" && (\n          <CustomDatePicker\n            fullWidth={true}\n            label=\"Date From\"\n            onChange={(value: any) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"date\",\n                value: value,\n              });\n            }}\n            value={new Date(state.date)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  dateFromRef.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={dateFromRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n        )} */}\n\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"policyType\">Policy Type</InputLabel>\n          <Select\n            labelId=\"policyType\"\n            value={state.policyType}\n            label=\"Policy Type\"\n            name=\"policyType\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={\"Regular\"}>Regular</MenuItem>\n            <MenuItem value={\"Temporary\"}>Temporary</MenuItem>\n          </Select>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nexport default function AgingAccounts() {\n  const { user, myAxios } = useContext(AuthContext);\n  initialState.title = setupTitle(initialState, user?.department as string);\n\n  async function onReportSubmit(setData: any, setLoading: any, state: any) {\n    const response = await myAxios.post(\n      \"/reports/accounting/aging-accounts\",\n      state,\n      {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }\n    );\n\n    const jsonData = await response.data;\n    console.log(jsonData);\n\n    arrangeData({\n      data: jsonData.report,\n      column: column,\n      beforeArrangeData: (itm) => {\n        return itm;\n      },\n      adjustMaxHeight: 200,\n    }).then((newData) => {\n      setData(newData);\n      setLoading(false);\n    });\n  }\n\n  return (\n    <PrintPreview\n      column={column}\n      initialState={initialState}\n      Setting={(state, dispatch) => (\n        <Setting state={state} dispatch={dispatch} />\n      )}\n      onReportSubmit={onReportSubmit}\n      scaleDefaultValue={80}\n      drawTable={(data, state) => {\n        return data.map((pages: any, pageNumber: number) => {\n          return (\n            <div className=\"page out-page\" key={pageNumber}>\n              <div className=\"header\" style={{ height: \"50px\" }}></div>\n              <div className=\"content\">\n                <table>\n                  <thead>\n                    {state.title.split(\"\\n\").map((t: string, idx: number) => {\n                      return (\n                        <tr key={idx}>\n                          <th\n                            style={{\n                              fontSize: \"14px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            colSpan={column.length}\n                          >\n                            {t}\n                          </th>\n                        </tr>\n                      );\n                    })}\n                    <tr style={{ height: \"40px\" }}></tr>\n                    <tr>\n                      {column.map((itm: any, rowIdx: number) => {\n                        return (\n                          <th\n                            onDoubleClick={(e) =>\n                              copiedByHeaderOnDoubleClick(e, itm.datakey, data)\n                            }\n                            style={{\n                              width: itm.width,\n                              fontSize: \"10.5px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            key={rowIdx}\n                          >\n                            {itm.header}\n                          </th>\n                        );\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {pages.map((rowItem: any, rowIdx: number) => {\n                      if (rowItem.isTotal) {\n                        return (\n                          <React.Fragment key={rowIdx}>\n                            <tr style={{ height: \"10px\" }}></tr>\n                            <tr>\n                              {column.map((colItem: any, colIdx: number) => {\n                                return (\n                                  <td\n                                    key={colIdx}\n                                    style={{\n                                      textAlign: \"right\",\n                                      fontWeight: \"bold\",\n                                      fontSize: \"11px\",\n                                    }}\n                                  >\n                                    {rowItem[colItem.datakey]}\n                                  </td>\n                                );\n                              })}\n                            </tr>\n                          </React.Fragment>\n                        );\n                      }\n                      return (\n                        <tr key={rowIdx}>\n                          {column.map((colItem: any, colIdx: number) => {\n                            return (\n                              <td\n                                key={colIdx}\n                                onClick={columnSelection}\n                                className={`editable not-looking page-${pageNumber}  row-${rowIdx}_col-${colIdx}`}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: rowItem.total ? \"bold\" : \"500\",\n                                  width: `${colItem.width} !important`,\n                                  textAlign:\n                                    colItem.datakey === \"_EstimatedValue\" ||\n                                    colItem.datakey === \"_TotalDue\" ||\n                                    colItem.datakey === \"_TotalPaid\" ||\n                                    colItem.datakey === \"_Balance\" ||\n                                    colItem.datakey === \"_Discount\" ||\n                                    colItem.datakey === \"_AgentCom\" ||\n                                    colItem.datakey === \"due_days\"\n                                      ? \"right\"\n                                      : \"left\",\n                                  padding: rowItem.total ? \"5px\" : \"0 5px\",\n                                }}\n                              >\n                                {rowItem[colItem.datakey]}\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n              <div\n                className=\"footer\"\n                style={{\n                  height: \"50px\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  {format(new Date(), \"dd/MM/yyyy\")}\n                </p>\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  Page {pageNumber + 1} of {data.length}\n                </p>\n              </div>\n            </div>\n          );\n        });\n      }}\n      pageHeight={\"8.5in\"}\n      pageWidth={\"14in\"}\n    />\n  );\n}\n"],"names":["defaultArrangeDataCore","_ref","data","column","beforeArrangeData","adjustMaxHeight","_ref$fontSize","fontSize","_ref$summaryHeight","summaryHeight","newData","trHeight","temp","maxHeight","document","querySelector","getBoundingClientRect","height","forEach","itm","idx","contentElment","tempTable","createElement","tempRow","insertRow","summaryReport","col","tempCell","insertCell","style","visibility","width","content","columnWidth","textContent","appendChild","getTableCellHeight","datakey","removeChild","push","length","arrangeData","_x","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","cb","_ref2$fontSize","wrap","_context","prev","next","undefined","abrupt","stop","apply","arguments","initialState","format","dateFormat","sub_acct","date","Date","policyType","title","reducer","state","action","type","_objectSpread","_defineProperty","field","value","header","setupTitle","department","concat","formattedDate","DateToStringFormat","Setting","dispatch","user","useContext","AuthContext","handleInputChange","e","_e$target","target","name","_jsxs","padding","children","_jsx","TextField","label","fullWidth","onChange","rows","multiline","InputProps","sx","flex","top","Box","theme","display","gridTemplateColumns","gap","margin","breakpoints","down","FormControl","variant","size","background","zIndex","InputLabel","id","Select","labelId","MenuItem","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","slotProps","textField","InputLabelProps","views","AgingAccounts","_onReportSubmit","_useContext2","myAxios","PrintPreview","_Setting","onReportSubmit","_x2","_x3","setData","setLoading","response","jsonData","post","headers","Authorization","accessToken","sent","console","log","report","then","scaleDefaultValue","drawTable","map","pages","pageNumber","className","split","t","fontWeight","textAlign","colSpan","rowIdx","onDoubleClick","copiedByHeaderOnDoubleClick","rowItem","isTotal","React","colItem","colIdx","onClick","columnSelection","total","justifyContent","pageHeight","pageWidth"],"sourceRoot":""}