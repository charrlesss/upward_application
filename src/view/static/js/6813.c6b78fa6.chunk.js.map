{"version":3,"file":"static/js/6813.c6b78fa6.chunk.js","mappings":"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","sources":["feautures/Admin/Dashboard.tsx"],"sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { myAxios } from \"../../lib/axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../components/AuthContext\";\nimport \"../../style/dashboard.css\";\n\nexport default function Dashboard() {\n  const { user } = useContext(AuthContext);\n  const { data: renewalData, isLoading: isLoadingRenewal } = useQuery({\n    queryKey: \"renewal-by-month\",\n    queryFn: async () =>\n      await myAxios.get(\"/get-renewal-this-month\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const { data: claimsData, isLoading: isLoadingClaims } = useQuery({\n    queryKey: \"claims-notice\",\n    queryFn: async () =>\n      await myAxios.get(\"/get-claims-notice\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  return (\n    <div id=\"main\">\n      <button\n        onClick={() => {\n          myAxios.post(\"/get-user-details\", {\n            department: user?.department,\n            userAccess: user?.userAccess,\n            is_admin: user?.is_master_admin,\n          }).then((res)=>{\n            console.log(res)\n            window.location.href = \"myreport://run\";\n          })\n        }}\n      >\n        Run Report\n      </button>\n\n      {(user?.userAccess === \"PRODUCTION\" ||\n        user?.userAccess === \"ACCOUNTING\" ||\n        user?.userAccess === \"PRODUCTION_ACCOUNTING\" ||\n        user?.userAccess === \"ADMIN\") && (\n        <div className=\"section-content\">\n          <h1 className=\"first\">RENEWAL</h1>\n          <div id=\"content\">\n            {isLoadingRenewal ? (\n              <div>Loading...</div>\n            ) : (\n              <table id=\"table\">\n                <tbody>\n                  {renewalData?.data.renewal?.length <= 0 && (\n                    <tr className=\"header first\">\n                      <td>Name</td>\n                      <td>POLICY NO</td>\n                      <td>SUM INSURED</td>\n                      <td>DATE TO</td>\n                      <td>CHASSIS</td>\n                      <td>UNIT</td>\n                    </tr>\n                  )}\n                  {renewalData?.data.renewal?.map((itm: any, idx: number) => {\n                    return (\n                      <React.Fragment key={idx}>\n                        {itm.isHeader ? (\n                          <>\n                            <tr className=\"heading first\">\n                              <td colSpan={6}>{itm.header}</td>\n                            </tr>\n                            <tr className=\"header first\">\n                              <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n                                Name\n                              </td>\n                              <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n                                POLICY NO\n                              </td>\n                              <td>SUM INSURED</td>\n                              <td>DATE TO</td>\n                              {itm.isVPolicy === \"1\" && (\n                                <>\n                                  <td>CHASSIS</td>\n                                  <td>UNIT</td>\n                                </>\n                              )}\n                            </tr>\n                          </>\n                        ) : (\n                          <tr>\n                            <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n                              {itm.AssuredName}\n                            </td>\n                            <td colSpan={itm.isVPolicy === \"1\" ? 1 : 2}>\n                              {itm.PolicyNo}\n                            </td>\n                            <td>{itm.InsuredValue}</td>\n                            <td>{itm.DateExpired}</td>\n                            {itm.isVPolicy === \"1\" && (\n                              <>\n                                <td>{itm.ChassisNo}</td>\n                                <td>{itm.unit}</td>\n                              </>\n                            )}\n                          </tr>\n                        )}\n                      </React.Fragment>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      )}\n      {(user?.userAccess === \"CLAIMS\" || user?.userAccess === \"ADMIN\") && (\n        <div className=\"section-content\">\n          <h1 className=\"second\">CLAIMS</h1>\n          <div id=\"content\">\n            {isLoadingClaims ? (\n              <div>Loading...</div>\n            ) : (\n              <table id=\"table\">\n                <tbody>\n                  <tr className=\"header second\">\n                    <td>Claims ID.</td>\n                    <td>Name</td>\n                    <td>Policy No.</td>\n                    <td>Date Accident</td>\n                    <td>Date Reported</td>\n                    <td>Claim Type</td>\n                    <td>Status</td>\n                  </tr>\n                  {claimsData?.data.claims?.map((itm: any, idx: number) => {\n                    return (\n                      <tr key={idx}>\n                        <td>{itm.claims_id}</td>\n                        <td>{itm.AssuredName}</td>\n                        <td>{itm.PolicyNo}</td>\n                        <td>{itm.dateAccident}</td>\n                        <td>{itm.dateReported}</td>\n                        <td>{itm.claim_type}</td>\n                        <td>{itm.status}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["Dashboard","_queryFn","_queryFn2","_renewalData$data$ren","_renewalData$data$ren2","_claimsData$data$clai","user","useContext","AuthContext","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","myAxios","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","renewalData","data","isLoadingRenewal","isLoading","_useQuery2","_callee2","_context2","claimsData","isLoadingClaims","_jsxs","id","children","_jsx","onClick","post","department","userAccess","is_admin","is_master_admin","then","res","console","log","window","location","href","className","renewal","length","map","itm","idx","React","isHeader","_Fragment","colSpan","header","isVPolicy","AssuredName","PolicyNo","InsuredValue","DateExpired","ChassisNo","unit","claims","claims_id","dateAccident","dateReported","claim_type","status"],"sourceRoot":""}