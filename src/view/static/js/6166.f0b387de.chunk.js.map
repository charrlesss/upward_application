{"version":3,"file":"static/js/6166.f0b387de.chunk.js","mappings":"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","sources":["feautures/Admin/Reference/Entry/IDEntry.tsx"],"sourcesContent":["import { useState, lazy, Suspense } from \"react\";\nimport { Box, Chip } from \"@mui/material\";\nimport useUrlParams from \"../../../../hooks/useUrlParams\";\nimport { User } from \"../../../../components/AuthContext\";\nimport { AxiosInstance } from \"axios\";\nimport LoaderCircular from \"../../../../components/LoaderCircular\";\n\ntype classificationType =\n  | \"Client\"\n  | \"Employee\"\n  | \"Agent\"\n  | \"Fixed Assets\"\n  | \"Supplier\"\n  | \"Others\";\n\nconst Client = lazy(() => import(\"./EntryComponents/Client\"));\nconst Employee = lazy(() => import(\"./EntryComponents/Employee\"));\nconst Agent = lazy(() => import(\"./EntryComponents/Agent\"));\nconst FixedAssets = lazy(() => import(\"./EntryComponents/FixedAssets\"));\nconst Supplier = lazy(() => import(\"./EntryComponents/Supplier\"));\nconst Others = lazy(() => import(\"./EntryComponents/Others\"));\n\nconst components = [\n  {\n    component: <Client />,\n    classification: \"Client\",\n  },\n  {\n    component: <Employee />,\n    classification: \"Employee\",\n  },\n  {\n    component: <Agent />,\n    classification: \"Agent\",\n  },\n  {\n    component: <FixedAssets />,\n    classification: \"Fixed Assets\",\n  },\n  {\n    component: <Supplier />,\n    classification: \"Supplier\",\n  },\n  {\n    component: <Others />,\n    classification: \"Others\",\n  },\n];\n\nfunction GetComponentByClassfication(classification: string) {\n  return components.filter((item) =>\n    item.classification.includes(classification)\n  )[0].component;\n}\n\nfunction LoadingEntry() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        position: \"fixed\",\n        top: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        right: \"0\",\n        background: \"rgba(210, 236, 248, 0.226)\",\n      }}\n    >\n      <div>\n        <LoaderCircular open />\n      </div>\n    </div>\n  );\n}\n\nexport default function IDEntry() {\n  const { searchParams, setSearchParams } = useUrlParams();\n  const [renderComponent, setRenderComponent] = useState<JSX.Element | null>(\n    GetComponentByClassfication(searchParams.get(\"classification\") as string)\n  );\n\n  const classification = searchParams.get(\n    \"classification\"\n  ) as classificationType;\n\n  const handleClick = (e: any) => {\n    setSearchParams((prev) => {\n      prev.set(\"selected\", \"\");\n      prev.set(\"classification\", e.target.textContent);\n      return prev;\n    });\n    setRenderComponent(GetComponentByClassfication(e.target.textContent));\n  };\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Box>\n        {/* <Typography variant=\"h5\" sx={{ marginBottom: \"10px\" }}>\n          Identification Detail\n        </Typography> */}\n        <ChipsButton\n          classification={classification}\n          ClassificationData={components}\n          handleClick={handleClick}\n          disabled={false}\n        />\n      </Box>\n      <Suspense fallback={<LoadingEntry />}>{renderComponent}</Suspense>\n    </Box>\n  );\n}\n\nexport async function RequestNewID(\n  myAxios: AxiosInstance,\n  user: User | null,\n  data: { sign: string; type: string }\n) {\n  return await myAxios.post(\"/reference/id-entry-generate-id\", data, {\n    headers: { Authorization: `Bearer ${user?.accessToken}` },\n  });\n}\n\nfunction ChipsButton({\n  handleClick,\n  ClassificationData,\n  classification,\n  disabled,\n}: {\n  handleClick: any;\n  ClassificationData: Array<{ classification: string }>;\n  classification: string;\n  disabled?: boolean;\n}) {\n  return (\n    <Box\n      sx={(theme) => ({\n        display: \"flex\",\n        columnGap: \"5px\",\n        marginBottom: \"12px\",\n        [theme.breakpoints.down(\"md\")]: {\n          flexWrap: \"wrap\",\n          width: \"100%\",\n          gap: \"5px\",\n          marginBottom: \"10px\",\n        },\n      })}\n    >\n      {ClassificationData.map((item, idx) => {\n        return (\n          <Chip\n            disabled={item.classification.includes(classification) || disabled}\n            color={\n              item.classification.includes(classification) ? \"error\" : \"default\"\n            }\n            label={item.classification}\n            key={idx}\n            variant=\"outlined\"\n            onClick={handleClick}\n          />\n        );\n      })}\n    </Box>\n  );\n}\n"],"names":["Client","lazy","Employee","Agent","FixedAssets","Supplier","Others","components","component","_jsx","classification","GetComponentByClassfication","filter","item","includes","LoadingEntry","style","display","justifyContent","alignItems","position","top","bottom","left","right","background","children","LoaderCircular","open","IDEntry","_useUrlParams","useUrlParams","searchParams","setSearchParams","_useState","useState","get","_useState2","_slicedToArray","renderComponent","setRenderComponent","_jsxs","Box","sx","width","height","flex","flexDirection","ChipsButton","ClassificationData","handleClick","e","prev","set","target","textContent","disabled","Suspense","fallback","RequestNewID","_x","_x2","_x3","_RequestNewID","_asyncToGenerator","_regeneratorRuntime","mark","_callee","myAxios","user","data","wrap","_context","next","post","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","_ref","theme","_defineProperty","columnGap","marginBottom","breakpoints","down","flexWrap","gap","map","idx","Chip","color","label","variant","onClick"],"sourceRoot":""}