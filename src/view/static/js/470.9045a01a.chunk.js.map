{"version":3,"file":"static/js/470.9045a01a.chunk.js","mappings":"gTAGe,SAASA,EAAgBC,GAW/B,IAVPC,EAAKD,EAALC,MACAC,EAAIF,EAAJE,KACAC,EAAQH,EAARG,SACAC,EAAKJ,EAALI,MACAC,EAASL,EAATK,UACAC,EAAQN,EAARM,SACAC,EAAaP,EAAbO,cACAC,EAASR,EAATQ,UACAC,EAAST,EAATS,UACGC,GAAIC,EAAAA,EAAAA,GAAAX,EAAAY,GAEP,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,UAChDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAUC,EAAAA,EAAAA,GAAA,CACTf,MAAOA,EACPD,SAAUA,EACViB,IAAKb,EACLc,UAAW,CACTZ,WAASU,EAAAA,EAAAA,GAAA,CACPG,KAAM,QACNrB,MAAAA,EACAC,KAAAA,EACAG,UAAAA,EACAC,SAAUA,EACVE,UAAAA,GAEGC,IAGPc,GAAI,CACFC,SAAU,QACV,qBAAsB,CAAEC,SAAU,QAClC,wCAAyC,CACvCC,IAAK,UAGLhB,KAIZ,C,8MCTMiB,EAAQ,CACZC,SAAU,WACVF,IAAK,MACLG,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,QAAS,mBACTC,UAAW,GACXC,EAAG,EACHC,OAAQ,QAGK,SAASC,EAAcpC,GAmBZ,IAlBxBqC,EAAMrC,EAANqC,OACAC,EAAStC,EAATsC,UAEAC,GADQvC,EAARwC,SACOxC,EAAPuC,SACAE,EAAiBzC,EAAjByC,kBAEAC,GADO1C,EAAP2C,QACI3C,EAAJ0C,MACAE,EAAE5C,EAAF4C,GACAC,EAAY7C,EAAZ6C,aACAC,EAAS9C,EAAT8C,UACAC,EAAgB/C,EAAhB+C,iBACAC,EAAchD,EAAdgD,eAAcC,EAAAjD,EACdkD,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EACVE,EAASnD,EAATmD,UACaC,GAAApD,EAAbqD,cAAarD,EACbsD,kBAAAA,OAAgB,IAAAF,EAAG,WAAO,EAACA,EAC3BG,EAAevD,EAAfuD,gBACAC,EAAgBxD,EAAhBwD,iBAEMC,EAASC,IAEf,OACE7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CACJC,KAAMd,EACNe,QAAShB,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyB5B,UAE1C6C,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACxC,GAAII,EAAMV,SAAA,EACbJ,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACpB,GAAG,oBAAoBqB,QAAQ,KAAKC,UAAU,KAAKC,GAAI,EAAElD,SAClEiC,KAEHrC,EAAAA,EAAAA,KAACuD,EAAAA,EAAS,CACR9C,KAAK,QACLrB,MAAM,SACNsB,GAAI,CAAE8C,aAAc,QACpB7D,WAAS,EACTL,SAAU6C,EACVsB,WAAY,CACVhE,SAAU6C,GAEZ9C,UAAW,SAACkE,GAC2C,IAADC,EAArC,UAAXD,EAAEE,MAA+B,gBAAXF,EAAEE,OAC1BF,EAAEG,iBACFpB,EAA0B,OAATH,QAAS,IAATA,GAAkB,QAATqB,EAATrB,EAAWwB,eAAO,IAAAH,OAAT,EAATA,EAAoBpE,QAEvCwE,EACEL,EACAd,EACS,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWwB,QAEf,KAEF9D,EAAAA,EAAAA,KAAA,OACEgE,UAAS,GAAAC,OAAKrB,EAAM,mCACpB9B,MAAO,CAAEC,SAAU,WAAYS,OAAO,GAADyC,OAAKzC,EAAS,GAAE,OAAOpB,UAE5DJ,EAAAA,EAAAA,KAACkE,EAAAA,EAAK,CACJC,mBAAmB,EACnBC,aAAa,EACb1C,QAASA,EACTD,UAAWA,EACX4C,cAAe,SAACC,EAAWC,EAAMX,GAC/BhC,EAAkB0C,EAAWC,EAC/B,EACAC,SAAUzC,EACVF,KAAMA,EACNa,gBAAiBA,EACjBC,iBAAkBA,OAItB3C,EAAAA,EAAAA,KAAA,OAAKc,MAAO,CAAEC,SAAU,WAAYF,IAAK,OAAQ4D,MAAO,QAASrE,UAC/DJ,EAAAA,EAAAA,KAAC0E,EAAAA,EAAU,CACT,aAAW,gBACXC,MAAM,YACNC,QAAS1C,EAAiB9B,UAE1BJ,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,YAMtB,CAEO,SAAShC,IAGd,MADoB,QADCiC,KAAKC,MAAsB,IAAhBD,KAAKE,SAGvC,CAyBO,SAASjB,EACdL,EACAM,EACAiB,GAEA,IAAMrC,EAASoB,EACf,GAAe,cAAXN,EAAEE,KAAsB,CAAC,IAADsB,EACpBrD,EAAOsD,SAASC,iBAAiB,IAADnB,OAAKrB,EAAM,sBACjDc,EAAEG,iBACK,QAAPqB,EAAArD,EAAK,UAAE,IAAAqD,GAAPA,EAASG,UAAUC,IAAI,kBAhC3B,SAAwBtB,EAAmBiB,GACzC,IAAMM,EAAiBJ,SAASK,cAAc,IAADvB,OACvCD,EAAS,sBAETyB,EAA2B,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBC,cAAc,SACvC,OAAVC,QAAU,IAAVA,GAAAA,EAAYC,QACZ,IAAMC,EAAQ,IAAIC,WAAW,aAAc,CACzCC,SAAS,EACTC,YAAY,EACZC,KAAMC,SAEM,OAAdT,QAAc,IAAdA,GAAAA,EAAgBU,cAAcN,GACpB,OAAVF,QAAU,IAAVA,GAAAA,EAAYS,iBAAiB,WAAW,SAACC,GACxB,YAAXA,EAAGC,MACLD,EAAGtC,iBACHoB,EAAGS,SAEU,YAAXS,EAAGC,MACS,OAAdb,QAAc,IAAdA,GAAAA,EAAgBF,UAAUgB,OAAO,kBAErC,GACF,CAYIC,CAAetC,EAAWiB,GAC1BpD,EAAK0E,SAAQ,SAACtB,EAAIuB,GAChBvB,EAAGiB,iBAAiB,WAAW,SAACC,GAC9B,GAAe,YAAXA,EAAGC,IAAmB,CAAC,IAADK,EAAAC,EACxB,GAAIF,GAAO,EACT,OAMF,OAHAL,EAAGtC,iBACM,QAAT4C,EAAA5E,EAAK2E,UAAI,IAAAC,GAATA,EAAWpB,UAAUgB,OAAO,uBACf,QAAbK,EAAA7E,EAAK2E,EAAM,UAAE,IAAAE,GAAbA,EAAerB,UAAUC,IAAI,kBAE/B,CACA,GAAe,cAAXa,EAAGC,IAAqB,CAAC,IAADO,EAAAC,EAE1B,GADAT,EAAGtC,iBACC2C,GAAO3E,EAAKgF,OAAS,EACvB,OAEO,QAATF,EAAA9E,EAAK2E,UAAI,IAAAG,GAATA,EAAWtB,UAAUgB,OAAO,kBACf,QAAbO,EAAA/E,EAAK2E,EAAM,UAAE,IAAAI,GAAbA,EAAevB,UAAUC,IAAI,iBAC/B,CACF,GACF,GACF,CACF,C,qFCzLO,SAASwB,EAAsB3H,GAclC,IAbFoF,EAAIpF,EAAJoF,KACAwC,EAAM5H,EAAN4H,OACAC,EAAiB7H,EAAjB6H,kBACAC,EAAe9H,EAAf8H,gBAAeC,EAAA/H,EACfyB,SAAAA,OAAQ,IAAAsG,EAAG,OAAMA,EAAAC,EAAAhI,EACjBiI,cAAAA,OAAa,IAAAD,EAAG,EAACA,EASXE,EAAsB,GACxBC,EAAW,EACXC,EAAmB,GAEjBC,EADgBrC,SAASK,cAAc,YAE7BiC,wBAAwBjG,OAASyF,EAwCjD,OAtCA1C,EAAKgC,SAAQ,SAACmB,EAAUlB,GACtBkB,EAAMV,EAAkBU,GACxB,IAAMC,EAAgBxC,SAASK,cAAc,YACvCoC,EAAYzC,SAAS0C,cAAc,SACnCC,EAAUF,EAAUG,YAEtBL,EAAIM,eACFR,EAAYF,GAAYF,EAAgB,KAC1CE,GAAYE,EAAYF,GAG5BP,EAAOR,SAAQ,SAAC0B,GACd,IAAMC,EAAWJ,EAAQK,aACzBP,EAAU9G,MAAMsH,WAAa,SAC7BR,EAAU9G,MAAMI,MAAK,OACrB0G,EAAU9G,MAAMF,SAAWA,EAjD1B,SACLsH,EACAG,EACAC,EACAX,EACAC,GAEAM,EAASpH,MAAMI,MAAQoH,EACvBJ,EAASK,YAAcF,EACvBV,EAAca,YAAYZ,EAC5B,CAyCMa,CACEP,EACAR,EAAIO,EAAIS,SACRT,EAAI/G,MACJyG,EACAC,EAEJ,IACAN,GAAYQ,EAAQL,wBAAwBjG,OAC5CmG,EAAcgB,YAAYf,GAC1BL,EAAKqB,KAAKlB,IAERJ,GAAYE,GACXhB,IAAQjC,EAAKsC,OAAS,GAAKS,EAAWE,KAEvCH,EAAQuB,KAAKrB,GACbD,EAAW,EACXC,EAAO,GAEX,IAEOF,CACT,CACO,IAAMwB,EAAW,SAAAC,GAAA,OAAAC,EAAAA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAC,GAAA,IAAA7E,EAAAwC,EAAAC,EAAAC,EAAAoC,EAAAC,EAAA1I,EAAAwG,EAAA,OAAA6B,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOZ,GANbnF,EAAI6E,EAAJ7E,KACAwC,EAAMqC,EAANrC,OACAC,EAAiBoC,EAAjBpC,kBACAC,EAAemC,EAAfnC,gBACAoC,EAAED,EAAFC,GAAEC,EAAAF,EACFxI,SAAAA,OAAQ,IAAA0I,EAAG,OAAMA,EACjBlC,EAAagC,EAAbhC,mBAoBauC,IAATpF,EAAkB,CAAAiF,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SAAS,IAAE,WAC7BP,EAAG,CAADG,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SACGP,EAAG,CACR9E,KAAAA,EACAwC,OAAAA,EACAC,kBAAAA,EACAC,gBAAAA,KACA,cAAAuC,EAAAI,OAAA,SAGG9C,EAAuB,CAC5BvC,KAAAA,EACAwC,OAAAA,EACAC,kBAAAA,EACAC,gBAAAA,EACArG,SAAAA,EACAwG,cAAAA,KACA,wBAAAoC,EAAAK,OAAA,GAAAV,EAAA,MACHW,MAAA,KAAAC,UAAA,C,yKCxEKC,GAAeC,EAAAA,EAAAA,eASlB,CACDpI,KAAM,GACNqI,kBAAmB,GACnBC,eAAgB,kBAAMnK,EAAAA,EAAAA,KAAA,SAAW,EACjCoK,yBAA0B,aAC1BC,yBAAyB,IAErBnG,GAAQoG,EAAAA,EAAAA,aACZ,SAAAnL,EAoBEoB,GACI,IAnBFkB,EAAStC,EAATsC,UACAC,EAAOvC,EAAPuC,QACAG,EAAI1C,EAAJ0C,KACA2C,EAAQrF,EAARqF,SACAL,EAAiBhF,EAAjBgF,kBACAC,EAAWjF,EAAXiF,YACAC,EAAalF,EAAbkF,cAAakG,EAAApL,EACbqL,sBAAAA,OAAqB,IAAAD,EAAGE,EAAqBF,EAC7C7H,EAAevD,EAAfuD,gBACAC,EAAgBxD,EAAhBwD,iBAAgB+H,EAAAvL,EAChBwL,kBAAAA,OAAiB,IAAAD,GAAOA,EAAAE,EAAAzL,EACxBgL,eAAAA,OAAc,IAAAS,EAAG,SACfV,EACArI,GAAgB,OACb7B,EAAAA,EAAAA,KAAA,SAAW,EAAA4K,EAAAC,EAAA1L,EAChBiL,yBAAAA,OAAwB,IAAAS,EAAG,aAAYA,EAAAC,EAAA3L,EACvCkL,wBAAAA,OAAuB,IAAAS,GAAOA,EAIhCC,GAAwCC,EAAAA,EAAAA,UAAc,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAgBpC,SAASrJ,EAAkB0C,EAAgBC,EAAWX,GAChDS,GACFA,EAAcC,EAAWC,EAAMX,EAEnC,EAlBAyH,EAAAA,EAAAA,qBAAoB9K,GAAK,iBAAO,CAC9B+K,gBAAiB,WACfF,EAAgB,GAClB,EACAG,gBAAiB,WACf,OAAO1J,EAAK2J,QAAO,SAACC,GAAS,OACf,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcO,SAASD,EAAKjH,GAAU,GAE1C,EACA4G,gBAAiB,SAAC7G,GAChB6G,EAAgB7G,EAClB,EACD,IAOD,IAAIoH,EAA0B,GAE9B,OACE3L,EAAAA,EAAAA,KAACgK,EAAa4B,SAAQ,CACpBrM,MAAO,CACL8K,wBAAAA,EACAD,yBAAAA,EACAF,kBAAmBiB,EACnBtJ,KAAAA,EACAsI,eAAAA,GACA/J,UAEFJ,EAAAA,EAAAA,KAAC6L,EAAAA,GAAQ,CACPC,MAAO,CACLC,eAAgBC,EAAAA,EAChBC,OAAQzB,GAEV0B,aAAc,CACZC,WAAY,CAAEC,gBAAiB,CAAEC,SAAU,MAE7CC,QAAS7K,EACT8K,SAAU,SAACC,GAAG,OAAKA,EAAIhI,EAAS,EAChC9C,QAASA,EAAQ8J,QAAO,SAACvD,GAAQ,OAAMA,EAAIwE,IAAI,IAC/C5K,KAAMA,EACN6K,wBAAwB,EACxBC,0BAA0B,EAC1BhC,kBAAmBA,EACnBT,kBAAmBiB,EACnByB,UAAW,GACXC,mBAAoB,GACpBC,gBAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KACtCpM,IAAEJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACA,UAAW,CACTqE,MAAO,WAET,WAAY,CACVA,MAAO,WAET,cAAe,CACbA,MAAO,SAET,aAAc,CACZA,MAAO,UAET,iBAAkB,CAChBA,MAAO,OAET,YAAa,CACXA,MAAO,OAET,wCAAyC,CACvCA,MAAO,QACP,sBAAuB,CACrBoI,KAAM,YAGV,oBAAqB,CACnBC,WAAY,UACZrI,MAAO,QACP,sBAAuB,CACrBoI,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZrI,MAAO,QACP,sBAAuB,CACrBoI,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZrI,MAAO,QACP,sBAAuB,CACrBoI,KAAM,UAGV,gCAAiC,CAC/BE,QAAS,iBAGR,CACD,+BAAgC,CAC9BD,WAAY,UACZrI,MAAO,QACP/D,SAAU,QAGZ,gGACE,CACEsM,QAAS/I,GAAqBC,EAAc,OAAS,QACrD2I,KAAM,SAEV,qFACE,CACEG,QAAS/I,GAAqBC,EAAc,OAAS,WAGxD,CACDxD,SAAU,GACVuM,WAAY,IACZ,+BAAgC,CAC9B3L,OAAQ,OACRN,MAAO,QAET,mCAAoC,CAClCM,OAAQ,OACRN,MAAO,UAQbkM,0BAA2B,SAAC9I,GAC1B,GAAIF,EAAa,CACf,GAAIE,EAAUuC,QAAU,EAAG,OAE3B,GADA8E,EAAcrH,EACV6G,EAAaO,SAASC,EAAYA,EAAY9E,OAAS,IACzD,OAKF,OAHAuE,EAAgB9G,QAEhB1C,EAAkB,CAAC0C,EAAUA,EAAUuC,OAAS,IAAKhF,EAAM,KAE7D,CAEA,IAAKuC,GAAeD,EAClB,GAAIgH,IAA4B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAActE,QAAS,EAAG,CAC5C,IAAMwG,EAAe,IAAIC,IAAInC,GAC7BC,EACE9G,EAAUkH,QAAO,SAAC+B,GAAM,OAAMF,EAAaG,IAAID,EAAE,IAErD,MACEnC,EAAgB9G,QAGlB8G,EAAgB9G,GAGlB1C,EAAkB,CAAC0C,EAAUA,EAAUuC,OAAS,IAAKhF,EAAM,KAC7D,EACAW,cAAe,SAACiL,EAASrH,GAEvB,GADmB,CAAC,cAAe,QAAS,SAAU,aACtCsF,SAAStF,EAAIxC,MAI7B,OADAwC,EAAIvC,iBACa,UAAbuC,EAAIxC,MAAiC,gBAAbwC,EAAIxC,KAC1BO,IAAsBC,EACjBgH,GAAgB,SAAC7G,GACtB,OAAIA,GAAQA,EAAKsC,OAAS,GAAKtC,EAAK,KAAOkJ,EAAGC,QAAQ3L,IACpDH,EAAkB,GAAIC,EAAMuE,EAAIxC,MACzB,KAEThC,EAAkB,CAAC6L,EAAGC,QAAQ3L,IAAKF,EAAMuE,EAAIxC,MACtC,CAAC6J,EAAGC,QAAQ3L,IACrB,SAEAqJ,GAAgB,SAAC7G,GACf,OACEA,IACCH,GACDG,EAAKsC,OAAS,GACdtC,EAAKmH,SAAS+B,EAAGC,QAAQ3L,KAEzBwC,EAAOA,EAAKiH,QAAO,SAACC,GAAS,OAAKA,IAASgC,EAAGC,QAAQ3L,EAAE,IACxDH,EAAkB,GAAIC,EAAMuE,EAAIxC,MACzBW,GAGPA,GACAH,GACAG,EAAKsC,OAAS,GACdtC,EAAKmH,SAAS+B,EAAGC,QAAQ3L,IAElBwC,GAET3C,EAAkB,CAAC6L,EAAGC,QAAQ3L,IAAKF,EAAMuE,EAAIxC,MACvC,GAANK,QAAA0J,EAAAA,EAAAA,GAAWpJ,GAAI,CAAEkJ,EAAGC,QAAQ3L,KAC9B,IAIa,WAAbqE,EAAIxC,MAAkC,cAAbwC,EAAIxC,MAC/BwH,EAAgB,CAACqC,EAAGC,QAAQ3L,KACrBH,EAAkB,CAAC6L,EAAGC,QAAQ3L,IAAKF,EAAMuE,EAAIxC,YAFtD,CAIF,EACAgK,uBAAqB,EACrBlL,gBAAiBA,EACjBC,iBAAkBA,KAI1B,IAIF,SAASkL,EAAUzE,GAIoD,IAHrE0E,EAAI1E,EAAJ0E,KACAC,EAAY3E,EAAZ2E,aACA/J,EAASoF,EAATpF,UAEMgK,GAASC,EAAAA,EAAAA,KACTC,GAAYC,EAAAA,EAAAA,GAAgBH,EAAQI,EAAAA,IAE1C,OACEpO,EAAAA,EAAAA,KAACqO,EAAAA,EAAa,CACZjL,QAAQ,WACRuB,MAAM,UACNX,UAAWA,EACXsK,MAAOJ,EACPJ,KAAMA,EAAO,EACbxO,SAAU,SAACqG,EAAO4I,GAChBR,EAAapI,EAAc4I,EAAU,EACvC,GAGN,CAEA,SAASC,EAAiBC,GACxB,OAAOzO,EAAAA,EAAAA,KAAC0O,EAAAA,GAAcpO,EAAAA,EAAAA,GAAA,CAACqO,iBAAkBd,GAAgBY,GAC3D,CACA,SAAShE,EACPgE,GAEA,IAAAG,GAMIC,EAAAA,EAAAA,YAAW7E,GALbE,EAAiB0E,EAAjB1E,kBACAG,EAAuBuE,EAAvBvE,wBACAD,EAAwBwE,EAAxBxE,yBACAD,EAAcyE,EAAdzE,eACAtI,EAAI+M,EAAJ/M,KAEF,OACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFxC,GAAI,CACFoO,UAAW,OACX5B,QAAS,OACThM,MAAO,OACP6N,eAAgB,gBAChBC,GAAI,EACJC,WAAY,SACZC,cAC+B,eAA7B9E,EAA4C,cAAgB,OAC9DhK,SAAA,EAEFJ,EAAAA,EAAAA,KAACwO,GAAgBlO,EAAAA,EAAAA,GAAA,GAAKmO,KACtBxL,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFxC,GAAI,CACFwM,QAAS,OACT6B,eAC+B,eAA7B3E,EACI,aACA,WACN+E,KAAM,EACNF,WAAY,UACZ7O,SAAA,CAEDiK,IACCpH,EAAAA,EAAAA,MAAA,OAAA7C,SAAA,CAAK,YAA2B,OAAjB8J,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBrD,WAEpC7G,EAAAA,EAAAA,KAAA,OAAAI,SAAM+J,EAAeD,EAAmBrI,UAIhD,CApEA,K,qYCrRMqK,EAAe,CACnBkD,OAAQ,EACRC,QAAS,GACTC,cAAe,GACfC,WAAY,SACZC,SAAU,IAAIC,KACdC,OAAQ,IAAID,KACZE,WAAW,IAAIF,MAAOG,cAAcC,WAAWC,OAAO,GACtDC,MAAO,EACPC,cAAe,MACfC,KAAM,OACNC,MAAO,MACP7N,MAAO,IAGH8N,EAAgB,CACpB,CACEzH,QAAS,UACT0H,OAAQ,SACRlP,MAAO,SAET,CACEwH,QAAS,YACT0H,OAAQ,WACRlP,MAAO,SAET,CACEwH,QAAS,UACT0H,OAAQ,SACRC,OAAO,EACPC,KAAM,SACNpP,MAAO,UAGLqP,EAAW,CACf,CACE7H,QAAS,QACT0H,OAAQ,SACRlP,MAAO,SAET,CACEwH,QAAS,MACT0H,OAAQ,WACRlP,MAAO,SAET,CACEwH,QAAS,UACT0H,OAAQ,SACRC,OAAO,EACPC,KAAM,SACNpP,MAAO,UAGLsP,EAAkB,CACtB,CACE9H,QAAS,QACT0H,OAAQ,UACRlP,MAAO,SAET,CACEwH,QAAS,MACT0H,OAAQ,YACRlP,MAAO,SAET,CACEwH,QAAS,UACT0H,OAAQ,UACRC,OAAO,EACPC,KAAM,SACNpP,MAAO,UAGX,SAASuP,EAAaV,GAEpB,MADgB,CAACI,EAAeI,EAAUC,GAC3BT,EACjB,CACA,SAASW,EAAiBvR,GAAqD,IAAlDwR,EAAKxR,EAALwR,MAAOC,EAAQzR,EAARyR,SAAUC,EAAiB1R,EAAjB0R,kBAAmBC,EAAI3R,EAAJ2R,KACzDC,GAAcC,EAAAA,EAAAA,QAAoB,MAClCC,GAAYD,EAAAA,EAAAA,QAAoB,MAEtC,OACE/N,EAAAA,EAAAA,MAACiO,EAAAA,SAAc,CAAA9Q,SAAA,CACS,WAArBuQ,EAAMpB,aACLtM,EAAAA,EAAAA,MAACiO,EAAAA,SAAc,CAAA9Q,SAAA,EACbJ,EAAAA,EAAAA,KAACd,EAAAA,EAAgB,CACfS,WAAW,EACXP,MAAM,YACNE,SAAU,SAACC,GACTqR,EAAS,CACPN,KAAM,eACNa,MAAO,WACP5R,MAAOA,IAEToR,EAAMnB,SAAWjQ,EACjBqR,EAAS,CACPN,KAAM,eACNa,MAAO,QACP5R,MAAO6R,EAAWT,EAAW,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAEnC,EACA9R,MAAO,IAAIkQ,KAAKkB,EAAMnB,UACtBhQ,UAAW,SAACkE,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM0N,EAAUC,YAAW,WAAO,IAADC,EAAAC,EACZ,QAAnBD,EAAAT,EAAYjN,eAAO,IAAA0N,GAAyB,QAAzBC,EAAnBD,EAAqBhM,cAAc,iBAAS,IAAAiM,GAA5CA,EAA8CC,QAC9CC,aAAaL,EACf,GAAG,IAEP,EACA5R,cAAeqR,EACfnR,UAAW,CACTgS,gBAAiB,CACf9Q,MAAO,CACLF,SAAU,SAGd6C,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,aAIzCZ,EAAAA,EAAAA,KAACd,EAAAA,EAAgB,CACfS,WAAW,EACXP,MAAM,UACNE,SAAU,SAACC,GACTqR,EAAS,CACPN,KAAM,eACNa,MAAO,SACP5R,MAAOA,IAEToR,EAAMjB,OAASnQ,EACfqR,EAAS,CACPN,KAAM,eACNa,MAAO,QACP5R,MAAO6R,EAAWT,EAAW,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAEnC,EACA9R,MAAO,IAAIkQ,KAAKkB,EAAMjB,QACtBlQ,UAAW,SAACkE,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM0N,EAAUC,YAAW,WAAO,IAADM,EAAAC,EACd,QAAjBD,EAAAZ,EAAUnN,eAAO,IAAA+N,GAAyB,QAAzBC,EAAjBD,EAAmBrM,cAAc,iBAAS,IAAAsM,GAA1CA,EAA4CJ,QAC5CC,aAAaL,EACf,GAAG,IAEP,EACA5R,cAAeuR,EACfrR,UAAW,CACTgS,gBAAiB,CACf9Q,MAAO,CACLF,SAAU,SAGd6C,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,eAOvB,UAArB+P,EAAMpB,aACLvP,EAAAA,EAAAA,KAACd,EAAAA,EAAgB,CACfS,WAAW,EACXP,MAAM,OACNE,SAAU,SAACC,GACTqR,EAAS,CACPN,KAAM,eACNa,MAAO,WACP5R,MAAOA,IAEToR,EAAMnB,SAAWjQ,EACjBqR,EAAS,CACPN,KAAM,eACNa,MAAO,QACP5R,MAAO6R,EAAWT,EAAW,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAEnC,EACA9R,MAAO,IAAIkQ,KAAKkB,EAAMnB,UACtBhQ,UAAW,SAACkE,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM0N,EAAUC,YAAW,WAAO,IAADQ,EAAAC,EACZ,QAAnBD,EAAAhB,EAAYjN,eAAO,IAAAiO,GAAyB,QAAzBC,EAAnBD,EAAqBvM,cAAc,iBAAS,IAAAwM,GAA5CA,EAA8CN,QAC9CC,aAAaL,EACf,GAAG,IAEP,EACA5R,cAAeqR,EACfnR,UAAW,CACTgS,gBAAiB,CACf9Q,MAAO,CACLF,SAAU,SAGd6C,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,aAK3CqC,EAAAA,EAAAA,MAAChD,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,SAAA,CAC1B,YAArBuQ,EAAMpB,aACLvP,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CACTK,GAAI,CACFQ,MAAO,OACP,wCAAyC,CAAEL,IAAK,SAElDL,UAAW,CACTZ,UAAW,CACTa,KAAM,QACNpB,KAAM,GACNuS,gBAAiB,CACf9Q,MAAO,CACLF,SAAU,SAGd6C,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,WAIzCxB,MAAO,OACP6S,MAAO,CAAC,QAAS,QACjB1S,MAAOoR,EAAMnB,SACblQ,SAAU,SAACC,GACTqR,EAAS,CACPN,KAAM,eACNa,MAAO,WACP5R,MAAOA,IAEToR,EAAMnB,SAAWjQ,EACjBqR,EAAS,CACPN,KAAM,eACNa,MAAO,QACP5R,MAAO6R,EAAWT,EAAW,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAEnC,IAGkB,WAArBV,EAAMpB,aACLtM,EAAAA,EAAAA,MAACiO,EAAAA,SAAc,CAAA9Q,SAAA,EACbJ,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CACTK,GAAI,CACFQ,MAAO,OACP,wCAAyC,CAAEL,IAAK,SAElDL,UAAW,CACTZ,UAAW,CACTa,KAAM,QACNpB,KAAM,GACNI,SAAUsR,EACVa,gBAAiB,CACf9Q,MAAO,CACLF,SAAU,SAGd6C,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,WAIzCxB,MAAO,OACP6S,MAAO,CAAC,QACR1S,MAAOoR,EAAMnB,SACblQ,SAAU,SAACC,GACTqR,EAAS,CACPN,KAAM,eACNa,MAAO,WACP5R,MAAOA,IAEToR,EAAMnB,SAAWjQ,EACjBqR,EAAS,CACPN,KAAM,eACNa,MAAO,QACP5R,MAAO6R,EAAWT,EAAW,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAEnC,KAEFrR,EAAAA,EAAAA,KAACuD,EAAAA,EAAS,CACR+M,KAAK,SACLlR,MAAM,aACNC,KAAK,YACLE,MAAOoR,EAAMhB,UACbrQ,SAAUuR,EACVpN,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCF,GAAI,CACFyO,KAAM,EACN,qBAAsB,CAAEvO,SAAU,QAClC,wCAAyC,CAAEC,IAAK,mBAQhE,CACA,SAASqR,EAAO9I,GAAsD,IAAD+I,EAAAC,EAAlDzB,EAAKvH,EAALuH,MAAOC,EAAQxH,EAARwH,SAClByB,GAA0BrB,EAAAA,EAAAA,QAAyB,MACnDsB,GAAoBtB,EAAAA,EAAAA,QAAyB,MACnDpC,GAA0BC,EAAAA,EAAAA,YAAW0D,EAAAA,GAA7BC,EAAO5D,EAAP4D,QAAS1B,EAAIlC,EAAJkC,KACjB2B,GAA6DC,EAAAA,EAAAA,UAAS,CACpE/Q,SAAU,gBACVgR,QAAQ,WAAD,OAAAR,EAAAA,IAAAnJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACD8I,EAAQI,IAAI,wCAAyC,CACzDC,QAAS,CACPC,cAAc,UAAD7O,OAAgB,OAAJ6M,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,gBAEjC,cAAAvJ,EAAAI,OAAA,SAAAJ,EAAAwJ,MAAA,wBAAAxJ,EAAAK,OAAA,GAAAV,EAAA,MAAAW,MAAA,KAAAC,UAAA,IAPQkJ,EAAYR,EAAlBlO,KAA+B2O,EAAiBT,EAA5BhR,UAS5B0R,GAAmET,EAAAA,EAAAA,UAAS,CAC1E/Q,SAAU,eACVgR,QAAQ,WAAD,OAAAP,EAAAA,IAAApJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkK,IAAA,OAAAnK,EAAAA,EAAAA,KAAAM,MAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,cAAA2J,EAAA3J,KAAA,EACD8I,EAAQI,IAAI,8CAA+C,CAC/DC,QAAS,CACPC,cAAc,UAAD7O,OAAgB,OAAJ6M,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,gBAEjC,cAAAM,EAAAzJ,OAAA,SAAAyJ,EAAAL,MAAA,wBAAAK,EAAAxJ,OAAA,GAAAuJ,EAAA,MAAAtJ,MAAA,KAAAC,UAAA,IAPQuJ,EAAeH,EAArB5O,KAAkCgP,EAAoBJ,EAA/B1R,UAS/B+R,GAKIC,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,wCACLC,aAAc,sBAEhBlS,QAAS,CACP,CAAEyP,MAAO,OAAQ0C,WAAY,OAAQ3S,MAAO,KAC5C,CAAEiQ,MAAO,OAAQ0C,WAAY,SAAU3S,MAAO,KAC9C,CACEiQ,MAAO,OACP0C,WAAY,OACZ1E,KAAM,GAER,CACEgC,MAAO,KACP0C,WAAY,KACZ1E,KAAM,EACN1C,MAAM,IAGV9K,SAAU,aACVmS,SAAU,OACVC,gBAAiB,YACjBC,WAAY,SAACC,EAAiB1P,GAC5BqM,EAAS,CACPN,KAAM,eACNa,MAAO,gBACP5R,MAAO0U,EAAgB,GAAGC,OAE5BC,GACF,EACA7R,UAAWgQ,IAnCK8B,EAAcZ,EAA9Ba,eACWC,EAAkBd,EAA7Be,UACWC,EAAuBhB,EAAlC/R,UACY0S,EAAmBX,EAA/BiB,WAkCFC,GAKIjB,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,6CACLC,aAAc,kBAEhBlS,QAAS,CACP,CAAEyP,MAAO,YAAa0C,WAAY,OAAQ3S,MAAO,KACjD,CAAEiQ,MAAO,aAAc0C,WAAY,SAAU1E,KAAM,GACnD,CACEgC,MAAO,QACP0C,WAAY,aACZ1E,KAAM,IAGVxN,SAAU,oBACVmS,SAAU,YACVC,gBAAiB,eACjBC,WAAY,SAACC,EAAiB1P,GAC5BqM,EAAS,CACPN,KAAM,eACNa,MAAO,UACP5R,MAAO0U,EAAgB,GAAGU,YAE5B/D,EAAS,CACPN,KAAM,eACNa,MAAO,gBACP5R,MAAO0U,EAAgB,GAAGW,aAE5BjE,EAAMtB,QAAU4E,EAAgB,GAAGU,UACnC/D,EAAS,CACPN,KAAM,eACNa,MAAO,QACP5R,MAAO6R,EAAWT,EAAW,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMO,cAEjCV,EAAMrB,cAAgB2E,EAAgB,GAAGW,WACzChE,EAAS,CACPN,KAAM,eACNa,MAAO,QACP5R,MAAO6R,EAAWT,EAAW,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMO,cAGjCwD,GACF,EACAvS,UAAW+P,IA/CKyC,EAAiBJ,EAAjCL,eACWU,EAAqBL,EAAhCH,UACWS,EAA0BN,EAArCjT,UACYoT,EAAsBH,EAAlCD,WA+CI5D,EAAoB,SAACnN,GACzB,IAAAuR,EAAwBvR,EAAEwR,OAAlB7V,EAAI4V,EAAJ5V,KAAME,EAAK0V,EAAL1V,MACD,WAATF,GAA+B,QAAVE,GACvBqR,EAAS,CAAEN,KAAM,eAAgBa,MAAO,YAAa5R,MAAO,KAEjD,cAATF,GAAkC,KAAVE,GAC1BqR,EAAS,CAAEN,KAAM,eAAgBa,MAAO,UAAW5R,MAAO,KAG5DqR,EAAS,CACPN,KAAM,eACNa,MAAO,QACP5R,MAAO6R,GAAU9Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EACVqQ,GAAK,IAAAwE,EAAAA,EAAAA,GAAA,GAAG9V,EAAOE,IAChB,OAAJuR,QAAI,IAAJA,OAAI,EAAJA,EAAMO,cAIVT,EAAS,CAAEN,KAAM,eAAgBa,MAAO9R,EAAME,MAAAA,GAChD,EAEA,OACE0D,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLmM,QAAS,aACT7M,SAAA,EAEFJ,EAAAA,EAAAA,KAACuD,EAAAA,EAAS,CACRnE,MAAM,QACNO,WAAS,EACTN,KAAK,QACLE,MAAOoR,EAAMtO,MACb/C,SAAUuR,EACVhP,KAAM,EACNuT,WAAS,EACT3R,WAAY,CACV3C,MAAO,CAAEU,OAAQ,QAASZ,SAAU,SAEtCF,GAAI,CACFyO,KAAM,EACN,qBAAsB,CAAEvO,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDoC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFxC,GAAI,SAAC2U,GAAK,OAAAF,EAAAA,EAAAA,GAAA,CACR3T,OAAQ,OACR0L,QAAS,OACToI,oBAAqB,gBACrBC,IAAK,OACLC,OAAQ,UACPH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BJ,oBAAqB,iBACtB,EACAlV,SAAA,EAEH6C,EAAAA,EAAAA,MAAC0S,EAAAA,EAAW,CACVhW,WAAS,EACTyD,QAAQ,WACR3C,KAAK,QACLC,GAAI,CACF,qBAAsB,CACpBE,SAAU,OACVoM,WAAY,QACZ4I,OAAQ,GACR3I,QAAS,SAEX,wCAAyC,CAAEpM,IAAK,SAChDT,SAAA,EAEFJ,EAAAA,EAAAA,KAAC6V,EAAAA,EAAU,CAAC9T,GAAG,SAAQ3B,SAAC,YACxB6C,EAAAA,EAAAA,MAAC6S,EAAAA,EAAM,CACLC,QAAQ,SACRxW,MAAOoR,EAAMvB,OACbhQ,MAAM,SACNC,KAAK,SACLC,SAAU,SAACoE,GACTmN,EAAkBnN,GAClBkN,EAAS,CACPN,KAAM,eACNa,MAAO,UACP5R,MAAO,KAETqR,EAAS,CACPN,KAAM,eACNa,MAAO,gBACP5R,MAAO,IAEX,EACAmB,GAAI,CACFc,OAAQ,OACRZ,SAAU,QACVR,SAAA,EAEFJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,EAAEa,SAAC,kBACpBJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,EAAEa,SAAC,gCAGvB4U,GACChV,EAAAA,EAAAA,KAACiW,EAAAA,EAAa,CAAC3J,QAAS0I,KAExB/R,EAAAA,EAAAA,MAAC0S,EAAAA,EAAW,CACVjV,GAAI,CACFQ,MAAO,OACP,qBAAsB,CACpBN,SAAU,OACVoM,WAAY,QACZ4I,OAAQ,GACR3I,QAAS,SAEX,wCAAyC,CAAEpM,IAAK,SAElDuC,QAAQ,WACR3C,KAAK,QACLyV,SAA2B,IAAjBvF,EAAMvB,OAAahP,SAAA,EAE7BJ,EAAAA,EAAAA,KAAC6V,EAAAA,EAAU,CAACM,QAAQ,aAAY/V,SAAC,aACjCJ,EAAAA,EAAAA,KAACoW,EAAAA,EAAa,CACZ1V,GAAI,CACFc,OAAQ,OACRZ,SAAU,QAEZvB,KAAK,UACLE,MAAOoR,EAAMtB,QACb/P,SAAUuR,EACV9O,GAAG,aACHvC,UAAW,SAACkE,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,OAAOmR,EAAsBpE,EAAMtB,QAEvC,EACAgH,cACErW,EAAAA,EAAAA,KAACsW,EAAAA,EAAc,CAACvV,SAAS,MAAKX,UAC5BJ,EAAAA,EAAAA,KAAC0E,EAAAA,EAAU,CACTwR,SAA2B,IAAjBvF,EAAMvB,OAChBxK,QAAS,WACPmQ,EAAsBpE,EAAMtB,QAC9B,EACAkH,KAAK,MACL5R,MAAM,YAAWvE,UAEjBJ,EAAAA,EAAAA,KAACwW,EAAAA,EAAgB,QAIvBpX,MAAM,gBAIZY,EAAAA,EAAAA,KAACuD,EAAAA,EAAS,CACR5D,WAAS,EACTN,KAAK,gBACLE,MAAOoR,EAAMrB,cACbhQ,SAAUuR,EACVpN,WAAY,CACVgT,UAAU,EACV3V,MAAO,CAAEU,OAAQ,SAEnBd,GAAI,CACFgW,WAAY,aACZ,qBAAsB,CAAE9V,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDoC,EAAAA,EAAAA,MAAC0S,EAAAA,EAAW,CACVhW,WAAS,EACTyD,QAAQ,WACR3C,KAAK,QACLC,GAAI,CACF,qBAAsB,CACpBE,SAAU,OACVoM,WAAY,QACZ4I,OAAQ,GACR3I,QAAS,SAEX,wCAAyC,CAAEpM,IAAK,SAChDT,SAAA,EAEFJ,EAAAA,EAAAA,KAAC6V,EAAAA,EAAU,CAAC9T,GAAG,WAAU3B,SAAC,gBAC1B6C,EAAAA,EAAAA,MAAC6S,EAAAA,EAAM,CACLC,QAAQ,WACRxW,MAAOoR,EAAMZ,MACb3Q,MAAM,aACNC,KAAK,QACLC,SAAUuR,EACVnQ,GAAI,CACFc,OAAQ,OACRZ,SAAU,QACVR,SAAA,EAEFJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,EAAEa,SAAC,cACpBJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,EAAEa,SAAC,aACpBJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,EAAEa,SAAC,oBAGP,IAAhBuQ,EAAMZ,QACL/P,EAAAA,EAAAA,KAACkR,EAAAA,SAAc,CAAA9Q,SACZmT,GACCvT,EAAAA,EAAAA,KAACiW,EAAAA,EAAa,CAAC3J,QAASiH,KAExBtQ,EAAAA,EAAAA,MAAC0S,EAAAA,EAAW,CACVhW,WAAS,EACTyD,QAAQ,WACR3C,KAAK,QACLC,GAAI,CACF,qBAAsB,CACpBE,SAAU,OACVoM,WAAY,QACZ4I,OAAQ,GACR3I,QAAS,SAEX,wCAAyC,CAAEpM,IAAK,SAChDT,SAAA,EAEFJ,EAAAA,EAAAA,KAAC6V,EAAAA,EAAU,CAAC9T,GAAG,iBAAgB3B,SAAC,iBAChC6C,EAAAA,EAAAA,MAAC6S,EAAAA,EAAM,CACLC,QAAQ,iBACRxW,MAAOoR,EAAMX,cACb5Q,MAAM,cACNC,KAAK,gBACLC,SAAUuR,EACVnQ,GAAI,CACFc,OAAQ,OACRZ,SAAU,QACVR,SAAA,EAEFJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,MAAMa,SAAC,QACR,OAAfkT,QAAe,IAAfA,OAAe,EAAfA,EAAiB/O,KAAKoS,YAAYC,KACjC,SAAClP,EAAUlB,GACT,OACExG,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAAWzW,MAAOmI,EAAImP,QAAQzW,SACpCsH,EAAImP,SADQrQ,EAInB,YAOK,IAAhBmK,EAAMZ,QACL/P,EAAAA,EAAAA,KAACkR,EAAAA,SAAc,CAAA9Q,SACZoU,GACCxU,EAAAA,EAAAA,KAACiW,EAAAA,EAAa,CAAC3J,QAASkI,KAExBvR,EAAAA,EAAAA,MAAC0S,EAAAA,EAAW,CACVjV,GAAI,CACFQ,MAAO,OACP,qBAAsB,CACpBN,SAAU,OACVoM,WAAY,QACZ4I,OAAQ,GACR3I,QAAS,SAEX,wCAAyC,CAAEpM,IAAK,SAElDuC,QAAQ,WACR3C,KAAK,QAAOL,SAAA,EAEZJ,EAAAA,EAAAA,KAAC6V,EAAAA,EAAU,CAACM,QAAQ,aAAY/V,SAAC,aACjCJ,EAAAA,EAAAA,KAACoW,EAAAA,EAAa,CACZ1V,GAAI,CACFc,OAAQ,OACRZ,SAAU,QAEZxB,MAAM,UACNC,KAAK,gBACLE,MAAOoR,EAAMX,cACb1Q,SAAUuR,EACV9O,GAAG,aACHvC,UAAW,SAACkE,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,OAAO0Q,EAAmB3D,EAAMX,cAEpC,EACAqG,cACErW,EAAAA,EAAAA,KAACsW,EAAAA,EAAc,CAACvV,SAAS,MAAKX,UAC5BJ,EAAAA,EAAAA,KAAC0E,EAAAA,EAAU,CACTE,QAAS,WACP0P,EAAmB3D,EAAMX,cAC3B,EACAuG,KAAK,MACL5R,MAAM,YAAWvE,UAEjBJ,EAAAA,EAAAA,KAACwW,EAAAA,EAAgB,eAShB,IAAhB7F,EAAMZ,QACL/P,EAAAA,EAAAA,KAACkR,EAAAA,SAAc,CAAA9Q,SACZ8S,GACClT,EAAAA,EAAAA,KAACiW,EAAAA,EAAa,CAAC3J,QAAS4G,KAExBjQ,EAAAA,EAAAA,MAAC0S,EAAAA,EAAW,CACVhW,WAAS,EACTyD,QAAQ,WACR3C,KAAK,QACLC,GAAI,CACF,qBAAsB,CACpBE,SAAU,OACVoM,WAAY,QACZ4I,OAAQ,GACR3I,QAAS,SAEX,wCAAyC,CAAEpM,IAAK,SAChDT,SAAA,EAEFJ,EAAAA,EAAAA,KAAC6V,EAAAA,EAAU,CAAC9T,GAAG,eAAc3B,SAAC,eAC9B6C,EAAAA,EAAAA,MAAC6S,EAAAA,EAAM,CACLC,QAAQ,eACRxW,MAAOoR,EAAMX,cACb5Q,MAAM,YACNC,KAAK,gBACLC,SAAUuR,EACVnQ,GAAI,CACFc,OAAQ,OACRZ,SAAU,QACVR,SAAA,EAEFJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,MAAMa,SAAC,QACX,OAAZ6S,QAAY,IAAZA,OAAY,EAAZA,EAAc1O,KAAKuS,SAASF,KAAI,SAAClP,EAAUlB,GAC1C,OACExG,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAAWzW,MAAOmI,EAAIqP,YAAY3W,SACxCsH,EAAIqP,aADQvQ,EAInB,aAMVvD,EAAAA,EAAAA,MAAC0S,EAAAA,EAAW,CACVhW,WAAS,EACTyD,QAAQ,WACR3C,KAAK,QACLC,GAAI,CACF,qBAAsB,CACpBE,SAAU,OACVoM,WAAY,QACZ4I,OAAQ,GACR3I,QAAS,SAEX,wCAAyC,CAAEpM,IAAK,SAChDT,SAAA,EAEFJ,EAAAA,EAAAA,KAAC6V,EAAAA,EAAU,CAAC9T,GAAG,gBAAe3B,SAAC,iBAC/B6C,EAAAA,EAAAA,MAAC6S,EAAAA,EAAM,CACL/T,GAAG,gBACH3C,MAAM,cACNG,MAAOoR,EAAMpB,WACblQ,KAAK,aACLC,SAAUuR,EACVnQ,GAAI,CACFc,OAAQ,OACRZ,SAAU,QACVR,SAAA,EAEFJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,QAAQa,SAAC,WAC1BJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,UAAUa,SAAC,aAC5BJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,SAASa,SAAC,YAC3BJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,SAASa,SAAC,kBAG/BJ,EAAAA,EAAAA,KAAC0Q,EAAiB,CAChBE,SAAUA,EACVD,MAAOA,EACPE,kBAAmBA,QAGvB7Q,EAAAA,EAAAA,KAACkD,EAAAA,EAAG,CACFxC,GAAI,CACFc,OAAQ,OACR2N,KAAM,EACNF,WAAY,SACZhC,QAAS,YACT+J,OAAQ,qBACR5W,UAEF6C,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFxC,GAAI,SAAC2U,GAAK,OAAAF,EAAAA,EAAAA,GAAA,CACRjU,MAAO,OACPgM,QAAS,OACTgC,cAAe,MACfJ,UAAW,OACXG,WAAY,UACXoG,EAAMI,YAAYC,KAAK,MAAQ,CAC9BxG,cAAe,SACf+H,OAAQ,QACT,EACA7W,SAAA,EAEH6C,EAAAA,EAAAA,MAAC0S,EAAAA,EAAW,CACVhW,WAAS,EACTyD,QAAQ,WACR3C,KAAK,QACLC,GAAI,CACF,qBAAsB,CACpBE,SAAU,OACVoM,WAAY,QACZ4I,OAAQ,GACR3I,QAAS,SAEX,wCAAyC,CAAEpM,IAAK,SAChDT,SAAA,EAEFJ,EAAAA,EAAAA,KAAC6V,EAAAA,EAAU,CAAC9T,GAAG,OAAM3B,SAAC,UACtB6C,EAAAA,EAAAA,MAAC6S,EAAAA,EAAM,CACLC,QAAQ,OACRxW,MAAOoR,EAAMV,KACb7Q,MAAM,OACNC,KAAK,OACLC,SAAUuR,EACVnQ,GAAI,CACFc,OAAQ,OACRZ,SAAU,QACVR,SAAA,EAEFJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,OAAOa,SAAC,UACzBJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,sBAAsBa,SAAC,+BAK5C6C,EAAAA,EAAAA,MAAC0S,EAAAA,EAAW,CACVhW,WAAS,EACTyD,QAAQ,WACR3C,KAAK,QACLC,GAAI,CACF,qBAAsB,CACpBE,SAAU,OACVoM,WAAY,QACZ4I,OAAQ,GACR3I,QAAS,SAEX,wCAAyC,CAAEpM,IAAK,SAChDT,SAAA,EAEFJ,EAAAA,EAAAA,KAAC6V,EAAAA,EAAU,CAAC9T,GAAG,QAAO3B,SAAC,WACvB6C,EAAAA,EAAAA,MAAC6S,EAAAA,EAAM,CACLC,QAAQ,QACRxW,MAAOoR,EAAMT,MACb9Q,MAAM,OACNC,KAAK,QACLC,SAAUuR,EACVnQ,GAAI,CACFc,OAAQ,OACRZ,SAAU,QACVR,SAAA,EAEFJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,MAAMa,SAAC,eACxBJ,EAAAA,EAAAA,KAACgW,EAAAA,EAAQ,CAACzW,MAAO,OAAOa,SAAC,0BAKhC0U,EACAV,IAGP,CACe,SAAS8C,IAAmB,IAADC,EACxCC,GAA0BvI,EAAAA,EAAAA,YAAW0D,EAAAA,GAA7BC,EAAO4E,EAAP5E,QAAS1B,EAAIsG,EAAJtG,KACjB/F,GAA4BC,EAAAA,EAAAA,UAASyF,EAAavE,EAAa6D,QAAO9E,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/DhE,EAAMkE,EAAA,GAAEoM,EAASpM,EAAA,GAwCxB,OAvCAiB,EAAa7J,MAAQ+O,EAAWlF,EAAkB,OAAJ4E,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAwClDrR,EAAAA,EAAAA,KAACsX,EAAAA,GAAY,CACXvQ,OAAQA,EACRmF,aAAcA,EACdgG,QAAS,SAACvB,EAAOC,GAAQ,OACvB5Q,EAAAA,EAAAA,KAACuX,EAAO,CAAC5G,MAAOA,EAAOC,SAAUA,GAAY,EAE/C4G,eA9CsE,SACjD1O,EAAA2O,EAAAC,GAAA,OAAAP,EAAAA,IAAAnO,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAzB,SAAAyO,EAA0BC,EAAcC,EAAiBlH,GAAU,IAAAmH,EAAAC,EAAAC,EAAA,OAAA/O,EAAAA,EAAAA,KAAAM,MAAA,SAAA0O,GAAA,cAAAA,EAAAxO,KAAAwO,EAAAvO,MAAA,OAI9D,OAHGoO,EAAerH,EAAaE,EAAMZ,QACxCmI,EAAAA,EAAAA,YAAU,WACRb,EAAUS,EACZ,IAAGG,EAAAvO,KAAA,EACoB8I,EAAQ2F,KAC7B,8CACAxH,EACA,CACEkC,QAAS,CACPC,cAAc,UAAD7O,OAAgB,OAAJ6M,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,gBAGnC,KAAD,EARa,OAARgF,EAAQE,EAAAjF,KAAAiF,EAAAvO,KAAA,EASSqO,EAASxT,KAAK,KAAD,EAA9ByT,EAAQC,EAAAjF,MACdnK,EAAAA,EAAAA,IAAY,CACVtE,KAAMyT,EAASI,OACfrR,OAAQ+Q,EACR9Q,kBAAmB,SAACU,GAClB,IAAM2Q,EAAeP,EAClBtM,QAAO,SAAC9D,GAAQ,MAAkB,WAAbA,EAAI4I,IAAiB,IAC1CsG,KAAI,SAAC0B,GAAM,OAAKA,EAAE5P,OAAO,IAS5B,OAPA2P,EAAa9R,SAAQ,SAACmC,GAChBhB,EAAI6Q,eAAe7P,KACrBhB,EAAIgB,IAAW8P,EAAAA,EAAAA,IACb1T,KAAK2T,IAAIC,WAAWhR,EAAIgB,GAASmH,WAAW8I,QAAQ,KAAM,OAGhE,IACOjR,CACT,EACAT,gBAAiB,MAChB2R,MAAK,SAACvR,GACPuQ,EAAQvQ,GACRwQ,GAAW,EACb,IAAG,wBAAAI,EAAApO,OAAA,GAAA8N,EAAA,MACJ7N,MAAA,KAAAC,UAAA,EASG8O,kBAAmB,IACnBC,UAAW,SAACvU,EAAMoM,GAChB,OAAOpM,EAAKqS,KAAI,SAACmC,EAAYC,GAC3B,OACE/V,EAAAA,EAAAA,MAAA,OAAKe,UAAU,gBAAe5D,SAAA,EAC5BJ,EAAAA,EAAAA,KAAA,OAAKgE,UAAU,SAASlD,MAAO,CAAEU,OAAQ,WACzCxB,EAAAA,EAAAA,KAAA,OAAKgE,UAAU,UAAS5D,UACtB6C,EAAAA,EAAAA,MAAA,SAAA7C,SAAA,EACE6C,EAAAA,EAAAA,MAAA,SAAA7C,SAAA,CACGuQ,EAAMtO,MAAM4W,MAAM,MAAMrC,KAAI,SAACsC,EAAW1S,GACvC,OACExG,EAAAA,EAAAA,KAAA,MAAAI,UACEJ,EAAAA,EAAAA,KAAA,MACEc,MAAO,CACLF,SAAU,OACVuM,WAAY,OACZgM,UAAW,QAEbC,QAASrS,EAAOF,OAAOzG,SAEtB8Y,KATI1S,EAab,KACAxG,EAAAA,EAAAA,KAAA,MAAIc,MAAO,CAAEU,OAAQ,WACrBxB,EAAAA,EAAAA,KAAA,MAAAI,SACG2G,EAAO6P,KAAI,SAAClP,EAAU2R,GACrB,OACErZ,EAAAA,EAAAA,KAAA,MACEsZ,cAAe,SAAC5V,GAAC,OACf6V,EAAAA,EAAAA,IAA4B7V,EAAGgE,EAAIgB,QAASnE,EAAK,EAEnDzD,MAAO,CACLI,MAAOwG,EAAIxG,MACXN,SAAU,OACVuM,WAAY,OACZqM,aAAc,mBACdpZ,SAGDsH,EAAI0I,QAFAiJ,EAKX,UAGJpW,EAAAA,EAAAA,MAAA,SAAA7C,SAAA,EACEJ,EAAAA,EAAAA,KAAA,MAAIc,MAAO,CAAEU,OAAQ,UACpBuX,EAAMnC,KAAI,SAAC6C,EAAcJ,GACxB,OAAII,EAAQC,aAER1Z,EAAAA,EAAAA,KAAA,MAAAI,UACEJ,EAAAA,EAAAA,KAAA,MACEgE,UAAS,6BAAAC,OAA+B+U,EAAU,UAAA/U,OAASoV,EAAM,UACjED,QAASrS,EAAOF,OAChB/F,MAAO,CACLqM,WAAY,OACZvM,SAAU,QACVR,SAEDqZ,EAAQE,UATJN,IAgBXpW,EAAAA,EAAAA,MAACiO,EAAAA,SAAc,CAAA9Q,SAAA,EACbJ,EAAAA,EAAAA,KAAA,MAAAI,SACG2G,EAAO6P,KAAI,SAACgD,EAAcC,GACzB,OAAIJ,EAAQK,YACK,IAAXD,EACK,KAGM,IAAXA,GAEA5W,EAAAA,EAAAA,MAAA,MACEe,UAAS,8BAAAC,OAAgC+U,EAAU,SAAA/U,OAAQoV,EAAM,SAAApV,OAAQ4V,GAEzET,QAAS,EACTtY,MAAO,CACLiZ,UAAW,qBACX7Y,MAAO0Y,EAAQ1Y,MACfN,SAAU,OACVuM,WAAY,OACZgM,UAAW,SACX/Y,SAAA,CACH,SACQ,MAVFyZ,IAgBT7Z,EAAAA,EAAAA,KAAA,MAEEgE,UAAS,8BAAAC,OAAgC+U,EAAU,SAAA/U,OAAQoV,EAAM,SAAApV,OAAQ4V,GACzE/Y,MAAO,CACLqY,UAAW,QACXY,UAAW,qBACX7Y,MAAO0Y,EAAQ1Y,MACfN,SAAU,OACVuM,WAAY,OACZ/M,SAEDqZ,EAAQG,EAAQlR,UAVZmR,IAgBT7Z,EAAAA,EAAAA,KAAA,MACE4E,QAASoV,EAAAA,GACThW,UAAS,8BAAAC,OAAgC+U,EAAU,SAAA/U,OAAQoV,EAAM,SAAApV,OAAQ4V,GAEzE/Y,MAAO,CACLF,SAAU,OACVuM,WAAY,MACZ8M,YACsB,YAApBL,EAAQlR,SACY,UAApBkR,EAAQlR,QACJ,OACA,OACNxH,MAAM,GAAD+C,OAAK2V,EAAQ1Y,MAAK,eACvBiY,UACsB,YAApBS,EAAQlR,QACJ,QACA,QACNtI,SAEDqZ,EAAQG,EAAQlR,UAhBZmR,EAmBX,KAlEOR,IAoETrZ,EAAAA,EAAAA,KAAA,MAAIc,MAAO,CAAEU,OAAQ,WArEF6X,EAwEzB,QAEFrZ,EAAAA,EAAAA,KAAA,SAAAI,SACG4Y,IAAezU,EAAKsC,OAAS,IAC5B5D,EAAAA,EAAAA,MAACiO,EAAAA,SAAc,CAAA9Q,SAAA,EACbJ,EAAAA,EAAAA,KAAA,MAAIc,MAAO,CAAEU,OAAQ,WACrByB,EAAAA,EAAAA,MAAA,MAAA7C,SAAA,EACE6C,EAAAA,EAAAA,MAAA,MACEnC,MAAO,CACLqM,WAAY,OACZvM,SAAU,QACVR,SAAA,CACH,kBACiB,KACdmE,EAAK2V,OAAOrT,OAAS,GAAGsT,eAAe,aAE3ClX,EAAAA,EAAAA,MAAA,MACEnC,MAAO,CACLqY,UAAW,QACXhM,WAAY,OACZvM,SAAU,QACVR,SAAA,CACH,SACQ,OAER2G,EAAO6P,KAAI,SAAClP,EAAUlB,GACrB,IAAKkB,EAAI2I,MACP,OAAI7J,EAAM,GAENxG,EAAAA,EAAAA,KAACkR,EAAAA,SAAc,GAAM1K,IAGlBxG,EAAAA,EAAAA,KAAA,QAASwG,GAElB,IAcM6J,EAde9L,EAAK2V,OAEI1O,QAAO,SAAC8M,GAOpC,OACG8B,MAAM1B,WAAWJ,EAAE+B,WAAa/B,EAAEwB,WAEvC,IAEqBQ,QAAO,SAAChC,EAAQiC,GACnC,OACEjC,EACAI,WACE6B,EAAIF,QAAQxK,WAAW8I,QAAQ,KAAM,IAG3C,GAAG,GAEH,OACE3Y,EAAAA,EAAAA,KAAA,MAEEc,MAAO,CACLqM,WAAY,OACZgM,UAAW,QACXvY,SAAU,QACVR,SAEDga,MAAM/J,GACH,KACAmI,EAAAA,EAAAA,IAAuBnI,IATtB7J,EAYX,kBAOZvD,EAAAA,EAAAA,MAAA,OACEe,UAAU,SACVlD,MAAO,CACLU,OAAQ,OACR0L,QAAS,OACT6B,eAAgB,iBAChB3O,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,KAAGc,MAAO,CAAEF,SAAU,OAAQuM,WAAY,QAAS/M,UAChDgP,EAAAA,EAAAA,GAAO,IAAIK,KAAQ,iBAEtBxM,EAAAA,EAAAA,MAAA,KAAGnC,MAAO,CAAEF,SAAU,OAAQuM,WAAY,QAAS/M,SAAA,CAAC,QAC5C4Y,EAAa,EAAE,OAAKzU,EAAKsC,eAlODmS,EAuOxC,GACF,EACAwB,WAAY,OACZC,UAAW,SAGjB,CACA,SAASrJ,EAAWT,EAAYU,GAC9B,MAAM,GAANpN,OACiB,SAAfoN,EACI,uCACA,kDAAiD,kBAAApN,OAEpC,IAAjB0M,EAAMvB,OACF,YAAW,GAAAnL,OACR0M,EAAMrB,cAAa,MAAArL,OAAK0M,EAAMtB,QAAO,MAAI,oBAAApL,OAKpD,SAA4B0M,GAC1B,IAAI+J,EAAa,GACjB,GAAyB,UAArB/J,EAAMpB,WACRmL,EAAa/J,EAAMnB,SAASmL,mBAAmB,QAAS,CACtDC,KAAM,UACNC,MAAO,OACPC,IAAK,iBAEF,GAAyB,YAArBnK,EAAMpB,WACfmL,EAAa/J,EAAMnB,SAASmL,mBAAmB,QAAS,CACtDC,KAAM,UACNC,MAAO,cAEJ,GAAyB,WAArBlK,EAAMpB,WAAyB,CACxC,IACAwL,EAqBJ,SAAyBC,EAAmBrL,GAC1C,IAAMsL,EAAY,IAAIxL,KAAKuL,EAAW,EAAG,GACnCE,EAAU,IAAIzL,KAAKuL,EAAYrL,EAAW,GAAI,IAE9CwL,EAAqBF,EAAUrL,cAC/BwL,EAAmBF,EAAQtL,cAEjC,OAAIwL,EAAmBD,EACd,CACLA,mBAAoBC,EACpBA,iBAAkBD,GAGb,CACLA,mBAAAA,EACAC,iBAAAA,EAGN,CAvCqDC,CADpC,IAAI5L,KAAKkB,EAAMnB,UAAUI,cAGpC0L,SAAS3K,EAAMhB,YAFTwL,EAAkBJ,EAAlBI,mBAAoBC,EAAgBL,EAAhBK,iBAI5BV,EAAU,GAAAzW,OAAMkX,EAAkB,KAAAlX,OAAImX,EACxC,KAAO,CACL,IAAM5L,EAAWmB,EAAMnB,SAASmL,mBAAmB,QAAS,CAC1DC,KAAM,UACNC,MAAO,OACPC,IAAK,YAEDpL,EAASiB,EAAMjB,OAAOiL,mBAAmB,QAAS,CACtDC,KAAM,UACNC,MAAO,OACPC,IAAK,YAEPJ,EAAU,GAAAzW,OAAMuL,EAAQ,QAAAvL,OAAOyL,EACjC,CACA,OAAOgL,CACT,CAtCqBa,CAAmB5K,GAAM,KAE9C,C,gIChrCsC,SA8BvB6K,EAAkB1S,EAAA2O,EAAAC,GAAA,OAAA+D,EAAAA,IAAAzS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAC,EACEqJ,EACA1B,EACA4C,GAAuC,IAAAgI,EAAAC,EAAA5R,UAAA,OAAAd,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpB,OAAnBgS,EAAcC,EAAA9U,OAAA,QAAA8C,IAAAgS,EAAA,GAAAA,EAAA,GAAG,GAAEnS,EAAAI,OAAA,SAEZ4I,EAAQI,IAAI,GAAD3O,OAAQ,OAAJyP,QAAI,IAAJA,OAAI,EAAJA,EAAMC,IAAG,KAAA1P,OAAQ,OAAJyP,QAAI,IAAJA,OAAI,EAAJA,EAAME,aAAY,KAAA3P,OAAIyX,GAAU,CACjE7I,QAAS,CACPC,cAAc,UAAD7O,OAAgB,OAAJ6M,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,iBAEjC,wBAAAvJ,EAAAK,OAAA,GAAAV,EAAA,MACHW,MAAA,KAAAC,UAAA,CAsID,IApI2B,SAAH5K,GAeU,IAADyc,EAAAzJ,EAd/BuB,EAAIvU,EAAJuU,KACAI,EAAQ3U,EAAR2U,SACAnS,EAAQxC,EAARwC,SACAoS,EAAe5U,EAAf4U,gBACArS,EAAOvC,EAAPuC,QAAOma,EAAA1c,EACP6U,WAAAA,OAAU,IAAA6H,EAAG,WAAO,EAACA,EAAAC,EAAA3c,EACrB4c,iBAAAA,OAAgB,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAA7c,EAC3B8c,UAAAA,OAAS,IAAAD,EAAG,WAAO,EAACA,EACpB1Z,EAASnD,EAATmD,UACAE,EAAarD,EAAbqD,cAAa0Z,EAAA/c,EACbgd,gBAAAA,OAAe,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAAjd,EAC1Bkd,eAAAA,OAAc,IAAAD,EAAGZ,EAAkBY,EACnC1Z,EAAevD,EAAfuD,gBACAC,EAAgBxD,EAAhBwD,iBAEAiM,GAA0BC,EAAAA,EAAAA,YAAW0D,EAAAA,GAA7BC,EAAO5D,EAAP4D,QAAS1B,EAAIlC,EAAJkC,KACjB/F,GAA6BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCuR,EAAIrR,EAAA,GAAEsR,EAAYtR,EAAA,GACzBuR,GAAwBxR,EAAAA,EAAAA,UAAgC,IAAGyR,GAAAvR,EAAAA,EAAAA,GAAAsR,EAAA,GAApD3a,EAAI4a,EAAA,GAAE3a,EAAO2a,EAAA,GAAwC,SAC7CC,IAAkB,OAAAd,EAAAA,IAAA5S,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAkK,IAAA,IAAAsI,EAAAiB,EAAA5S,UAAA,OAAAd,EAAAA,EAAAA,KAAAM,MAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,OAAqD,OAAnBgS,EAAciB,EAAA9V,OAAA,QAAA8C,IAAAgT,EAAA,GAAAA,EAAA,GAAG,GAAEtJ,EAAA3J,KAAA,EACtC2S,EAAe7J,EAAS1B,EAAM4C,EAAMgI,GAAQ,KAAD,SAAArI,EAAAzJ,OAAA,SAAAyJ,EAAAL,MAAA,wBAAAK,EAAAxJ,OAAA,GAAAuJ,EAAA,MACzDtJ,MAAA,KAAAC,UAAA,CACD,IAAA0I,GAA+BC,EAAAA,EAAAA,UAAS,CACtC/Q,SAAUA,EACVgR,QAAQ,WAAD,OAAAR,EAAAA,IAAAnJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAyO,IAAA,OAAA1O,EAAAA,EAAAA,KAAAM,MAAA,SAAA0O,GAAA,cAAAA,EAAAxO,KAAAwO,EAAAvO,MAAA,cAAAuO,EAAAvO,KAAA,EAAkBgT,IAAoB,cAAAzE,EAAArO,OAAA,SAAAqO,EAAAjF,MAAA,wBAAAiF,EAAApO,OAAA,GAAA8N,EAAA,MAAA7N,MAAA,KAAAC,UAAA,EAC/CkS,UAAW,SAACW,GACV,IAAM7E,EAAW6E,EACjB9a,EAAQiW,EAASxT,KAAKwP,IACtBkI,EAAUlE,EACZ,EACA8E,sBAAsB,IARhBpb,EAASgR,EAAThR,UAAWqb,EAAOrK,EAAPqK,QAmGnB,MAAO,CACLR,KAAAA,EACAza,KAAAA,EACAJ,UAAAA,EACA8S,UA5FgB,WAA0B,IAAzBmH,EAAc3R,UAAAlD,OAAA,QAAA8C,IAAAI,UAAA,GAAAA,UAAA,GAAG,IAClCmO,EAAAA,EAAAA,YAAU,WACRqE,GAAa,EACf,IACa,OAATja,QAAS,IAATA,GAAAA,EAAWwB,UACbxB,EAAUwB,QAAQvE,MAAQmc,EAC1BgB,EAAmBhB,GAAQ9C,MAAK,SAACgE,GAC/B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKrY,KAAKwY,QACb,OAAOC,MAAM,WAAD/Y,OAAe,OAAH2Y,QAAG,IAAHA,OAAG,EAAHA,EAAKrY,KAAK0Y,UAGpCnb,EADiB8a,EACArY,KAAKwP,IACT,OAATzR,QAAS,IAATA,GAAAA,EAAWwB,SAASxB,EAAUwB,QAAQ4B,OAC5C,IAEJ,EA8EE+O,WA5EiB,WAEK,IAAD9Q,GADrB4Y,GAAa,GACTJ,IACFA,EAAyB,OAAT7Z,QAAS,IAATA,GAAkB,QAATqB,EAATrB,EAAWwB,eAAO,IAAAH,OAAT,EAATA,EAAoBpE,MAExC,EAwEE8U,gBArEArU,EAAAA,EAAAA,KAACuB,EAAAA,GAAc,CACboB,iBAAkBA,EAClBL,UAAWA,EACXL,UAAWqa,EACXta,aAAc,WAEU,IAADkb,GADrBX,GAAa,GACTJ,IACFA,EAAyB,OAAT7Z,QAAS,IAATA,GAAkB,QAAT4a,EAAT5a,EAAWwB,eAAO,IAAAoZ,OAAT,EAATA,EAAoB3d,MAExC,EACA2C,iBAAkB,WAEM,IAADib,GADrBZ,GAAa,GACTJ,IACFA,EAAyB,OAAT7Z,QAAS,IAATA,GAAkB,QAAT6a,EAAT7a,EAAWwB,eAAO,IAAAqZ,OAAT,EAATA,EAAoB5d,MAExC,EACA4C,eAAgB,SAACuB,GAaf,EAEFjB,iBAAkB,SAAClD,GACjBmd,EAAmBnd,GAAOqZ,MAAK,SAACgE,GAC9B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKrY,KAAKwY,QACb,OAAOC,MAAM,WAAD/Y,OAAe,OAAH2Y,QAAG,IAAHA,OAAG,EAAHA,EAAKrY,KAAK0Y,UAGpCnb,EADiB8a,EACArY,KAAKwP,GACxB,GACF,EACAvR,cAAeA,EACfhB,OAAQ,IACRC,UAAWA,EACXE,SAAUA,EACVD,QAASA,EACTE,kBAAmB,SAACsI,EAAmB3F,GACrC,GAAI2F,EAAkBrD,QAAU,EAC9B,OAAOkV,EAAiBxX,GAE1B,IAAM6Y,EAAc,IAAI9P,IAAIpD,GACtB+J,EAAkB1P,EAAKiH,QAAO,SAACgB,GACnC,OAAO4Q,EAAY5P,IAAIhB,EAAIsH,GAAUjE,WACvC,IACIoE,EAAgBpN,QAAU,GAC9BmN,EAAWC,EAAiB1P,EAC9B,EACAxC,GAAI+R,EACJjS,KAAMA,EACNC,QAASA,EACTY,gBAAiBA,IAWnBoa,QAAAA,EAEJ,C,4BCnLIO,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,SAAS,EAAc,EAAIF,EAAYG,KAAK,SAAU,CACtFC,GAAI,KACJC,GAAI,IACJC,EAAG,KACF,MAAmB,EAAIN,EAAYG,KAAK,OAAQ,CACjDtF,EAAG,kQACF,MAAO,gBACViF,EAAQ,EAAUG,C,uEChBH,SAAS5d,EAAyBke,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACI5X,EAAK8X,EADLhJ,GAAS,OAA6B8I,EAAQC,GAElD,GAAIE,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBJ,GACpD,IAAKE,EAAI,EAAGA,EAAIG,EAAiBxX,OAAQqX,IACvC9X,EAAMiY,EAAiBH,GACnBD,EAASK,QAAQlY,IAAQ,GACxB+X,OAAOI,UAAUC,qBAAqBC,KAAKT,EAAQ5X,KACxD8O,EAAO9O,GAAO4X,EAAO5X,GAEzB,CACA,OAAO8O,CACT,C","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/PrintPreview/dataCore.ts","components/Table.tsx","feautures/Admin/Reports/Accounting/ScheduleAccount.tsx","hooks/useQueryModalTable.tsx","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        sx={{\n          minWidth: \"200px\",\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","export function getTableCellHeight(\r\n  tempCell: HTMLTableCellElement,\r\n  content: string,\r\n  columnWidth: string,\r\n  contentElment: Element,\r\n  tempTable: HTMLTableElement\r\n) {\r\n  tempCell.style.width = columnWidth;\r\n  tempCell.textContent = content;\r\n  contentElment.appendChild(tempTable);\r\n}\r\n\r\nexport function defaultArrangeDataCore({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  fontSize = \"11px\",\r\n  summaryHeight = 0,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  fontSize: string;\r\n  summaryHeight?: number;\r\n}) {\r\n  const newData: Array<any> = [];\r\n  let trHeight = 0;\r\n  let temp: Array<any> = [];\r\n  const contentElment = document.querySelector(\".content\") as Element;\r\n  const maxHeight =\r\n    contentElment.getBoundingClientRect().height - adjustMaxHeight;\r\n\r\n  data.forEach((itm: any, idx: number) => {\r\n    itm = beforeArrangeData(itm);\r\n    const contentElment = document.querySelector(\".content\") as Element;\r\n    const tempTable = document.createElement(\"table\");\r\n    const tempRow = tempTable.insertRow();\r\n\r\n    if (itm.summaryReport) {\r\n      if (maxHeight - trHeight <= summaryHeight + 20) {\r\n        trHeight += maxHeight - trHeight;\r\n      }\r\n    }\r\n    column.forEach((col) => {\r\n      const tempCell = tempRow.insertCell();\r\n      tempTable.style.visibility = \"hidden\";\r\n      tempTable.style.width = `100%`;\r\n      tempTable.style.fontSize = fontSize;\r\n\r\n      getTableCellHeight(\r\n        tempCell,\r\n        itm[col.datakey],\r\n        col.width,\r\n        contentElment,\r\n        tempTable\r\n      );\r\n    });\r\n    trHeight += tempRow.getBoundingClientRect().height;\r\n    contentElment.removeChild(tempTable);\r\n    temp.push(itm);\r\n    if (\r\n      trHeight >= maxHeight ||\r\n      (idx === data.length - 1 && trHeight < maxHeight)\r\n    ) {\r\n      newData.push(temp);\r\n      trHeight = 0;\r\n      temp = [];\r\n    }\r\n  });\r\n\r\n  return newData;\r\n}\r\nexport const arrangeData = async ({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  cb,\r\n  fontSize = \"11px\",\r\n  summaryHeight,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  cb?: ({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n  }: {\r\n    data: any;\r\n    column: Array<any>;\r\n    beforeArrangeData: (itm: any) => any;\r\n    adjustMaxHeight: number;\r\n  }) => any[];\r\n  fontSize?: string;\r\n  summaryHeight?: number;\r\n}) => {\r\n  if (data === undefined) return [];\r\n  if (cb) {\r\n    return cb({\r\n      data,\r\n      column,\r\n      beforeArrangeData,\r\n      adjustMaxHeight,\r\n    });\r\n  }\r\n\r\n  return defaultArrangeDataCore({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n    fontSize,\r\n    summaryHeight,\r\n  });\r\n};\r\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useRef, useState } from \"react\";\nimport PrintPreview, {\n  columnSelection,\n  copiedByHeaderOnDoubleClick,\n  formatNumberWithCommas,\n} from \"../../../../components/PrintPreview/PrintPreview\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport {\n  FormControl,\n  MenuItem,\n  Select,\n  TextField,\n  InputLabel,\n  Box,\n  InputAdornment,\n  IconButton,\n  OutlinedInput,\n} from \"@mui/material\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { useQuery } from \"react-query\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { flushSync } from \"react-dom\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { arrangeData } from \"../../../../components/PrintPreview/dataCore\";\nimport { format } from \"date-fns\";\n\nconst initialState = {\n  format: 0,\n  account: \"\",\n  account_title: \"\",\n  dateFormat: \"Yearly\",\n  dateFrom: new Date(),\n  dateTo: new Date(),\n  yearCount: new Date().getFullYear().toString().slice(-2),\n  subsi: 0,\n  subsi_options: \"All\",\n  sort: \"Name\",\n  order: \"asc\",\n  title: \"\",\n};\n\nconst subAcctColumn = [\n  {\n    datakey: \"GL_Acct\",\n    header: \"ID No.\",\n    width: \"220px\",\n  },\n  {\n    datakey: \"mSub_Acct\",\n    header: \"IDENTITY\",\n    width: \"400px\",\n  },\n  {\n    datakey: \"Balance\",\n    header: \"AMOUNT\",\n    total: true,\n    type: \"number\",\n    width: \"160px\",\n  },\n];\nconst idColumn = [\n  {\n    datakey: \"ID_No\",\n    header: \"ID No.\",\n    width: \"220px\",\n  },\n  {\n    datakey: \"mID\",\n    header: \"IDENTITY\",\n    width: \"400px\",\n  },\n  {\n    datakey: \"Balance\",\n    header: \"AMOUNT\",\n    total: true,\n    type: \"number\",\n    width: \"160px\",\n  },\n];\nconst insuranceColumn = [\n  {\n    datakey: \"ID_No\",\n    header: \"ID. No.\",\n    width: \"220px\",\n  },\n  {\n    datakey: \"mID\",\n    header: \"Insurance\",\n    width: \"400px\",\n  },\n  {\n    datakey: \"Balance\",\n    header: \"Balance\",\n    total: true,\n    type: \"number\",\n    width: \"160px\",\n  },\n];\nfunction columnRender(subsi: number) {\n  const columns = [subAcctColumn, idColumn, insuranceColumn];\n  return columns[subsi];\n}\nfunction ShowDateSelection({ state, dispatch, handleInputChange, user }: any) {\n  const dateFromRef = useRef<HTMLElement>(null);\n  const dateToRef = useRef<HTMLElement>(null);\n\n  return (\n    <React.Fragment>\n      {state.dateFormat === \"Custom\" && (\n        <React.Fragment>\n          <CustomDatePicker\n            fullWidth={true}\n            label=\"Date From\"\n            onChange={(value: any) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"dateFrom\",\n                value: value,\n              });\n              state.dateFrom = value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n            value={new Date(state.dateFrom)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  dateFromRef.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={dateFromRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n          <CustomDatePicker\n            fullWidth={true}\n            label=\"Date To\"\n            onChange={(value: any) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"dateTo\",\n                value: value,\n              });\n              state.dateTo = value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n            value={new Date(state.dateTo)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  dateToRef.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={dateToRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n        </React.Fragment>\n      )}\n\n      {state.dateFormat === \"Daily\" && (\n        <CustomDatePicker\n          fullWidth={true}\n          label=\"Date\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateFrom\",\n              value: value,\n            });\n            state.dateFrom = value;\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"title\",\n              value: setupTitle(state, user?.department as string),\n            });\n          }}\n          value={new Date(state.dateFrom)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateFromRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateFromRef}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n        />\n      )}\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        {state.dateFormat === \"Monthly\" && (\n          <DatePicker\n            sx={{\n              width: \"100%\",\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            slotProps={{\n              textField: {\n                size: \"small\",\n                name: \"\",\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              },\n            }}\n            label={\"Date\"}\n            views={[\"month\", \"year\"]}\n            value={state.dateFrom}\n            onChange={(value) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"dateFrom\",\n                value: value,\n              });\n              state.dateFrom = value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n          />\n        )}\n        {state.dateFormat === \"Yearly\" && (\n          <React.Fragment>\n            <DatePicker\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              slotProps={{\n                textField: {\n                  size: \"small\",\n                  name: \"\",\n                  inputRef: dateFromRef,\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                },\n              }}\n              label={\"Date\"}\n              views={[\"year\"]}\n              value={state.dateFrom}\n              onChange={(value) => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"dateFrom\",\n                  value: value,\n                });\n                state.dateFrom = value;\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"title\",\n                  value: setupTitle(state, user?.department as string),\n                });\n              }}\n            />\n            <TextField\n              type=\"number\"\n              label=\"Year Count\"\n              name=\"yearCount\"\n              value={state.yearCount}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"12px\" },\n              }}\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </React.Fragment>\n        )}\n      </LocalizationProvider>\n    </React.Fragment>\n  );\n}\nfunction Setting({ state, dispatch }: { state: any; dispatch: any }) {\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const clientSearchInput = useRef<HTMLInputElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const { data: dataAccounts, isLoading: isLoadingAccounts } = useQuery({\n    queryKey: \"chart-account\",\n    queryFn: async () =>\n      await myAxios.get(\"/reports/accounting/schedule-accounts\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const { data: dataSubAccounts, isLoading: isLoadingSubAccounts } = useQuery({\n    queryKey: \"sub-accounts\",\n    queryFn: async () =>\n      await myAxios.get(\"/reports/accounting/get-sub-account-acronym\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"client-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"subsi_options\",\n        value: selectedRowData[0].IDNo,\n      });\n      closeCliendIDsModal();\n    },\n    searchRef: clientSearchInput,\n  });\n  const {\n    ModalComponent: modalChartAccount,\n    openModal: openChartAccountModal,\n    isLoading: isLoadingChartAccountModal,\n    closeModal: closeChartAccountModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reports/accounting/chart-schedule-account\",\n      queryUrlName: \"account_search\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Tittle\", flex: 1 },\n      {\n        field: \"Short\",\n        headerName: \"Short Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"chart-account-ids\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"account\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"account_title\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      state.account = selectedRowData[0].Acct_Code;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n      state.account_title = selectedRowData[0].Acct_Title;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n\n      closeChartAccountModal();\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"policy\" && value !== \"TPL\") {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"mortgagee\", value: \"\" });\n    }\n    if (name === \"mortgagee\" && value !== \"\") {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"account\", value: \"\" });\n    }\n\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"title\",\n      value: setupTitle(\n        { ...state, [name]: value },\n        user?.department as string\n      ),\n    });\n\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"50px 20px\",\n      }}\n    >\n      <TextField\n        label=\"Title\"\n        fullWidth\n        name=\"title\"\n        value={state.title}\n        onChange={handleInputChange}\n        rows={6}\n        multiline\n        InputProps={{\n          style: { height: \"140px\", fontSize: \"12px\" },\n        }}\n        sx={{\n          flex: 1,\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n        }}\n      />\n      <Box\n        sx={(theme) => ({\n          height: \"100%\",\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2,1fr)\",\n          gap: \"10px\",\n          margin: \"10px 0\",\n          [theme.breakpoints.down(\"sm\")]: {\n            gridTemplateColumns: \"repeat(1,1fr)\",\n          },\n        })}\n      >\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"report\">Report</InputLabel>\n          <Select\n            labelId=\"report\"\n            value={state.format}\n            label=\"Report\"\n            name=\"format\"\n            onChange={(e) => {\n              handleInputChange(e);\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"account\",\n                value: \"\",\n              });\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"account_title\",\n                value: \"\",\n              });\n            }}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={0}>All Accounts</MenuItem>\n            <MenuItem value={1}>GL Account (Detailed)</MenuItem>\n          </Select>\n        </FormControl>\n        {isLoadingChartAccountModal ? (\n          <LoadingButton loading={isLoadingChartAccountModal} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"100%\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={state.format === 0}\n          >\n            <InputLabel htmlFor=\"account_id\">Account</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              name=\"account\"\n              value={state.account}\n              onChange={handleInputChange}\n              id=\"account_id\"\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return openChartAccountModal(state.account);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    disabled={state.format === 0}\n                    onClick={() => {\n                      openChartAccountModal(state.account);\n                    }}\n                    edge=\"end\"\n                    color=\"secondary\"\n                  >\n                    <PersonSearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Account\"\n            />\n          </FormControl>\n        )}\n        <TextField\n          fullWidth\n          name=\"account_title\"\n          value={state.account_title}\n          onChange={handleInputChange}\n          InputProps={{\n            readOnly: true,\n            style: { height: \"27px\" },\n          }}\n          sx={{\n            gridColumn: \"1 / span 2\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"subsi_id\">Subsidiary</InputLabel>\n          <Select\n            labelId=\"subsi_id\"\n            value={state.subsi}\n            label=\"Subsidiary\"\n            name=\"subsi\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={0}>Sub Acct</MenuItem>\n            <MenuItem value={1}>I.D No.</MenuItem>\n            <MenuItem value={2}>Insurance</MenuItem>\n          </Select>\n        </FormControl>\n        {state.subsi === 0 && (\n          <React.Fragment>\n            {isLoadingSubAccounts ? (\n              <LoadingButton loading={isLoadingSubAccounts} />\n            ) : (\n              <FormControl\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"sub_account_id\">Sub Account</InputLabel>\n                <Select\n                  labelId=\"sub_account_id\"\n                  value={state.subsi_options}\n                  label=\"Sub Account\"\n                  name=\"subsi_options\"\n                  onChange={handleInputChange}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  <MenuItem value={\"All\"}>All</MenuItem>\n                  {dataSubAccounts?.data.sub_account.map(\n                    (itm: any, idx: number) => {\n                      return (\n                        <MenuItem key={idx} value={itm.Acronym}>\n                          {itm.Acronym}\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n        {state.subsi === 1 && (\n          <React.Fragment>\n            {isLoadingClientIdsModal ? (\n              <LoadingButton loading={isLoadingClientIdsModal} />\n            ) : (\n              <FormControl\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                <InputLabel htmlFor=\"clients_id\">Clients</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  label=\"Clients\"\n                  name=\"subsi_options\"\n                  value={state.subsi_options}\n                  onChange={handleInputChange}\n                  id=\"clients_id\"\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      return openCliendIDsModal(state.subsi_options);\n                    }\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        onClick={() => {\n                          openCliendIDsModal(state.subsi_options);\n                        }}\n                        edge=\"end\"\n                        color=\"secondary\"\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n        {state.subsi === 2 && (\n          <React.Fragment>\n            {isLoadingAccounts ? (\n              <LoadingButton loading={isLoadingAccounts} />\n            ) : (\n              <FormControl\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"insurance_id\">Insurance</InputLabel>\n                <Select\n                  labelId=\"insurance_id\"\n                  value={state.subsi_options}\n                  label=\"Insurance\"\n                  name=\"subsi_options\"\n                  onChange={handleInputChange}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  <MenuItem value={\"All\"}>All</MenuItem>\n                  {dataAccounts?.data.accounts.map((itm: any, idx: number) => {\n                    return (\n                      <MenuItem key={idx} value={itm.AccountCode}>\n                        {itm.AccountCode}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"dateFormat_id\">Date Format</InputLabel>\n          <Select\n            id=\"dateFormat_id\"\n            label=\"Date Format\"\n            value={state.dateFormat}\n            name=\"dateFormat\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={\"Daily\"}>Daily</MenuItem>\n            <MenuItem value={\"Monthly\"}>Monthly</MenuItem>\n            <MenuItem value={\"Yearly\"}>Yearly</MenuItem>\n            <MenuItem value={\"Custom\"}>Custom</MenuItem>\n          </Select>\n        </FormControl>\n        <ShowDateSelection\n          dispatch={dispatch}\n          state={state}\n          handleInputChange={handleInputChange}\n        />\n      </Box>\n      <Box\n        sx={{\n          height: \"100%\",\n          flex: 1,\n          alignItems: \"center\",\n          padding: \"20px 10px\",\n          border: \"1px solid #94a3b8\",\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            columnGap: \"10px\",\n            alignItems: \"center\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"sort\">Sort</InputLabel>\n            <Select\n              labelId=\"sort\"\n              value={state.sort}\n              label=\"Sort\"\n              name=\"sort\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={\"Name\"}>Name</MenuItem>\n              <MenuItem value={\"Sub Account/I.D No.\"}>\n                Sub Account/I.D No.\n              </MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"order\">Order</InputLabel>\n            <Select\n              labelId=\"order\"\n              value={state.order}\n              label=\"Sort\"\n              name=\"order\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={\"asc\"}>Ascending</MenuItem>\n              <MenuItem value={\"desc\"}>Descending</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n      {modalChartAccount}\n      {ModalClientIDs}\n    </div>\n  );\n}\nexport default function ScheduleAccount() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [column, setColumn] = useState(columnRender(initialState.subsi));\n  initialState.title = setupTitle(initialState, user?.department as string);\n  async function fetchTable(setData: any, setLoading: any, state: any) {\n    const updateColumn = columnRender(state.subsi);\n    flushSync(() => {\n      setColumn(updateColumn);\n    });\n    const response = await myAxios.post(\n      \"/reports/accounting/schedule-account-report\",\n      state,\n      {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }\n    );\n    const jsonData = await response.data;\n    arrangeData({\n      data: jsonData.report,\n      column: updateColumn,\n      beforeArrangeData: (itm) => {\n        const columnNumber = updateColumn\n          .filter((itm: any) => itm.type === \"number\")\n          .map((d: any) => d.datakey);\n\n        columnNumber.forEach((datakey: any) => {\n          if (itm.hasOwnProperty(datakey)) {\n            itm[datakey] = formatNumberWithCommas(\n              Math.abs(parseFloat(itm[datakey].toString().replace(/,/g, \"\")))\n            );\n          }\n        });\n        return itm;\n      },\n      adjustMaxHeight: 520,\n    }).then((newData) => {\n      setData(newData);\n      setLoading(false);\n    });\n  }\n  return (\n    <PrintPreview\n      column={column}\n      initialState={initialState}\n      Setting={(state, dispatch) => (\n        <Setting state={state} dispatch={dispatch} />\n      )}\n      onReportSubmit={fetchTable}\n      scaleDefaultValue={100}\n      drawTable={(data, state) => {\n        return data.map((pages: any, pageNumber: number) => {\n          return (\n            <div className=\"page out-page\" key={pageNumber}>\n              <div className=\"header\" style={{ height: \"50px\" }}></div>\n              <div className=\"content\">\n                <table>\n                  <thead>\n                    {state.title.split(\"\\n\").map((t: string, idx: number) => {\n                      return (\n                        <tr key={idx}>\n                          <th\n                            style={{\n                              fontSize: \"14px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            colSpan={column.length}\n                          >\n                            {t}\n                          </th>\n                        </tr>\n                      );\n                    })}\n                    <tr style={{ height: \"40px\" }}></tr>\n                    <tr>\n                      {column.map((itm: any, rowIdx: number) => {\n                        return (\n                          <th\n                            onDoubleClick={(e) =>\n                              copiedByHeaderOnDoubleClick(e, itm.datakey, data)\n                            }\n                            style={{\n                              width: itm.width,\n                              fontSize: \"12px\",\n                              fontWeight: \"bold\",\n                              borderBottom: \"1px solid black\",\n                            }}\n                            key={rowIdx}\n                          >\n                            {itm.header}\n                          </th>\n                        );\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr style={{ height: \"20px\" }}></tr>\n                    {pages.map((rowItem: any, rowIdx: number) => {\n                      if (rowItem.ArrayHeader) {\n                        return (\n                          <tr key={rowIdx}>\n                            <td\n                              className={`editable not-looking page-${pageNumber}  row-${rowIdx}_col-0`}\n                              colSpan={column.length}\n                              style={{\n                                fontWeight: \"bold\",\n                                fontSize: \"11px\",\n                              }}\n                            >\n                              {rowItem.mShort}\n                            </td>\n                          </tr>\n                        );\n                      }\n\n                      return (\n                        <React.Fragment key={rowIdx}>\n                          <tr key={rowIdx}>\n                            {column.map((colItem: any, colIdx: number) => {\n                              if (rowItem.ArrayFooter) {\n                                if (colIdx === 0) {\n                                  return null;\n                                }\n\n                                if (colIdx === 1) {\n                                  return (\n                                    <td\n                                      className={`editable not-looking  page-${pageNumber} row-${rowIdx}_col-${colIdx}`}\n                                      key={colIdx}\n                                      colSpan={2}\n                                      style={{\n                                        borderTop: \"1px dashed #cbd5e1\",\n                                        width: colItem.width,\n                                        fontSize: \"11px\",\n                                        fontWeight: \"bold\",\n                                        textAlign: \"right\",\n                                      }}\n                                    >\n                                      TOTAL:{\" \"}\n                                    </td>\n                                  );\n                                }\n\n                                return (\n                                  <td\n                                    key={colIdx}\n                                    className={`editable not-looking  page-${pageNumber} row-${rowIdx}_col-${colIdx}`}\n                                    style={{\n                                      textAlign: \"right\",\n                                      borderTop: \"1px dashed #cbd5e1\",\n                                      width: colItem.width,\n                                      fontSize: \"11px\",\n                                      fontWeight: \"500\",\n                                    }}\n                                  >\n                                    {rowItem[colItem.datakey]}\n                                  </td>\n                                );\n                              }\n\n                              return (\n                                <td\n                                  onClick={columnSelection}\n                                  className={`editable not-looking  page-${pageNumber} row-${rowIdx}_col-${colIdx}`}\n                                  key={colIdx}\n                                  style={{\n                                    fontSize: \"11px\",\n                                    fontWeight: \"500\",\n                                    paddingLeft:\n                                      colItem.datakey === \"GL_Acct\" ||\n                                      colItem.datakey === \"ID_No\"\n                                        ? \"50px\"\n                                        : \"10px\",\n                                    width: `${colItem.width} !important`,\n                                    textAlign:\n                                      colItem.datakey === \"Balance\"\n                                        ? \"right\"\n                                        : \"left\",\n                                  }}\n                                >\n                                  {rowItem[colItem.datakey]}\n                                </td>\n                              );\n                            })}\n                          </tr>\n                          <tr style={{ height: \"7px\" }}></tr>\n                        </React.Fragment>\n                      );\n                    })}\n                  </tbody>\n                  <tfoot>\n                    {pageNumber === data.length - 1 && (\n                      <React.Fragment>\n                        <tr style={{ height: \"10px\" }}></tr>\n                        <tr>\n                          <td\n                            style={{\n                              fontWeight: \"bold\",\n                              fontSize: \"11px\",\n                            }}\n                          >\n                            No. of Records:{\" \"}\n                            {(data.flat().length - 1).toLocaleString(\"en-US\")}\n                          </td>\n                          <td\n                            style={{\n                              textAlign: \"right\",\n                              fontWeight: \"bold\",\n                              fontSize: \"11px\",\n                            }}\n                          >\n                            TOTAL:{\" \"}\n                          </td>\n                          {column.map((itm: any, idx: number) => {\n                            if (!itm.total) {\n                              if (idx < 3) {\n                                return (\n                                  <React.Fragment key={idx}></React.Fragment>\n                                );\n                              }\n                              return <td key={idx}></td>;\n                            }\n                            let flattenedArray = data.flat();\n\n                            const filter = flattenedArray.filter((d: any) => {\n                              // if (\n                              //   !isNaN(parseFloat(d.Balance)) &&\n                              //   d.ArrayFooter\n                              // ) {\n                              //   return d.Balance;\n                              // }\n                              return (\n                                !isNaN(parseFloat(d.Balance)) && d.ArrayFooter\n                              );\n                            });\n\n                            const total = filter.reduce((d: any, val: any) => {\n                              return (\n                                d +\n                                parseFloat(\n                                  val.Balance.toString().replace(/,/g, \"\")\n                                )\n                              );\n                            }, 0);\n\n                            return (\n                              <td\n                                key={idx}\n                                style={{\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                  fontSize: \"11px\",\n                                }}\n                              >\n                                {isNaN(total)\n                                  ? \"0\"\n                                  : formatNumberWithCommas(total)}\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      </React.Fragment>\n                    )}\n                  </tfoot>\n                </table>\n              </div>\n              <div\n                className=\"footer\"\n                style={{\n                  height: \"50px\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  {format(new Date(), \"dd/MM/yyyy\")}\n                </p>\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  Page {pageNumber + 1} of {data.length}\n                </p>\n              </div>\n            </div>\n          );\n        });\n      }}\n      pageHeight={\"14in\"}\n      pageWidth={\"8.5in\"}\n    />\n  );\n}\nfunction setupTitle(state: any, department: string) {\n  return `${\n    department === \"UMIS\"\n      ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n      : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n  }\\nSchedule of ${\n    state.format === 0\n      ? \"Accounts \"\n      : `${state.account_title} (${state.account}) `\n  }\\nCut off Date: ${DateToStringFormat(state)}\n`;\n}\n\nfunction DateToStringFormat(state: any) {\n  let dateString = \"\";\n  if (state.dateFormat === \"Daily\") {\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  } else if (state.dateFormat === \"Monthly\") {\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n    });\n  } else if (state.dateFormat === \"Yearly\") {\n    const year = new Date(state.dateFrom).getFullYear();\n    const { startYearFormatted, endYearFormatted } = formatYearRange(\n      year,\n      parseInt(state.yearCount)\n    );\n    dateString = `${startYearFormatted}-${endYearFormatted}`;\n  } else {\n    const dateFrom = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n    const dateTo = state.dateTo.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n    dateString = `${dateFrom} to ${dateTo}`;\n  }\n  return dateString;\n}\n\nfunction formatYearRange(startYear: number, yearCount: number) {\n  const startDate = new Date(startYear, 0, 1); // Month is 0-based, so 0 is January\n  const endDate = new Date(startYear + yearCount, 11, 31); // Last day of the last year\n\n  const startYearFormatted = startDate.getFullYear();\n  const endYearFormatted = endDate.getFullYear();\n\n  if (endYearFormatted < startYearFormatted) {\n    return {\n      startYearFormatted: endYearFormatted,\n      endYearFormatted: startYearFormatted,\n    };\n  } else {\n    return {\n      startYearFormatted,\n      endYearFormatted,\n    };\n  }\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","ref","slotProps","size","sx","minWidth","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","marginBottom","InputProps","e","_searchRef$current","code","preventDefault","current","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","defaultArrangeDataCore","column","beforeArrangeData","adjustMaxHeight","_ref$fontSize","_ref$summaryHeight","summaryHeight","newData","trHeight","temp","maxHeight","getBoundingClientRect","itm","contentElment","tempTable","createElement","tempRow","insertRow","summaryReport","col","tempCell","insertCell","visibility","content","columnWidth","textContent","appendChild","getTableCellHeight","datakey","removeChild","push","arrangeData","_x","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","cb","_ref2$fontSize","wrap","_context","prev","next","undefined","abrupt","stop","apply","arguments","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","format","account","account_title","dateFormat","dateFrom","Date","dateTo","yearCount","getFullYear","toString","slice","subsi","subsi_options","sort","order","subAcctColumn","header","total","type","idColumn","insuranceColumn","columnRender","ShowDateSelection","state","dispatch","handleInputChange","user","dateFromRef","useRef","dateToRef","React","field","setupTitle","department","timeout","setTimeout","_dateFromRef$current","_dateFromRef$current$","click","clearTimeout","InputLabelProps","_dateToRef$current","_dateToRef$current$qu","_dateFromRef$current2","_dateFromRef$current3","views","Setting","_queryFn","_queryFn2","chartAccountSearchInput","clientSearchInput","AuthContext","myAxios","_useQuery","useQuery","queryFn","get","headers","Authorization","accessToken","sent","dataAccounts","isLoadingAccounts","_useQuery2","_callee2","_context2","dataSubAccounts","isLoadingSubAccounts","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","IDNo","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountModal","modalChartAccount","openChartAccountModal","isLoadingChartAccountModal","_e$target","target","_defineProperty","multiline","theme","gridTemplateColumns","gap","margin","breakpoints","down","FormControl","zIndex","InputLabel","Select","labelId","MenuItem","LoadingButton","disabled","htmlFor","OutlinedInput","endAdornment","InputAdornment","edge","PersonSearchIcon","readOnly","gridColumn","sub_account","map","Acronym","accounts","AccountCode","border","rowGap","ScheduleAccount","_fetchTable","_useContext2","setColumn","PrintPreview","_Setting","onReportSubmit","_x2","_x3","_callee3","setData","setLoading","updateColumn","response","jsonData","_context3","flushSync","post","report","columnNumber","d","hasOwnProperty","formatNumberWithCommas","abs","parseFloat","replace","then","scaleDefaultValue","drawTable","pages","pageNumber","split","t","textAlign","colSpan","rowIdx","onDoubleClick","copiedByHeaderOnDoubleClick","borderBottom","rowItem","ArrayHeader","mShort","colItem","colIdx","ArrayFooter","borderTop","columnSelection","paddingLeft","flat","toLocaleString","isNaN","Balance","reduce","val","pageHeight","pageWidth","dateString","toLocaleDateString","year","month","day","_formatYearRange","startYear","startDate","endDate","startYearFormatted","endYearFormatted","formatYearRange","parseInt","DateToStringFormat","CustomizeAxiosFunc","_CustomizeAxiosFunc","search","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","_useState3","_useState4","customizeAxiostool","_args2","res","refetchOnWindowFocus","refetch","success","alert","message","_searchRef$current2","_searchRef$current3","selectedIDs","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","source","excluded","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}