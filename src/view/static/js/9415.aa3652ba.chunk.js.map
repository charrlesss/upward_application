{"version":3,"file":"static/js/9415.aa3652ba.chunk.js","mappings":"wWAkBMA,EAAU,CACd,CACEC,MAAO,QACPC,MAAO,GAET,CACED,MAAO,SACPC,MAAO,GAET,CACED,MAAO,WACPC,MAAO,IAILC,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,WAAY,OACZC,YAAa,QACbC,SAAU,GACVC,gBAAiB,GACjBC,iBAAkB,GAClBC,yBAA0B,GAC1BC,QAAS,IAGLC,EAAU,SAACC,EAAYC,GAC3B,MACO,iBADCA,EAAOC,MAEXC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKH,GAAK,IAAAI,EAAAA,EAAAA,GAAA,GACPH,EAAOI,MAAQJ,EAAOK,QAGlBN,CAEb,EAEe,SAASO,IAAwB,IAADC,EAC7CC,GAAyCC,EAAAA,EAAAA,GAAqB,EAC5DC,EAAAA,EAAAA,KAACC,EAAI,KACLD,EAAAA,EAAAA,KAAA,OAAAE,SAAK,OACLF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,QAHCC,EAAgBL,EAAhBK,iBAAkBC,EAAIN,EAAJM,KAAMC,EAAIP,EAAJO,KAKhCC,GAAmCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtCC,EAAOH,EAAPG,QAASC,EAAOJ,EAAPI,QAASC,EAAIL,EAAJK,KAC1BC,GAAoDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5DI,EAAkBF,EAAA,GAAEG,EAAqBH,EAAA,GAC1CI,GAAWC,EAAAA,EAAAA,MAEjBC,GAAoBC,EAAAA,EAAAA,UAAS,CAC3BC,SAAU,SACVC,QAAQ,WAAD,OAAA1B,EAAAA,IAAA2B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,UACPC,EAAAA,EAAAA,GAAK,MAAMC,MAAIV,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAS,IAAA,OAAAV,EAAAA,EAAAA,KAAAG,MAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAL,KAAA,GAAkBM,EAAAA,EAAAA,GAAO3B,EAASC,GAAK,cAAAyB,EAAAJ,OAAA,SAAAI,EAAAE,MAAA,wBAAAF,EAAAG,OAAA,GAAAJ,EAAA,OAAC,wBAAAN,EAAAU,OAAA,GAAAZ,EAAA,MAAAa,MAAA,KAAAC,UAAA,EAC1DC,SAAS,EACTC,sBAAsB,EACtBC,UAAW,SAACC,GACV5B,GAAsB,GAClB4B,EAAIC,KAAKC,SACXC,IAAAA,KAAU,CACRC,SAAU,SACVC,KAAM,UACN5E,MAAOuE,EAAIC,KAAKK,QAChBC,mBAAmB,EACnBC,MAAO,MACNnB,MAAK,WACNzB,EAAQ,MACRS,EAAS,IACX,GAEJ,IApBMoC,EAAOlC,EAAPkC,QAuBR,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAMtD,SAAA,EACpBqD,EAAAA,EAAAA,MAAA,UAAQC,UAAU,SAAQtD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OACEyD,MAAO,CACLC,MAAO,cACPC,OAAQ,cACRC,WAAY,cACZC,QAAS,OACTC,WAAY,UACZ5D,UAEFF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBAENF,EAAAA,EAAAA,KAAC+D,EAAY,CACXC,QAAS,WACP/C,GAAsB,GACtBqC,GACF,EACAG,MAAO,CACLR,SAAU,WACVgB,SAAU,SACVC,UAAW,iBACXC,OAAQ,UACRC,OAAQ,OACRC,QAAS,IACTC,OAAQ,IACRV,WAAY,eACZ1D,UAEFqD,EAAAA,EAAAA,MAAA,OACEgB,MAAM,6BACNb,MAAM,OACNC,OAAO,OACPa,QAAQ,YACRC,KAAK,OAAMvE,SAAA,EAEXF,EAAAA,EAAAA,KAAA,QACE0E,EAAE,2CACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEjB/E,EAAAA,EAAAA,KAAA,QACE0E,EAAE,yBACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,WAEjB/E,EAAAA,EAAAA,KAAA,QACE0E,EAAE,yEACFC,OAAO,QACPC,YAAY,MACZC,iBAAiB,KACjBC,cAAc,QACdC,eAAe,mBAKvB/E,EAAAA,EAAAA,KAAA,WAASyD,MAAO,CAAEI,QAAS,OAAQS,OAAQ,UAAWpE,SACnD7B,EAAQ2G,KAAI,SAACC,EAAMC,GAClB,OACElF,EAAAA,EAAAA,KAAC+D,EAAY,CAEXN,MAAO,CACLW,OAAQ,OACRe,QAAS,OACTC,gBAAiB,yBACjBC,YAAa,IACbC,MACEnF,IAAqB+E,EACjB,QACA,6BACNf,OAAQ,UACRN,QAAS,eACT0B,WAAW,yEACXC,SAAU,OACVC,WAAY,MACZC,WAAY,OACZC,UAAW,OACXrB,OAAQ,IACRD,QAAS,WACTuB,UAAW,SACXC,WAAY,YACZC,cAAe,WACfC,WAAY,SACZC,WAAY,OACZC,YAAa,eACbhD,SAAU,WACVgB,SAAU,UAEZD,QAAS,kBAAM3D,EAAK6E,EAAI,EAAChF,SAExB+E,EAAK3G,OA9BD4G,EAiCX,OAEFlF,EAAAA,EAAAA,KAAA,WAASwD,UAAU,UAAStD,SAAEE,IAC7BY,IACChB,EAAAA,EAAAA,KAAA,OACEyD,MAAO,CACLR,SAAU,QACViD,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRzC,WAAY,yBACZE,WAAY,SACZwC,eAAgB,SAChBC,OAAQ,MACR1C,QAAS,QACT3D,UAEFF,EAAAA,EAAAA,KAACwG,EAAAA,EAAgB,QAK3B,CAEA,IAAMC,EAAU,CACd,CAAEC,QAAS,OAAQC,OAAQ,OAAQjD,MAAO,SAC1C,CAAEgD,QAAS,WAAYC,OAAQ,WAAYjD,MAAO,SAClD,CAAEgD,QAAS,QAASC,OAAQ,QAASjD,MAAO,SAC5C,CAAEgD,QAAS,iBAAkBC,OAAQ,gBAAiBjD,MAAO,SAC7D,CAAEgD,QAAS,cAAeC,OAAQ,eAAgBjD,MAAO,SACzD,CAAEgD,QAAS,aAAcC,OAAQ,aAAcjD,MAAO,SACtD,CAAEgD,QAAS,aAAcC,OAAQ,UAAWjD,MAAO,UAErD,SAASzD,IAAQ,IAAD2G,EAAAC,EACdC,GAA0BvG,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BE,EAAOoG,EAAPpG,QAASC,EAAImG,EAAJnG,KACjBoG,GAA0BC,EAAAA,EAAAA,YAAW5H,EAASZ,GAAayI,GAAAlG,EAAAA,EAAAA,GAAAgG,EAAA,GAApD1H,EAAK4H,EAAA,GAAEC,EAAQD,EAAA,GAChBE,GAAYC,EAAAA,EAAAA,QAAyB,MAC3CC,GAAwCxG,EAAAA,EAAAA,WAAS,GAAMyG,GAAAvG,EAAAA,EAAAA,GAAAsG,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0C5G,EAAAA,EAAAA,UAAS,IAAG6G,GAAA3G,EAAAA,EAAAA,GAAA0G,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAgChH,EAAAA,EAAAA,WAAS,GAAMiH,GAAA/G,EAAAA,EAAAA,GAAA8G,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA0BpH,EAAAA,EAAAA,WAAS,GAAMqH,GAAAnH,EAAAA,EAAAA,GAAAkH,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BxH,EAAAA,EAAAA,UAAS,IAAGyH,GAAAvH,EAAAA,EAAAA,GAAAsH,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,IAC1BG,EAAAA,EAAAA,YAAU,WAAO,IAADC,GAAA,YACUA,EAAAA,IAAAlH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAAiH,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAtH,EAAAA,EAAAA,KAAAG,MAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,OACiD,MAAnC,oCAAmCiH,EAAAjH,KAAA,EAExBkH,MAFX,qCAEsB,KAAD,EAAnB,OAARL,EAAQI,EAAA1G,KAAA0G,EAAAjH,KAAA,EACO6G,EAASM,cAAc,KAAD,EAArCL,EAAMG,EAAA1G,KACNwG,EAAO,IAAIK,KAAK,CAACN,GAAS,YAAa,CAAEtJ,KAAM,gBAE/CwJ,EAAc,IAAIK,YACjBC,UAAY,WACjBzB,EAAiBmB,EAAOO,OAC1B,EACAP,EAAOQ,cAAcT,GAAM,yBAAAE,EAAAzG,OAAA,GAAAoG,EAAA,MAC5BnG,MAAA,KAAAC,UAAA,CACD+G,EACF,GAAG,IAEH,IAAAC,GAA+DC,EAAAA,EAAAA,aAAY,CACzEC,YAAa,WACbC,WAAW,SAADC,GAAA,OAAAjD,EAAAA,IAAApF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAoI,EAAOC,GAAa,OAAAtI,EAAAA,EAAAA,KAAAG,MAAA,SAAAoI,GAAA,cAAAA,EAAAlI,KAAAkI,EAAAjI,MAAA,cAAAiI,EAAAjI,KAAA,EACxBrB,EAAQuJ,KAAK,yBAA0BF,EAAU,CACrDG,QAAS,CACPC,cAAc,UAADC,OAAgB,OAAJzJ,QAAI,IAAJA,OAAI,EAAJA,EAAM0J,gBAEjC,cAAAL,EAAAhI,OAAA,SAAAgI,EAAA1H,MAAA,wBAAA0H,EAAAzH,OAAA,GAAAuH,EAAA,MAAAtH,MAAA,KAAAC,UAAA,EACJG,UAAW,SAACC,GACV,IAAM+F,EAAW/F,EACjB,OAAI+F,EAAS9F,KAAKC,QACTC,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAOsK,EAAS9F,KAAKK,QACrBE,MAAO,OAGJL,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAOsK,EAAS9F,KAAKK,QACrBE,MAAO,MAEX,IAxBciH,EAAab,EAArBc,OAAkCC,EAAgBf,EAA3BgB,UA0B/BC,GAAqCrJ,EAAAA,EAAAA,UAAS,CAC5CC,SAAU,WACVC,QAAQ,WAAD,OAAAsF,EAAAA,IAAArF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAiJ,IAAA,OAAAlJ,EAAAA,EAAAA,KAAAG,MAAA,SAAAgJ,GAAA,cAAAA,EAAA9I,KAAA8I,EAAA7I,MAAA,cAAA6I,EAAA7I,KAAA,EACDrB,EAAQmK,IAAI,yBAA0B,CAC1CX,QAAS,CACPC,cAAc,UAADC,OAAgB,OAAJzJ,QAAI,IAAJA,OAAI,EAAJA,EAAM0J,gBAEjC,cAAAO,EAAA5I,OAAA,SAAA4I,EAAAtI,MAAA,wBAAAsI,EAAArI,OAAA,GAAAoI,EAAA,MAAAnI,MAAA,KAAAC,UAAA,EACJE,sBAAsB,EACtBC,UAAW,SAACC,GAAS,IAADiI,EAElBtC,EAAwB,QAAdsC,EADOjI,EACGC,YAAI,IAAAgI,OAAA,EAAbA,EAAeC,MAC5B,IAZiBC,EAAaN,EAAxBD,UAkDFQ,EAAoB,SAACC,GACzB,IAAAC,EAAwBD,EAAEE,OAAlB3M,EAAI0M,EAAJ1M,KAAMkB,EAAKwL,EAALxL,MACduH,EAAS,CAAE3H,KAAM,eAAgBG,MAAOjB,EAAMkB,MAAAA,GAChD,EAEA,OACE4D,EAAAA,EAAAA,MAAC8H,EAAAA,SAAc,CAAAnL,SAAA,EACbqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOtD,SAAA,EACpBF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,eAActD,UAC3BF,EAAAA,EAAAA,KAAC+D,EAAY,CACXN,MAAO,CACLR,SAAU,WAEVgB,SAAU,SACVI,QAAS,OACTiH,aAAc,MACd9F,SAAU,QAEZxB,QAAS,WACPwD,GAAgB,EAClB,EAAEtH,SACH,gBAIHF,EAAAA,EAAAA,KAACuL,EAAW,CACVC,KAAMjD,EACN9B,QAASA,EACTgF,aAAcT,EACdU,kBAAmB,SAACR,EAAGS,GACrBC,QAAQC,IAAIF,EACd,IAEDnB,IACCxK,EAAAA,EAAAA,KAAA,OACEyD,MAAO,CACLR,SAAU,QACViD,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRzC,WAAY,yBACZE,WAAY,SACZwC,eAAgB,SAChBC,OAAQ,MACR1C,QAAS,QACT3D,UAEFF,EAAAA,EAAAA,KAACwG,EAAAA,EAAgB,UAIvBjD,EAAAA,EAAAA,MAACuI,EAAK,CAACC,OAAQxE,EAAcyE,QAAS,kBAAMxE,GAAgB,EAAM,EAACtH,SAAA,EACjEF,EAAAA,EAAAA,KAAA,MAAIyD,MAAO,CAAEmC,UAAW,SAAUqG,aAAc,QAAS/L,SAAC,kBAG1DqD,EAAAA,EAAAA,MAAA,QAAArD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACEyD,MAAO,CACLwI,aAAc,OACdpI,QAAS,OACTyC,eAAgB,UAChBpG,UAEFqD,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLE,OAAQ,QACRD,MAAO,QACP4H,aAAc,MACdnH,OAAQ,UACRlB,SAAU,WACVgB,SAAU,SACVkB,QAAS4C,EAAW,oBAAsB,OAC1ClC,WAAY,YACZjC,WAAY,SAEdI,QAAS,WAAO,IAADkI,EACI,QAAjBA,EAAA/E,EAAUgF,eAAO,IAAAD,GAAjBA,EAAmBE,OACrB,EACAC,OAlGO,SAACC,GAClBA,EAAMC,iBACNvE,GAAY,GACZ,IAAMc,EAAOwD,EAAME,aAAaC,MAAM,GACtC,GAAI3D,EAAM,CACR,IAAMC,EAAc,IAAIK,WACxBL,EAAOM,UAAY,WACjBzB,EAAiBmB,EAAOO,OAC1B,EACAP,EAAOQ,cAAcT,EACvB,CACF,EAwFY4D,WAvFW,SAACJ,GACtBA,EAAMC,iBACNvE,GAAY,EACd,EAqFY2E,YApFY,WACtB3E,GAAY,EACd,EAmFY4E,aAAc,kBAAMxE,GAAS,EAAK,EAClCyE,aAAc,kBAAMzE,GAAS,EAAM,EAAClI,SAAA,EAEpCF,EAAAA,EAAAA,KAAA,OACEyD,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,WAAY,cACZX,SAAU,WACViD,IAAK6B,EAAW,MAAQ,OACxB5B,KAAM,MACNjC,UAAW,uBACXL,QAAS,OACTC,WAAY,SACZwC,eAAgB,SAChBT,WAAY,YACZiH,cAAe,QACf5M,UAEFqD,EAAAA,EAAAA,MAAA,OACEgB,MAAM,6BACNb,MAAM,OACNC,OAAO,OACPa,QAAQ,YACRC,KAAK,OAAMvE,SAAA,EAEXF,EAAAA,EAAAA,KAAA,QACE+M,SAAS,UACTC,SAAS,UACTtI,EAAE,sVACFD,KAAK,aAEPzE,EAAAA,EAAAA,KAAA,QACE+M,SAAS,UACTC,SAAS,UACTtI,EAAE,m8BACFD,KAAK,kBAIXzE,EAAAA,EAAAA,KAAA,OACEyD,MAAO,CACLC,MAAO,OACPC,OAAQ,QACRC,WAAY,yBACZX,SAAU,WACViD,IAAK6B,EAAW,OAASI,EAAQ,MAAQ,OACzChC,KAAM,MACNjC,UAAW,uBACXL,QAAS,OACTC,WAAY,SACZwC,eAAgB,SAChBT,WAAY,YACZiH,cAAe,QACf5M,UAEFqD,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRiC,UAAW,UACX1F,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OACEuE,MAAM,6BACNb,MAAM,OACNC,OAAO,OACPa,QAAQ,YACRC,KAAK,OAAMvE,UAEXF,EAAAA,EAAAA,KAAA,QACE0E,EAAE,6fACFC,OAAO,UACPC,YAAY,IACZE,cAAc,QACdC,eAAe,aAGnB/E,EAAAA,EAAAA,KAAA,KACEyD,MAAO,CACL+B,SAAU,OACVnB,QAAS,IACTC,OAAQ,IACRgB,MAAO,WACPpF,SACH,qBAGDF,EAAAA,EAAAA,KAAA,KACEyD,MAAO,CACL+B,SAAU,OACVnB,QAAS,IACTC,OAAQ,IACRgB,MAAO,WACPpF,SACH,iCAKLF,EAAAA,EAAAA,KAAA,OACEyD,MAAO,CACLE,OAAQ,OACRD,MAAO,OACPE,WAAY,QACZ0H,aAAc,MACdwB,cAAe,QAEjBG,IAAI,GACJC,IAAKvF,KAEP3H,EAAAA,EAAAA,KAAA,SACEmN,OAAO,UACP5N,KAAK,OACLkE,MAAO,CAAEI,QAAS,QAClBuJ,IAAKjG,EACLkG,SA1OY,SAACf,GACzB,IAAMxD,EAAOwD,EAAMlB,OAAOqB,MAAM,GAChC,GAAI3D,EAAM,CACR,IAAMC,EAAc,IAAIK,WACxBL,EAAOM,UAAY,WACjBzB,EAAiBmB,EAAOO,QACxBjK,EAAMF,QAAQmO,KAAK,CACjBC,SAAUzE,EAAKrK,KACf+O,YAAazE,EAAOO,OACpBmE,SAAU3E,EAAKvJ,KACfuJ,KAAAA,EACApC,QAAS,WAEb,EACAqC,EAAOQ,cAAcT,EACvB,CACF,UA8NQvF,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACT6J,oBAAqB,gBACrBC,UAAW,QACXC,OAAQ,QACR1N,SAAA,EAEFqD,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,UACZ5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,OACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,YAGDF,EAAAA,EAAAA,KAAA,SACET,KAAK,OACLwO,GAAG,OACHtP,KAAK,OACL4O,SAAUpC,EACVtL,MAAON,EAAMZ,KACbgF,MAAO,CACLuK,KAAM,EACNpK,WAAY,cACZqK,WAAY,OACZC,YAAa,OACbC,UAAW,OACXhJ,QAAS,OACTG,MAAO,QACP8I,aAAc,kBACd/J,QAAS,QACTgK,cAAe,mBAIrB9K,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,UACZ5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,QACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,aAGDF,EAAAA,EAAAA,KAAA,SACEqN,SAAUpC,EACVtL,MAAON,EAAMX,MACba,KAAK,OACLwO,GAAG,QACHtP,KAAK,QACLgF,MAAO,CACLuK,KAAM,EACNpK,WAAY,cACZqK,WAAY,OACZC,YAAa,OACbC,UAAW,OACXhJ,QAAS,OACTG,MAAO,QACP8I,aAAc,kBACd/J,QAAS,eAIfd,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,UACZ5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,UACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,eAGDF,EAAAA,EAAAA,KAAA,SACEqN,SAAUpC,EACVtL,MAAON,EAAMV,QACbY,KAAK,OACLwO,GAAG,UACHtP,KAAK,UACLgF,MAAO,CACLuK,KAAM,EACNpK,WAAY,cACZqK,WAAY,OACZC,YAAa,OACbC,UAAW,OACXhJ,QAAS,OACTG,MAAO,QACP8I,aAAc,kBACd/J,QAAS,eAIfd,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,UACZ5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,WACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,gBAGDF,EAAAA,EAAAA,KAAA,SACEqN,SAAUpC,EACVtL,MAAON,EAAMT,SACb0P,aAAa,MACb/O,KAAK,OACLwO,GAAG,WACHtP,KAAK,WACLgF,MAAO,CACLuK,KAAM,EACNpK,WAAY,cACZqK,WAAY,OACZC,YAAa,OACbC,UAAW,OACXhJ,QAAS,OACTG,MAAO,QACP8I,aAAc,kBACd/J,QAAS,eAIfd,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,UACZ5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,aACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,gBAGDqD,EAAAA,EAAAA,MAAA,UACE8J,SAAUpC,EACVtL,MAAON,EAAMR,WACbJ,KAAK,aACLsP,GAAG,aACHtK,MAAO,CACLW,OAAQ,OACRe,QAAS,OACT6I,KAAM,IACNpK,WAAY,cACZ0B,MAAO,QACP8I,aAAc,mBACdlO,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,OAAQ8D,MAAO,CAAE6B,MAAO,SAAUpF,SAAC,UAGlDF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,QAAS8D,MAAO,CAAE6B,MAAO,SAAUpF,SAAC,iBAKvDqD,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,UACZ5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,cACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,kBAGDqD,EAAAA,EAAAA,MAAA,UACE8J,SAAUpC,EACVtL,MAAON,EAAMP,YACbL,KAAK,cACLsP,GAAG,cACHtK,MAAO,CACLW,OAAQ,OACRe,QAAS,OACT6I,KAAM,IACNpK,WAAY,cACZ0B,MAAO,QACP8I,aAAc,mBACdlO,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,QAAS8D,MAAO,CAAE6B,MAAO,SAAUpF,SAAC,WAGnDF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,aAAc8D,MAAO,CAAE6B,MAAO,SAAUpF,SAAC,gBAGxDF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,aAAc8D,MAAO,CAAE6B,MAAO,SAAUpF,SAAC,gBAGxDF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,SAAU8D,MAAO,CAAE6B,MAAO,SAAUpF,SAAC,YAGpDF,EAAAA,EAAAA,KAAA,UACEL,MAAO,wBACP8D,MAAO,CAAE6B,MAAO,SAAUpF,SAC3B,oCAYPqD,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACT6J,oBAAqB,gBACrBC,UAAW,QACXC,OAAQ,OACRW,UAAW,SACXrO,SAAA,EAEFqD,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,SACZ0K,WAAY,YACZtO,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,WACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,gBAGDF,EAAAA,EAAAA,KAAA,SACEqN,SAAUpC,EACVtL,MAAON,EAAMN,SACbQ,KAAK,WACLwO,GAAG,WACHtP,KAAK,WACL6P,aAAa,MACb7K,MAAO,CACLuK,KAAM,EACNpK,WAAY,cACZqK,WAAY,OACZC,YAAa,OACbC,UAAW,OACXhJ,QAAS,OACTG,MAAO,QACP8I,aAAc,kBACd/J,QAAS,eAIfd,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,UACZ5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,kBACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,uBAGDF,EAAAA,EAAAA,KAAA,SACEqN,SAAUpC,EACVtL,MAAON,EAAML,gBACbO,KAAK,WACLwO,GAAG,kBACHtP,KAAK,kBACLgF,MAAO,CACLuK,KAAM,EACNpK,WAAY,cACZqK,WAAY,OACZC,YAAa,OACbC,UAAW,OACXhJ,QAAS,OACTG,MAAO,QACP8I,aAAc,kBACd/J,QAAS,eAIfd,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,SACZ0K,WAAY,YACZtO,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,mBACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,yBAGDF,EAAAA,EAAAA,KAAA,SACEqN,SAAUpC,EACVtL,MAAON,EAAMJ,iBACbM,KAAK,WACLwO,GAAG,mBACHtP,KAAK,mBACL6P,aAAa,MACb7K,MAAO,CACLuK,KAAM,EACNpK,WAAY,cACZqK,WAAY,OACZC,YAAa,OACbC,UAAW,OACXhJ,QAAS,OACTG,MAAO,QACP8I,aAAc,kBACd/J,QAAS,eAIfd,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACTgK,SAAU,SACV/J,WAAY,UACZ5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,SACE8N,QAAQ,2BACRrK,MAAO,CAAE+B,SAAU,OAAQ9B,MAAO,QAAS4B,MAAO,WAAYpF,SAC/D,gCAGDF,EAAAA,EAAAA,KAAA,SACEqN,SAAUpC,EACVtL,MAAON,EAAMH,yBACbK,KAAK,WACLwO,GAAG,2BACHtP,KAAK,2BACLgF,MAAO,CACLuK,KAAM,EACNpK,WAAY,cACZqK,WAAY,OACZC,YAAa,OACbC,UAAW,OACXhJ,QAAS,OACTG,MAAO,QACP8I,aAAc,kBACd/J,QAAS,eAIfrE,EAAAA,EAAAA,KAAA,OACEyD,MAAO,CACLoK,SAAU,SACVW,WAAY,WACZ3K,QAAS,QACT3D,UAEFF,EAAAA,EAAAA,KAAC+D,EAAY,CACXxE,KAAK,SACLkE,MAAO,CACLR,SAAU,WACVgB,SAAU,SACVI,QAAS,OACTiH,aAAc,MACd9F,SAAU,OACV9B,MAAO,QAETM,QAAS,SAACkH,GAER,OADAA,EAAEqB,iBACoB,KAAlB5E,EACK3E,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAO,uBACP+E,MAAO,OAGY,KAAnBhE,EAAMT,SACDoE,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAO,wBACP+E,MAAO,OAGe,KAAtBhE,EAAMP,YACDkE,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAO,4BACP+E,MAAO,OAGc,KAArBhE,EAAMR,WACDmE,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAO,0BACP+E,MAAO,OAGY,KAAnBhE,EAAMN,SACDiE,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAO,wBACP+E,MAAO,OAGoB,KAA3BhE,EAAMJ,iBACD+D,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAO,iCACP+E,MAAO,OAGPhE,EAAMN,WAAaM,EAAML,gBACpBgE,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAO,6BACP+E,MAAO,OAIThE,EAAMJ,mBAAqBI,EAAMH,yBAE1B8D,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACN5E,MAAO,sCACP+E,MAAO,YAIXiH,EAAcjL,EAChB,EAAEa,SACH,wBASf,CAEA,SAAS4L,EAAK2C,GAAsC,IAAnCvO,EAAQuO,EAARvO,SAAU6L,EAAM0C,EAAN1C,OAAQC,EAAOyC,EAAPzC,QACjC,OACEhM,EAAAA,EAAAA,KAAA,OAAKwD,UAAS,SAAA4G,OAAW2B,EAAS,OAAS,SAAW7L,UACpDqD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAetD,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKwD,UAAU,cAAatD,UAC1BF,EAAAA,EAAAA,KAAC+D,EAAY,CACXC,QAASgI,EACTvI,MAAO,CACLR,SAAU,WACVgB,SAAU,SACVE,OAAQ,UACRC,OAAQ,OACRC,QAAS,IACTC,OAAQ,IACRV,WAAY,eACZ1D,UAEFqD,EAAAA,EAAAA,MAAA,OACEgB,MAAM,6BACNb,MAAM,OACNC,OAAO,OACPa,QAAQ,YACRC,KAAK,OAAMvE,SAAA,EAEXF,EAAAA,EAAAA,KAAA,UACE0O,GAAG,KACHC,GAAG,KACHC,EAAE,KACFjK,OAAO,UACPC,YAAY,SAEd5E,EAAAA,EAAAA,KAAA,QACE0E,EAAE,+CACFC,OAAO,UACPC,YAAY,MACZE,cAAc,iBAKrB5E,MAIT,CAEA,SAAS6D,EAAY8K,GAA8B,IAA3B3O,EAAQ2O,EAAR3O,SAAa4O,GAAIC,EAAAA,EAAAA,GAAAF,EAAAG,GAyBvC,OACEhP,EAAAA,EAAAA,KAAA,UAAAR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYsP,GAAI,IAAEtL,UAAU,gBAAgBQ,QAzBzB,SAACsI,GACpB,IAAM2C,EAAS3C,EAAM4C,cAGfC,EAAiBF,EAAOG,cAAc,WACxCD,GACFA,EAAeE,SAGjB,IAAMC,EAAOL,EAAOM,wBACdC,EAAOC,KAAKC,IAAIJ,EAAK5L,MAAO4L,EAAK3L,QACjCgM,EAAIrD,EAAMsD,QAAUN,EAAKnJ,KAAOqJ,EAAO,EACvCK,EAAIvD,EAAMwD,QAAUR,EAAKpJ,IAAMsJ,EAAO,EAEtCO,EAASC,SAASC,cAAc,QACtCF,EAAOtM,MAAMC,MAAQqM,EAAOtM,MAAME,OAAM,GAAAyG,OAAMoF,EAAI,MAClDO,EAAOtM,MAAM0C,KAAI,GAAAiE,OAAMuF,EAAC,MACxBI,EAAOtM,MAAMyC,IAAG,GAAAkE,OAAMyF,EAAC,MACvBE,EAAOG,UAAUC,IAAI,UAErBlB,EAAOmB,YAAYL,GACX,OAAJjB,QAAI,IAAJA,GAAAA,EAAM9K,SAAS8K,EAAK9K,QAAQsI,EAClC,EAGoEpM,SAC/DA,IAGP,CAEA,IAAMmQ,GAAKC,EAAAA,EAAAA,aACT,SAAAC,EAYEnD,GACI,IAXFoD,EAAGD,EAAHC,IACA/J,EAAO8J,EAAP9J,QACAgK,EAAQF,EAARE,SACAC,EAAcH,EAAdG,eACAC,EAAqBJ,EAArBI,sBACAC,EAAqBL,EAArBK,sBACAC,EAAgBN,EAAhBM,iBACAC,EAAgBP,EAAhBO,iBACAC,EAAiBR,EAAjBQ,kBAIF,OACE/Q,EAAAA,EAAAA,KAAA,MACEoN,IAAKA,EACLR,aAAc,kBAAMiE,EAAiBL,EAAI,EACzC3D,aAAc,kBAAMiE,EAAiBN,EAAI,EACzCQ,cAAe,SAAC9F,GACdwF,EAAeF,EAAIS,QACnBN,EAAsBzF,EAAGsF,EAC3B,EACAhN,UAAS,GAAA4G,OAAKqG,EAAW,WAAa,gBACtChN,MAAO,CACLG,WAAYgN,EAAwB,UAAY,IAChD1Q,SAEDuG,EAAQzB,KAAI,SAACkM,EAAahM,GACzB,OACE3B,EAAAA,EAAAA,MAAA,MAAArD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SACEmR,UAAQ,EACRC,aAAcZ,EAAIU,EAAOxK,SACzBjD,MAAO,CAAEC,MAAO,WAElB1D,EAAAA,EAAAA,KAACqR,EAAa,CAACC,cAAeP,MANvB7L,EASb,KAGN,IAGImM,EAAgB,SAAHE,GAAgC,IAA1BD,EAAaC,EAAbD,cACjBE,GAAapK,EAAAA,EAAAA,QAAO,MAM1B,OACEpH,EAAAA,EAAAA,KAAA,OACEwD,UAAU,iBACV4J,IAAKoE,EACLC,YARoB,SAACvG,GACvBoG,EAAcpG,EAAGsG,EAAWrF,QAC9B,GASF,EAEA,SAASZ,EAAWmG,GAahB,IAADC,EAAAC,EAAAC,EAZDrG,EAAIkG,EAAJlG,KACA/E,EAAOiL,EAAPjL,QAAOqL,EAAAJ,EACPhG,kBAAAA,OAAiB,IAAAoG,EAAG,WAAO,EAACA,EAC5BrG,EAAYiG,EAAZjG,aAUAsG,GAAsClR,EAAAA,EAAAA,UAAS,GAAEmR,GAAAjR,EAAAA,EAAAA,GAAAgR,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAsCtR,EAAAA,EAAAA,UAAS,MAAKuR,GAAArR,EAAAA,EAAAA,GAAAoR,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAgD1R,EAAAA,EAAAA,UAAS,GAAE2R,GAAAzR,EAAAA,EAAAA,GAAAwR,EAAA,GAApDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAAwC9R,EAAAA,EAAAA,UAAS,IAAG+R,GAAA7R,EAAAA,EAAAA,GAAA4R,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAoB3L,EAAAA,EAAAA,QAAuB,MAC3C4L,GAAcf,EAAc,GAAKY,EACjCI,EAAezH,EAAK0H,MAAMF,EAAYA,EAAaH,GACnDM,GAAU/L,EAAAA,EAAAA,QAAY,IAC5BgM,GAAwCvS,EAAAA,EAAAA,UACtC4F,EAAQzB,KAAI,SAACwL,GAAG,OAAK6C,SAAS7C,EAAI9M,MAAM4P,QAAQ,KAAM,IAAI,KAC3DC,GAAAxS,EAAAA,EAAAA,GAAAqS,EAAA,GAFMI,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAGpC9K,EAAAA,EAAAA,YAAU,WACR,IAAMiL,EAAgB,SAACpH,GACrB,GAAkB,cAAdA,EAAMqH,IAAqB,CAAC,IAADC,EAC7B,GAA8B,QAA1BA,EAACb,EAAkB5G,eAAO,IAAAyH,IAAzBA,EAA2BC,SAAS7D,SAAS8D,eAChD,OAEFxH,EAAMC,iBACNmG,GAAoB,SAACqB,GACnB,IAAMC,EAAWvE,KAAKwE,IAAIzI,EAAK0I,OAAQrB,GAAgB,EACjDsB,EACU,OAAdJ,EAAqB,EAAItE,KAAKwE,IAAIF,EAAY,EAAGC,GAQnD,OAPIb,EAAQhH,QAAQgI,IAClBhB,EAAQhH,QAAQgI,GAAWC,eAAe,CACxCC,SAAU,SACVC,MAAO,UAIJH,CACT,GACF,MAAO,GAAkB,YAAd7H,EAAMqH,IAAmB,CAAC,IAADY,EAClC,GAA8B,QAA1BA,EAACxB,EAAkB5G,eAAO,IAAAoI,IAAzBA,EAA2BV,SAAS7D,SAAS8D,eAChD,OAEFxH,EAAMC,iBACNmG,GAAoB,SAACqB,GACnB,IAAMI,EAA0B,OAAdJ,EAAqB,EAAItE,KAAKC,IAAIqE,EAAY,EAAG,GAOnE,OANIZ,EAAQhH,QAAQgI,IAClBhB,EAAQhH,QAAQgI,GAAWC,eAAe,CACxCC,SAAU,SACVC,MAAO,UAGJH,CACT,GACF,CACF,EAGA,OADAK,OAAOC,iBAAiB,UAAWf,GAC5B,WACLc,OAAOE,oBAAoB,UAAWhB,EACxC,CACF,GAAG,CAAClI,EAAK0I,OAAQrB,KAEjBpK,EAAAA,EAAAA,YAAU,WACR,IAAMiL,EAAgB,SAACpH,GACrB,GAAkB,UAAdA,EAAMqH,IAAiB,CAAC,IAADgB,EACzB,GAA8B,QAA1BA,EAAC5B,EAAkB5G,eAAO,IAAAwI,IAAzBA,EAA2Bd,SAAS7D,SAAS8D,eAChD,OAGF,GADAxH,EAAMC,iBACmB,OAArBkG,EAA2B,CAC7B,IAAMmC,EAAe3B,EAAaR,GAClCH,GAAe,SAACvE,GAAE,OAChBA,IAAO6G,EAAa3D,OAAS,KAAO2D,EAAa3D,MAAM,IAEzDvF,EAAkBY,EAAOsI,EAC3B,CACF,CACF,EAEA,OADAJ,OAAOC,iBAAiB,UAAWf,GAC5B,WACLc,OAAOE,oBAAoB,UAAWhB,EACxC,CACF,GAAG,CAACjB,EAAkBQ,EAAcvH,IAEpC,IAAMqF,EAAoB,SAAC7F,EAAQ2J,GACjC,IAAMC,EAAS5J,EAAE0E,QACXmF,EAAaF,EAAQG,cAAcC,YACnCC,EAAcC,MAAMC,KACxBP,EAAQG,cAAcA,cAAc9U,UACpCmV,QAAQR,EAAQG,eAEZM,EAAkB,SAACpK,GACvB,IAAMqK,EAAWR,GAAc7J,EAAE0E,QAAUkF,GAC3CrB,GAAgB,SAAC+B,GACf,IAAMC,GAASC,EAAAA,EAAAA,GAAOF,GAEtB,OADAC,EAAUP,GAAeK,EAClBE,CACT,GACF,EAOAjB,OAAOC,iBAAiB,YAAaa,GACrCd,OAAOC,iBAAiB,WANF,SAAhBkB,IACJnB,OAAOE,oBAAoB,YAAaY,GACxCd,OAAOE,oBAAoB,UAAWiB,EACxC,GAIF,EAOMjF,EAAiB,SAAC3C,GACtBuE,EAAeD,IAAgBtE,EAAK,KAAOA,EAC7C,EAEM8C,EAAmB,SAAC5L,GACxB,IAAM2Q,EAAepK,EAAKqK,WAAU,SAACC,GAAC,OAAKA,EAAE/H,KAAO9I,EAAKgM,MAAM,IAC/DyB,EAAoBkD,EACtB,EAEM9E,EAAmB,WACvB4B,GAAqB,EACvB,EACA,OACEnP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAkB4J,IAAK2F,EAAkB7S,SAAA,EACtDF,EAAAA,EAAAA,KAAA,OACEyD,MAAO,CACLR,SAAU,WACVgB,SAAU,OACVN,OAAO,GAADyG,QACsB,QAA1BuH,EAACoB,EAAkB5G,eAAO,IAAAwF,OAAA,EAAzBA,EAA2BpC,wBACzB5L,QAAoB,GAAE,MAE3BD,MAAM,GAAD0G,OACsB,QADtBwH,EACHmB,EAAkB5G,eAAO,IAAAyF,OAAA,EAAzBA,EAA2BrC,wBAAwB7L,MAAK,OAE1DxD,UAEFqD,EAAAA,EAAAA,MAAA,SAAOwK,GAAG,UAAUvK,UAAU,YAAWtD,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SACGuG,EAAQzB,KAAI,SAACwL,EAAUtL,GACtB,OACElF,EAAAA,EAAAA,KAAA,MAEEyD,MAAO,CACLmC,UAAW,OACXN,MAAO,UACPyQ,SAAUvC,EAAatO,IACvBhF,SAEDsQ,EAAI7J,QAPAzB,EAUX,QAGHuG,GACCzL,EAAAA,EAAAA,KAAA,SACEyD,MAAO,CACLE,OAAO,GAADyG,QACsB,QAA1ByH,EAACkB,EAAkB5G,eAAO,IAAA0F,OAAA,EAAzBA,EAA2BtC,wBACzB5L,QAAoB,IAAG,OAE5BzD,UAEFF,EAAAA,EAAAA,KAAA,MAAIwD,UAAU,YAAWtD,UACvBF,EAAAA,EAAAA,KAAA,MACEgW,QAASvP,EAAQyN,OACjBzQ,MAAO,CACLmC,UAAW,UACX1F,SACH,oBAMLF,EAAAA,EAAAA,KAAA,SAAAE,SACe,OAAZ+S,QAAY,IAAZA,OAAY,EAAZA,EAAcjO,KAAI,SAACwL,EAAUtL,GAC5B,OACElF,EAAAA,EAAAA,KAACqQ,EAAE,CAEDG,IAAKA,EACL/J,QAASA,EACTiK,eAAgBA,EAChBD,SAAUD,EAAIS,SAAWoB,EACzB1B,sBAAuBjF,EACvBkF,sBAAuB6B,IAAqBvN,EAC5C2L,iBAAkBA,EAClBC,iBAAkBA,EAClB1D,IAAK,SAAC6I,GAAE,OAAM9C,EAAQhH,QAAQjH,GAAO+Q,CAAE,EACvClF,kBAAmBA,GAVd7L,EAaX,YAKR3B,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLE,OAAQ,OACRE,QAAS,OACTC,WAAY,SACZF,WAAY,UACZS,QAAS,SACTsJ,UAAW,QACXzN,SAAA,EAEFqD,EAAAA,EAAAA,MAAA,UACE5D,MAAOkT,EACPxF,SAAU,SAACnC,GACT4H,EAAgBO,SAASnI,EAAEE,OAAOzL,QAClCuS,EAAe,EACjB,EAAEhS,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,GAAGO,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,GAAGO,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,GAAGO,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,GAAGO,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,GAAGO,SAAC,QACnBF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,IAAIO,SAAC,SACpBF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,IAAIO,SAAC,SACpBF,EAAAA,EAAAA,KAAA,UAAQL,MAAO,IAAKO,SAAC,aAEvBF,EAAAA,EAAAA,KAACkW,EAAU,CACTC,WAAY3K,EAAK0I,OACjBrB,aAAcA,EACdZ,YAAaA,EACbmE,aA5HiB,SAACC,GACxBnE,EAAemE,GACf3D,EAAoB,EACtB,SA8HF,CAEA,IAAMwD,EAAa,SAAHI,GAKJ,IAJVH,EAAUG,EAAVH,WACAtD,EAAYyD,EAAZzD,aACAZ,EAAWqE,EAAXrE,YACAmE,EAAYE,EAAZF,aAEMG,EAAa9G,KAAK+G,KAAKL,EAAatD,GAGtC4D,EAAY,EACdC,EAAU,EAEZ,GAAIH,GALsB,EAMxBE,EAAY,EACZC,EAAUH,MACL,CACL,IAAMI,EAA4BlH,KAAKmH,MAAMC,GACvCC,EAA2BrH,KAAK+G,KAAKK,GAAyB,EAEhE5E,GAAe0E,GACjBF,EAAY,EACZC,EAdsB,GAebzE,EAAc6E,GAA4BP,GACnDE,EAAYF,EAhBU,EAgBuB,EAC7CG,EAAUH,IAEVE,EAAYxE,EAAc0E,EAC1BD,EAAUzE,EAAc6E,EAE5B,CAEA,IAAMC,EAAoB5B,MAAMC,KAC9BD,MAAMuB,EAAUD,EAAY,IAC5B,SAACO,EAAGlB,GAAC,OAAKW,EAAYX,CAAC,IAGzB,OACEvS,EAAAA,EAAAA,MAAA,OACEE,MAAO,CACLI,QAAS,OACT8J,UAAW,MACX7J,WAAY,UACZ5D,SAAA,EAEFF,EAAAA,EAAAA,KAAA,UACEyD,MAAO,CACLY,QAAS,OACTuB,UAAW,SACXJ,SAAU,QAEZxB,QAAS,kBAAMoS,EAAanE,EAAc,EAAE,EAC5CgF,SAA0B,IAAhBhF,EAAkB/R,SAC7B,aAGAuW,EAAY,IACXlT,EAAAA,EAAAA,MAAA2T,EAAAA,SAAA,CAAAhX,SAAA,EACEF,EAAAA,EAAAA,KAAA,UACEgE,QAAS,kBAAMoS,EAAa,EAAE,EAC9B3S,MAAO,CACLY,QAAS,OACTuB,UAAW,SACXJ,SAAU,OACV8F,aAAc,MACd1H,WAAYqO,IAAgBwE,EAAY,UAAY,GACpDV,SAAU,OACVoB,UAAW,QACXjX,SACH,MAGAuW,EAAY,IAAKzW,EAAAA,EAAAA,KAAA,QAAAE,SAAM,WAG3B6W,EAAkB/R,KAAI,SAACqR,GAAI,OAC1BrW,EAAAA,EAAAA,KAAA,UACEyD,MAAO,CACLY,QAAS,OACTuB,UAAW,SACXJ,SAAU,OACV8F,aAAc,MACd1H,WAAYyS,IAASpE,EAAc,UAAY,GAC/C8D,SAAU,OACVoB,UAAW,QAGbnT,QAAS,kBAAMoS,EAAaC,EAAK,EACjC7S,UAAW6S,IAASpE,EAAc,SAAW,GAAG/R,SAE/CmW,GAJIA,EAKE,IAEVK,EAAUH,IACThT,EAAAA,EAAAA,MAAA2T,EAAAA,SAAA,CAAAhX,SAAA,CACGwW,EAAUH,EAAa,IAAKvW,EAAAA,EAAAA,KAAA,QAAAE,SAAM,SACnCF,EAAAA,EAAAA,KAAA,UACEyD,MAAO,CACLY,QAAS,OACTuB,UAAW,SACXJ,SAAU,OACV8F,aAAc,MACd1H,WAAYqO,IAAgBsE,EAAa,UAAY,GACrDR,SAAU,OACVoB,UAAW,QAEbnT,QAAS,kBAAMoS,EAAaG,EAAW,EAACrW,SAEvCqW,QAIPvW,EAAAA,EAAAA,KAAA,UACEyD,MAAO,CACLY,QAAS,OACTuB,UAAW,SACXJ,SAAU,QAEZxB,QAAS,kBAAMoS,EAAanE,EAAc,EAAE,EAC5CgF,SAAUhF,IAAgBsE,EAAWrW,SACtC,WAKP,C,kFCn+Ce,SAASH,EAAqBqX,GAC3C,IAAAxW,GAAgDC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDT,EAAgBW,EAAA,GAAEuW,EAAmBvW,EAAA,GAqB5C,MAAO,CACLV,KAAMgX,EAAMjX,GACZE,KALF,SAAc9B,GACZ8Y,EAAoB9Y,EACtB,EAIE+Y,KAdF,WACED,GAAoB,SAACvB,GACnB,OAAIA,GAAK,EACAA,EAEFA,EAAI,CACb,GACF,EAQE/T,KAvBF,WACEsV,GAAoB,SAACvB,GACnB,OAAIA,GAAKsB,EAAMlD,OAAS,EACf4B,EAEFA,EAAI,CACb,GACF,EAiBEyB,YAAkC,IAArBpX,EACbqX,WAAYrX,IAAqBiX,EAAMlD,OAAS,EAChD/T,iBAAAA,EAEJ,C,uEChCe,SAAS4O,EAAyB0I,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACI9D,EAAKmC,EADL1K,GAAS,OAA6BqM,EAAQC,GAElD,GAAIC,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBH,GACpD,IAAK3B,EAAI,EAAGA,EAAI+B,EAAiB3D,OAAQ4B,IACvCnC,EAAMkE,EAAiB/B,GACnB4B,EAASrC,QAAQ1B,IAAQ,GACxBgE,OAAOG,UAAUC,qBAAqBC,KAAKP,EAAQ9D,KACxDvI,EAAOuI,GAAO8D,EAAO9D,GAEzB,CACA,OAAOvI,CACT,C","sources":["feautures/MasterAdminDashboard.tsx","hooks/useMultipleComponent.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React, {\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  forwardRef,\r\n} from \"react\";\r\nimport { useMutation, useQuery } from \"react-query\";\r\nimport { wait } from \"../lib/wait\";\r\nimport Swal from \"sweetalert2\";\r\nimport { AuthContext } from \"../components/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Logout } from \"../components/Sidebars/Logout\";\r\nimport \"../style/master-admin-dashboard.css\";\r\nimport useMultipleComponent from \"../hooks/useMultipleComponent\";\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nconst buttons = [\r\n  {\r\n    title: \"Users\",\r\n    index: 0,\r\n  },\r\n  {\r\n    title: \"Server\",\r\n    index: 1,\r\n  },\r\n  {\r\n    title: \"Database\",\r\n    index: 2,\r\n  },\r\n];\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  contact: \"\",\r\n  username: \"\",\r\n  department: \"UMIS\",\r\n  accountType: \"ADMIN\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  confirmationCode: \"\",\r\n  confirm_confirmationCode: \"\",\r\n  profile: [],\r\n};\r\n\r\nconst reducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_FIELD\":\r\n      return {\r\n        ...state,\r\n        [action.field]: action.value,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function MasterAdminDashboard() {\r\n  const { currentStepIndex, step, goTo } = useMultipleComponent([\r\n    <User />,\r\n    <div>2</div>,\r\n    <div>3</div>,\r\n  ]);\r\n  const { setUser, myAxios, user } = useContext(AuthContext);\r\n  const [openCircularLoader, setOpenCircularLoader] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const { refetch } = useQuery({\r\n    queryKey: \"logout\",\r\n    queryFn: async () =>\r\n      wait(1200).then(async () => await Logout(myAxios, user)),\r\n    enabled: false,\r\n    refetchOnWindowFocus: false,\r\n    onSuccess: (res) => {\r\n      setOpenCircularLoader(false);\r\n      if (res.data.success) {\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: res.data.message,\r\n          showConfirmButton: false,\r\n          timer: 800,\r\n        }).then(() => {\r\n          setUser(null);\r\n          navigate(\"/\");\r\n        });\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <header className=\"header\">\r\n        <div\r\n          style={{\r\n            width: \"fit-content\",\r\n            height: \"fit-content\",\r\n            background: \"transparent\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <h5>MASTER ADMIN</h5>\r\n        </div>\r\n        <RippleButton\r\n          onClick={() => {\r\n            setOpenCircularLoader(true);\r\n            refetch();\r\n          }}\r\n          style={{\r\n            position: \"relative\",\r\n            overflow: \"hidden\",\r\n            transform: \"rotate(270deg)\",\r\n            cursor: \"pointer\",\r\n            border: \"none\",\r\n            padding: \"0\",\r\n            margin: \"0\",\r\n            background: \"transparent\",\r\n          }}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"22px\"\r\n            height=\"22px\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n          >\r\n            <path\r\n              d=\"M17.4399 14.62L19.9999 12.06L17.4399 9.5\"\r\n              stroke=\"white\"\r\n              strokeWidth=\"1.5\"\r\n              strokeMiterlimit=\"10\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M9.76001 12.0601H19.93\"\r\n              stroke=\"white\"\r\n              strokeWidth=\"1.5\"\r\n              strokeMiterlimit=\"10\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n            <path\r\n              d=\"M11.76 20C7.34001 20 3.76001 17 3.76001 12C3.76001 7 7.34001 4 11.76 4\"\r\n              stroke=\"white\"\r\n              strokeWidth=\"1.5\"\r\n              strokeMiterlimit=\"10\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </RippleButton>\r\n      </header>\r\n      <section style={{ display: \"flex\", margin: \"10px 0\" }}>\r\n        {buttons.map((item, idx) => {\r\n          return (\r\n            <RippleButton\r\n              key={idx}\r\n              style={{\r\n                border: \"none\",\r\n                outline: \"none\",\r\n                backgroundColor: \"rgba(51, 51, 51, 0.05)\",\r\n                borderWidth: \"0\",\r\n                color:\r\n                  currentStepIndex === idx\r\n                    ? \"white\"\r\n                    : \"rgba(189, 187, 187, 0.432)\",\r\n                cursor: \"pointer\",\r\n                display: \"inline-block\",\r\n                fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\r\n                fontSize: \"14px\",\r\n                fontWeight: \"500\",\r\n                lineHeight: \"20px\",\r\n                listStyle: \"none\",\r\n                margin: \"0\",\r\n                padding: \"5px 12px\",\r\n                textAlign: \"center\",\r\n                transition: \"all 200ms\",\r\n                verticalAlign: \"baseline\",\r\n                whiteSpace: \"nowrap\",\r\n                userSelect: \"none\",\r\n                touchAction: \"manipulation\",\r\n                position: \"relative\",\r\n                overflow: \"hidden\",\r\n              }}\r\n              onClick={() => goTo(idx)}\r\n            >\r\n              {item.title}\r\n            </RippleButton>\r\n          );\r\n        })}\r\n      </section>\r\n      <section className=\"content\">{step}</section>\r\n      {openCircularLoader && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            background: \"rgba(66, 65, 66, 0.31)\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            zIndex: \"999\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nconst columns = [\r\n  { datakey: \"name\", header: \"Name\", width: \"300px\" },\r\n  { datakey: \"Username\", header: \"Username\", width: \"300px\" },\r\n  { datakey: \"email\", header: \"Email\", width: \"300px\" },\r\n  { datakey: \"company_number\", header: \"Mobile Number\", width: \"150px\" },\r\n  { datakey: \"AccountType\", header: \"Account Type\", width: \"100px\" },\r\n  { datakey: \"Department\", header: \"Department\", width: \"100px\" },\r\n  { datakey: \"_CreatedAt\", header: \"Created\", width: \"100px\" },\r\n];\r\nfunction User() {\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const fileInput = useRef<HTMLInputElement>(null);\r\n  const [openAddModal, setOpenAddModal] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [dragging, setDragging] = useState(false);\r\n  const [hover, setHover] = useState(false);\r\n  const [userRow, setUserRow] = useState([]);\r\n  useEffect(() => {\r\n    async function urlToFile() {\r\n      const url = \"http://localhost:4000/profile.jpg\";\r\n\r\n      const response = await fetch(url);\r\n      const buffer = await response.arrayBuffer();\r\n      const file = new File([buffer], \"image.jpg\", { type: \"image/jpeg\" });\r\n\r\n      const reader: any = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSelectedImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n    urlToFile();\r\n  }, []);\r\n\r\n  const { mutate: mutateAddUser, isLoading: isLoadingAddUser } = useMutation({\r\n    mutationKey: \"add-user\",\r\n    mutationFn: async (variable: any) =>\r\n      await myAxios.post(\"/master-admin/add-user\", variable, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }),\r\n    onSuccess: (res) => {\r\n      const response = res as any;\r\n      if (response.data.success) {\r\n        return Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: response.data.message,\r\n          timer: 1500,\r\n        });\r\n      }\r\n      return Swal.fire({\r\n        position: \"center\",\r\n        icon: \"warning\",\r\n        title: response.data.message,\r\n        timer: 1500,\r\n      });\r\n    },\r\n  });\r\n  const { isLoading: isLoadingUser } = useQuery({\r\n    queryKey: \"get-user\",\r\n    queryFn: async () =>\r\n      await myAxios.get(\"/master-admin/get-user\", {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }),\r\n    refetchOnWindowFocus: false,\r\n    onSuccess: (res) => {\r\n      const response = res as any;\r\n      setUserRow(response.data?.users);\r\n    },\r\n  });\r\n  const handleImageChange = (event: any) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader: any = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSelectedImage(reader.result);\r\n        state.profile.push({\r\n          fileName: file.name,\r\n          fileContent: reader.result,\r\n          fileType: file.type,\r\n          file,\r\n          datakey: \"profile\",\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  const handleDrop = (event: any) => {\r\n    event.preventDefault();\r\n    setDragging(false);\r\n    const file = event.dataTransfer.files[0];\r\n    if (file) {\r\n      const reader: any = new FileReader();\r\n      reader.onloadend = () => {\r\n        setSelectedImage(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  const handleDragOver = (event: any) => {\r\n    event.preventDefault();\r\n    setDragging(true);\r\n  };\r\n  const handleDragLeave = () => {\r\n    setDragging(false);\r\n  };\r\n  const handleInputChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"users\">\r\n        <div className=\"user-actions\">\r\n          <RippleButton\r\n            style={{\r\n              position: \"relative\",\r\n\r\n              overflow: \"hidden\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              fontSize: \"11px\",\r\n            }}\r\n            onClick={() => {\r\n              setOpenAddModal(true);\r\n            }}\r\n          >\r\n            ADD USER\r\n          </RippleButton>\r\n        </div>\r\n        <CustomTable\r\n          rows={userRow}\r\n          columns={columns}\r\n          isLoadingRow={isLoadingUser}\r\n          onSelectionChange={(e, row) => {\r\n            console.log(row);\r\n          }}\r\n        />\r\n        {isLoadingAddUser && (\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              background: \"rgba(66, 65, 66, 0.31)\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              zIndex: \"999\",\r\n              display: \"flex\",\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal isOpen={openAddModal} onCLose={() => setOpenAddModal(false)}>\r\n        <h3 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n          USER DETAILS\r\n        </h3>\r\n        <form>\r\n          <div\r\n            style={{\r\n              marginBottom: \"50px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                height: \"150px\",\r\n                width: \"150px\",\r\n                borderRadius: \"50%\",\r\n                cursor: \"pointer\",\r\n                position: \"relative\",\r\n                overflow: \"hidden\",\r\n                outline: dragging ? \"2px solid #fbbf24\" : \"none\",\r\n                transition: \"all 300ms\",\r\n                background: \"black\",\r\n              }}\r\n              onClick={() => {\r\n                fileInput.current?.click();\r\n              }}\r\n              onDrop={handleDrop}\r\n              onDragOver={handleDragOver}\r\n              onDragLeave={handleDragLeave}\r\n              onMouseEnter={() => setHover(true)}\r\n              onMouseLeave={() => setHover(false)}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: \"50px\",\r\n                  height: \"50px\",\r\n                  background: \"transparent\",\r\n                  position: \"absolute\",\r\n                  top: dragging ? \"50%\" : \"-50%\",\r\n                  left: \"50%\",\r\n                  transform: \"translate(-50%,-50%)\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  transition: \"all 300ms\",\r\n                  pointerEvents: \"none\",\r\n                }}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"50px\"\r\n                  height=\"50px\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M12 10.25C12.4142 10.25 12.75 10.5858 12.75 11V12.25H14C14.4142 12.25 14.75 12.5858 14.75 13C14.75 13.4142 14.4142 13.75 14 13.75H12.75V15C12.75 15.4142 12.4142 15.75 12 15.75C11.5858 15.75 11.25 15.4142 11.25 15V13.75H10C9.58579 13.75 9.25 13.4142 9.25 13C9.25 12.5858 9.58579 12.25 10 12.25H11.25V11C11.25 10.5858 11.5858 10.25 12 10.25Z\"\r\n                    fill=\"#fbbf24\"\r\n                  />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M9.77778 21H14.2222C17.3433 21 18.9038 21 20.0248 20.2646C20.51 19.9462 20.9267 19.5371 21.251 19.0607C22 17.9601 22 16.4279 22 13.3636C22 10.2994 22 8.76721 21.251 7.6666C20.9267 7.19014 20.51 6.78104 20.0248 6.46268C19.3044 5.99013 18.4027 5.82123 17.022 5.76086C16.3631 5.76086 15.7959 5.27068 15.6667 4.63636C15.4728 3.68489 14.6219 3 13.6337 3H10.3663C9.37805 3 8.52715 3.68489 8.33333 4.63636C8.20412 5.27068 7.63685 5.76086 6.978 5.76086C5.59733 5.82123 4.69555 5.99013 3.97524 6.46268C3.48995 6.78104 3.07328 7.19014 2.74902 7.6666C2 8.76721 2 10.2994 2 13.3636C2 16.4279 2 17.9601 2.74902 19.0607C3.07328 19.5371 3.48995 19.9462 3.97524 20.2646C5.09624 21 6.65675 21 9.77778 21ZM16 13C16 15.2091 14.2091 17 12 17C9.79086 17 8 15.2091 8 13C8 10.7909 9.79086 9 12 9C14.2091 9 16 10.7909 16 13ZM18 9.25C17.5858 9.25 17.25 9.58579 17.25 10C17.25 10.4142 17.5858 10.75 18 10.75H19C19.4142 10.75 19.75 10.4142 19.75 10C19.75 9.58579 19.4142 9.25 19 9.25H18Z\"\r\n                    fill=\"#fbbf24\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100px\",\r\n                  background: \"rgba(66, 65, 66, 0.31)\",\r\n                  position: \"absolute\",\r\n                  top: dragging ? \"150%\" : hover ? \"50%\" : \"150%\",\r\n                  left: \"50%\",\r\n                  transform: \"translate(-50%,-50%)\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  transition: \"all 300ms\",\r\n                  pointerEvents: \"none\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"auto\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"50px\"\r\n                    height=\"50px\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                  >\r\n                    <path\r\n                      d=\"M17 17H17.01M15.6 14H18C18.9319 14 19.3978 14 19.7654 14.1522C20.2554 14.3552 20.6448 14.7446 20.8478 15.2346C21 15.6022 21 16.0681 21 17C21 17.9319 21 18.3978 20.8478 18.7654C20.6448 19.2554 20.2554 19.6448 19.7654 19.8478C19.3978 20 18.9319 20 18 20H6C5.06812 20 4.60218 20 4.23463 19.8478C3.74458 19.6448 3.35523 19.2554 3.15224 18.7654C3 18.3978 3 17.9319 3 17C3 16.0681 3 15.6022 3.15224 15.2346C3.35523 14.7446 3.74458 14.3552 4.23463 14.1522C4.60218 14 5.06812 14 6 14H8.4M12 15V4M12 4L15 7M12 4L9 7\"\r\n                      stroke=\"#f8fafc\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    />\r\n                  </svg>\r\n                  <p\r\n                    style={{\r\n                      fontSize: \"10px\",\r\n                      padding: \"0\",\r\n                      margin: \"0\",\r\n                      color: \"#f8fafc\",\r\n                    }}\r\n                  >\r\n                    Drag/Drop here!\r\n                  </p>\r\n                  <p\r\n                    style={{\r\n                      fontSize: \"10px\",\r\n                      padding: \"0\",\r\n                      margin: \"0\",\r\n                      color: \"#f8fafc\",\r\n                    }}\r\n                  >\r\n                    Click to Upload Photo!\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <img\r\n                style={{\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  background: \"black\",\r\n                  borderRadius: \"50%\",\r\n                  pointerEvents: \"none\",\r\n                }}\r\n                alt=\"\"\r\n                src={selectedImage}\r\n              />\r\n              <input\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                style={{ display: \"none\" }}\r\n                ref={fileInput}\r\n                onChange={handleImageChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(3,1fr)\",\r\n              columnGap: \"100px\",\r\n              rowGap: \"50px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"name\"\r\n                style={{ fontSize: \"11px\", width: \"100px\", color: \"#fbbf24\" }}\r\n              >\r\n                NAME :\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                onChange={handleInputChange}\r\n                value={state.name}\r\n                style={{\r\n                  flex: 1,\r\n                  background: \"transparent\",\r\n                  borderLeft: \"none\",\r\n                  borderRight: \"none\",\r\n                  borderTop: \"none\",\r\n                  outline: \"none\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                  padding: \"5px 0\",\r\n                  textTransform: \"uppercase\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"email\"\r\n                style={{ fontSize: \"11px\", width: \"100px\", color: \"#fbbf24\" }}\r\n              >\r\n                EMAIL :\r\n              </label>\r\n              <input\r\n                onChange={handleInputChange}\r\n                value={state.email}\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                style={{\r\n                  flex: 1,\r\n                  background: \"transparent\",\r\n                  borderLeft: \"none\",\r\n                  borderRight: \"none\",\r\n                  borderTop: \"none\",\r\n                  outline: \"none\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                  padding: \"5px 0\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"contact\"\r\n                style={{ fontSize: \"11px\", width: \"100px\", color: \"#fbbf24\" }}\r\n              >\r\n                CONTACT :\r\n              </label>\r\n              <input\r\n                onChange={handleInputChange}\r\n                value={state.contact}\r\n                type=\"text\"\r\n                id=\"contact\"\r\n                name=\"contact\"\r\n                style={{\r\n                  flex: 1,\r\n                  background: \"transparent\",\r\n                  borderLeft: \"none\",\r\n                  borderRight: \"none\",\r\n                  borderTop: \"none\",\r\n                  outline: \"none\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                  padding: \"5px 0\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"username\"\r\n                style={{ fontSize: \"11px\", width: \"100px\", color: \"#fbbf24\" }}\r\n              >\r\n                USERNAME :\r\n              </label>\r\n              <input\r\n                onChange={handleInputChange}\r\n                value={state.username}\r\n                autoComplete=\"off\"\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                style={{\r\n                  flex: 1,\r\n                  background: \"transparent\",\r\n                  borderLeft: \"none\",\r\n                  borderRight: \"none\",\r\n                  borderTop: \"none\",\r\n                  outline: \"none\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                  padding: \"5px 0\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"department\"\r\n                style={{ fontSize: \"11px\", width: \"100px\", color: \"#fbbf24\" }}\r\n              >\r\n                DEPARTMENT\r\n              </label>\r\n              <select\r\n                onChange={handleInputChange}\r\n                value={state.department}\r\n                name=\"department\"\r\n                id=\"department\"\r\n                style={{\r\n                  border: \"none\",\r\n                  outline: \"none\",\r\n                  flex: \"1\",\r\n                  background: \"transparent\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                }}\r\n              >\r\n                <option value={\"UMIS\"} style={{ color: \"black\" }}>\r\n                  UMIS\r\n                </option>\r\n                <option value={\"UCSMI\"} style={{ color: \"black\" }}>\r\n                  UCSMI\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"accountType\"\r\n                style={{ fontSize: \"11px\", width: \"100px\", color: \"#fbbf24\" }}\r\n              >\r\n                ACCOUNT TYPE\r\n              </label>\r\n              <select\r\n                onChange={handleInputChange}\r\n                value={state.accountType}\r\n                name=\"accountType\"\r\n                id=\"accountType\"\r\n                style={{\r\n                  border: \"none\",\r\n                  outline: \"none\",\r\n                  flex: \"1\",\r\n                  background: \"transparent\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                }}\r\n              >\r\n                <option value={\"ADMIN\"} style={{ color: \"black\" }}>\r\n                  ADMIN\r\n                </option>\r\n                <option value={\"ACCOUNTING\"} style={{ color: \"black\" }}>\r\n                  ACCOUNTING\r\n                </option>\r\n                <option value={\"PRODUCTION\"} style={{ color: \"black\" }}>\r\n                  PRODUCTION\r\n                </option>\r\n                <option value={\"CLAIMS\"} style={{ color: \"black\" }}>\r\n                  CLAIMS\r\n                </option>\r\n                <option\r\n                  value={\"PRODUCTION_ACCOUNTING\"}\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  PRODUCTION_ACCOUNTING\r\n                </option>\r\n                {/* <option\r\n                  value={\"PRODUCTION_ACCOUNTING_CLAIMS\"}\r\n                  style={{ color: \"black\" }}\r\n                >\r\n                  PRODUCTION_ACCOUNTING_CLAIMS\r\n                </option> */}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(4,1fr)\",\r\n              columnGap: \"100px\",\r\n              rowGap: \"50px\",\r\n              marginTop: \"100px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n                gridColumn: \"2/span 1\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"password\"\r\n                style={{ fontSize: \"11px\", width: \"130px\", color: \"#fbbf24\" }}\r\n              >\r\n                PASSWORD :\r\n              </label>\r\n              <input\r\n                onChange={handleInputChange}\r\n                value={state.password}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                autoComplete=\"off\"\r\n                style={{\r\n                  flex: 1,\r\n                  background: \"transparent\",\r\n                  borderLeft: \"none\",\r\n                  borderRight: \"none\",\r\n                  borderTop: \"none\",\r\n                  outline: \"none\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                  padding: \"5px 0\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"confirmPassword\"\r\n                style={{ fontSize: \"11px\", width: \"170px\", color: \"#fbbf24\" }}\r\n              >\r\n                VERIFY PASSWORD :\r\n              </label>\r\n              <input\r\n                onChange={handleInputChange}\r\n                value={state.confirmPassword}\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                style={{\r\n                  flex: 1,\r\n                  background: \"transparent\",\r\n                  borderLeft: \"none\",\r\n                  borderRight: \"none\",\r\n                  borderTop: \"none\",\r\n                  outline: \"none\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                  padding: \"5px 0\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n                gridColumn: \"2/span 1\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"confirmationCode\"\r\n                style={{ fontSize: \"11px\", width: \"130px\", color: \"#fbbf24\" }}\r\n              >\r\n                Confirmation Code :\r\n              </label>\r\n              <input\r\n                onChange={handleInputChange}\r\n                value={state.confirmationCode}\r\n                type=\"password\"\r\n                id=\"confirmationCode\"\r\n                name=\"confirmationCode\"\r\n                autoComplete=\"off\"\r\n                style={{\r\n                  flex: 1,\r\n                  background: \"transparent\",\r\n                  borderLeft: \"none\",\r\n                  borderRight: \"none\",\r\n                  borderTop: \"none\",\r\n                  outline: \"none\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                  padding: \"5px 0\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexWrap: \"nowrap\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <label\r\n                htmlFor=\"confirm_confirmationCode\"\r\n                style={{ fontSize: \"11px\", width: \"170px\", color: \"#fbbf24\" }}\r\n              >\r\n                VERIFY CONFIRMATION CODE :\r\n              </label>\r\n              <input\r\n                onChange={handleInputChange}\r\n                value={state.confirm_confirmationCode}\r\n                type=\"password\"\r\n                id=\"confirm_confirmationCode\"\r\n                name=\"confirm_confirmationCode\"\r\n                style={{\r\n                  flex: 1,\r\n                  background: \"transparent\",\r\n                  borderLeft: \"none\",\r\n                  borderRight: \"none\",\r\n                  borderTop: \"none\",\r\n                  outline: \"none\",\r\n                  color: \"white\",\r\n                  borderBottom: \"1px solid white\",\r\n                  padding: \"5px 0\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                flexWrap: \"nowrap\",\r\n                gridColumn: \"2/span 2\",\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <RippleButton\r\n                type=\"submit\"\r\n                style={{\r\n                  position: \"relative\",\r\n                  overflow: \"hidden\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"5px\",\r\n                  fontSize: \"11px\",\r\n                  width: \"100%\",\r\n                }}\r\n                onClick={(e: any) => {\r\n                  e.preventDefault();\r\n                  if (selectedImage === \"\") {\r\n                    return Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"warning\",\r\n                      title: \"Profile is required!\",\r\n                      timer: 1500,\r\n                    });\r\n                  }\r\n                  if (state.username === \"\") {\r\n                    return Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"warning\",\r\n                      title: \"Username is required!\",\r\n                      timer: 1500,\r\n                    });\r\n                  }\r\n                  if (state.accountType === \"\") {\r\n                    return Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"warning\",\r\n                      title: \"Account Type is required!\",\r\n                      timer: 1500,\r\n                    });\r\n                  }\r\n                  if (state.department === \"\") {\r\n                    return Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"warning\",\r\n                      title: \"Department is required!\",\r\n                      timer: 1500,\r\n                    });\r\n                  }\r\n                  if (state.password === \"\") {\r\n                    return Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"warning\",\r\n                      title: \"Password is required!\",\r\n                      timer: 1500,\r\n                    });\r\n                  }\r\n                  if (state.confirmationCode === \"\") {\r\n                    return Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"warning\",\r\n                      title: \"Confirmation code is required!\",\r\n                      timer: 1500,\r\n                    });\r\n                  }\r\n                  if (state.password !== state.confirmPassword) {\r\n                    return Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"warning\",\r\n                      title: \"Verify Password not match!\",\r\n                      timer: 1500,\r\n                    });\r\n                  }\r\n                  if (\r\n                    state.confirmationCode !== state.confirm_confirmationCode\r\n                  ) {\r\n                    return Swal.fire({\r\n                      position: \"center\",\r\n                      icon: \"warning\",\r\n                      title: \"Verify Confirmation Code not match!\",\r\n                      timer: 1500,\r\n                    });\r\n                  }\r\n\r\n                  mutateAddUser(state);\r\n                }}\r\n              >\r\n                SUBMIT\r\n              </RippleButton>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction Modal({ children, isOpen, onCLose }: any) {\r\n  return (\r\n    <div className={`modal ${isOpen ? \"open\" : \"close\"}` }>\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-close\">\r\n          <RippleButton\r\n            onClick={onCLose}\r\n            style={{\r\n              position: \"relative\",\r\n              overflow: \"hidden\",\r\n              cursor: \"pointer\",\r\n              border: \"none\",\r\n              padding: \"0\",\r\n              margin: \"0\",\r\n              background: \"transparent\",\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"30px\"\r\n              height=\"30px\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n            >\r\n              <circle\r\n                cx=\"12\"\r\n                cy=\"12\"\r\n                r=\"10\"\r\n                stroke=\"#fbbf24\"\r\n                strokeWidth=\"1.5\"\r\n              />\r\n              <path\r\n                d=\"M14.5 9.50002L9.5 14.5M9.49998 9.5L14.5 14.5\"\r\n                stroke=\"#fbbf24\"\r\n                strokeWidth=\"1.5\"\r\n                strokeLinecap=\"round\"\r\n              />\r\n            </svg>\r\n          </RippleButton>\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RippleButton({ children, ...rest }: any) {\r\n  const createRipple = (event: any) => {\r\n    const button = event.currentTarget;\r\n\r\n    // Remove any existing ripple effect\r\n    const existingRipple = button.querySelector(\".ripple\");\r\n    if (existingRipple) {\r\n      existingRipple.remove();\r\n    }\r\n\r\n    const rect = button.getBoundingClientRect();\r\n    const size = Math.max(rect.width, rect.height);\r\n    const x = event.clientX - rect.left - size / 2;\r\n    const y = event.clientY - rect.top - size / 2;\r\n\r\n    const ripple = document.createElement(\"span\");\r\n    ripple.style.width = ripple.style.height = `${size}px`;\r\n    ripple.style.left = `${x}px`;\r\n    ripple.style.top = `${y}px`;\r\n    ripple.classList.add(\"ripple\");\r\n\r\n    button.appendChild(ripple);\r\n    if (rest?.onClick) rest.onClick(event);\r\n  };\r\n\r\n  return (\r\n    <button {...rest} className=\"ripple-button\" onClick={createRipple}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nconst TD = forwardRef(\r\n  (\r\n    {\r\n      itm,\r\n      columns,\r\n      isActive,\r\n      handleRowClick,\r\n      onDoubleClickSelected,\r\n      selectedRowIndexOnKey,\r\n      handleMouseEnter,\r\n      handleMouseLeave,\r\n      handleResizeStart,\r\n    }: any,\r\n    ref: React.ForwardedRef<HTMLTableRowElement>\r\n  ) => {\r\n    return (\r\n      <tr\r\n        ref={ref}\r\n        onMouseEnter={() => handleMouseEnter(itm)}\r\n        onMouseLeave={() => handleMouseLeave(itm)}\r\n        onDoubleClick={(e) => {\r\n          handleRowClick(itm.UserId);\r\n          onDoubleClickSelected(e, itm);\r\n        }}\r\n        className={`${isActive ? \"selected\" : \"not-selected\"}`}\r\n        style={{\r\n          background: selectedRowIndexOnKey ? \"#374151\" : \"\",\r\n        }}\r\n      >\r\n        {columns.map((colItm: any, idx: number) => {\r\n          return (\r\n            <td key={idx}>\r\n              <input\r\n                readOnly\r\n                defaultValue={itm[colItm.datakey]}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n              <ColumnResizer onResizeStart={handleResizeStart} />\r\n            </td>\r\n          );\r\n        })}\r\n      </tr>\r\n    );\r\n  }\r\n);\r\n\r\nconst ColumnResizer = ({ onResizeStart }: any) => {\r\n  const resizerRef = useRef(null);\r\n\r\n  const handleMouseDown = (e: any) => {\r\n    onResizeStart(e, resizerRef.current);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"column-resizer\"\r\n      ref={resizerRef}\r\n      onMouseDown={handleMouseDown}\r\n    ></div>\r\n  );\r\n};\r\n\r\nfunction CustomTable({\r\n  rows,\r\n  columns,\r\n  onSelectionChange = () => {},\r\n  isLoadingRow,\r\n}: {\r\n  rows: Array<any>;\r\n  columns: Array<{ header: string; datakey: string; width: string }>;\r\n  onSelectionChange?: (\r\n    e: React.MouseEvent<HTMLTableRowElement, MouseEvent>,\r\n    row: any\r\n  ) => void;\r\n  isLoadingRow?: boolean;\r\n}) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [activeRowId, setActiveRowId] = useState(null);\r\n  const [selectedRowIndex, setSelectedRowIndex] = useState(0);\r\n  const [itemsPerPage, setItemsPerPage] = useState(20);\r\n  const tableContainerRef = useRef<HTMLDivElement>(null);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const currentItems = rows.slice(startIndex, startIndex + itemsPerPage);\r\n  const rowRefs = useRef<any>([]);\r\n  const [columnWidths, setColumnWidths] = useState(\r\n    columns.map((itm) => parseInt(itm.width.replace(\"px\", \"\")))\r\n  );\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: any) => {\r\n      if (event.key === \"ArrowDown\") {\r\n        if (!tableContainerRef.current?.contains(document.activeElement)) {\r\n          return;\r\n        }\r\n        event.preventDefault();\r\n        setSelectedRowIndex((prevIndex) => {\r\n          const maxIndex = Math.min(rows.length, itemsPerPage) - 1;\r\n          const nextIndex =\r\n            prevIndex === null ? 0 : Math.min(prevIndex + 1, maxIndex);\r\n          if (rowRefs.current[nextIndex]) {\r\n            rowRefs.current[nextIndex].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n          }\r\n\r\n          return nextIndex;\r\n        });\r\n      } else if (event.key === \"ArrowUp\") {\r\n        if (!tableContainerRef.current?.contains(document.activeElement)) {\r\n          return;\r\n        }\r\n        event.preventDefault();\r\n        setSelectedRowIndex((prevIndex) => {\r\n          const nextIndex = prevIndex === null ? 0 : Math.max(prevIndex - 1, 0);\r\n          if (rowRefs.current[nextIndex]) {\r\n            rowRefs.current[nextIndex].scrollIntoView({\r\n              behavior: \"smooth\",\r\n              block: \"start\",\r\n            });\r\n          }\r\n          return nextIndex;\r\n        });\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [rows.length, itemsPerPage]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: any) => {\r\n      if (event.key === \"Enter\") {\r\n        if (!tableContainerRef.current?.contains(document.activeElement)) {\r\n          return;\r\n        }\r\n        event.preventDefault();\r\n        if (selectedRowIndex !== null) {\r\n          const selectedItem = currentItems[selectedRowIndex];\r\n          setActiveRowId((id) =>\r\n            id === selectedItem.UserId ? null : selectedItem.UserId\r\n          );\r\n          onSelectionChange(event, selectedItem);\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [selectedRowIndex, currentItems, onSelectionChange]);\r\n\r\n  const handleResizeStart = (e: any, resizer: any) => {\r\n    const startX = e.clientX;\r\n    const startWidth = resizer.parentElement.offsetWidth;\r\n    const columnIndex = Array.from(\r\n      resizer.parentElement.parentElement.children\r\n    ).indexOf(resizer.parentElement);\r\n\r\n    const handleMouseMove = (e: any) => {\r\n      const newWidth = startWidth + (e.clientX - startX);\r\n      setColumnWidths((prevWidths: any) => {\r\n        const newWidths = [...prevWidths];\r\n        newWidths[columnIndex] = newWidth;\r\n        return newWidths;\r\n      });\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n      window.removeEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", handleMouseMove);\r\n    window.addEventListener(\"mouseup\", handleMouseUp);\r\n  };\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n    setSelectedRowIndex(0); // Reset selected row index when changing pages\r\n  };\r\n\r\n  const handleRowClick = (id: any) => {\r\n    setActiveRowId(activeRowId === id ? null : id);\r\n  };\r\n\r\n  const handleMouseEnter = (item: any) => {\r\n    const hoveredIndex = rows.findIndex((i) => i.id === item.UserId);\r\n    setSelectedRowIndex(hoveredIndex);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setSelectedRowIndex(-1);\r\n  };\r\n  return (\r\n    <div className=\"table-container\" ref={tableContainerRef}>\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          overflow: \"auto\",\r\n          height: `${\r\n            (tableContainerRef.current?.getBoundingClientRect()\r\n              .height as number) - 50\r\n          }px`,\r\n          width: `${\r\n            tableContainerRef.current?.getBoundingClientRect().width\r\n          }px`,\r\n        }}\r\n      >\r\n        <table id=\"tableId\" className=\"resizable\">\r\n          <thead>\r\n            <tr>\r\n              {columns.map((itm: any, idx: number) => {\r\n                return (\r\n                  <th\r\n                    key={idx}\r\n                    style={{\r\n                      textAlign: \"left\",\r\n                      color: \"#fbbf24\",\r\n                      minWidth: columnWidths[idx],\r\n                    }}\r\n                  >\r\n                    {itm.header}\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          {isLoadingRow ? (\r\n            <tbody\r\n              style={{\r\n                height: `${\r\n                  (tableContainerRef.current?.getBoundingClientRect()\r\n                    .height as number) - 100\r\n                }px`,\r\n              }}\r\n            >\r\n              <tr className=\"td-loader\">\r\n                <td\r\n                  colSpan={columns.length}\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Loading...\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody>\r\n              {currentItems?.map((itm: any, idx: number) => {\r\n                return (\r\n                  <TD\r\n                    key={idx}\r\n                    itm={itm}\r\n                    columns={columns}\r\n                    handleRowClick={handleRowClick}\r\n                    isActive={itm.UserId === activeRowId}\r\n                    onDoubleClickSelected={onSelectionChange}\r\n                    selectedRowIndexOnKey={selectedRowIndex === idx}\r\n                    handleMouseEnter={handleMouseEnter}\r\n                    handleMouseLeave={handleMouseLeave}\r\n                    ref={(el) => (rowRefs.current[idx] = el)}\r\n                    handleResizeStart={handleResizeStart}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n      <div\r\n        style={{\r\n          height: \"40px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          background: \"#334155\",\r\n          padding: \"0 10px\",\r\n          columnGap: \"20px\",\r\n        }}\r\n      >\r\n        <select\r\n          value={itemsPerPage}\r\n          onChange={(e) => {\r\n            setItemsPerPage(parseInt(e.target.value));\r\n            setCurrentPage(1);\r\n          }}\r\n        >\r\n          <option value={10}>10</option>\r\n          <option value={20}>20</option>\r\n          <option value={30}>30</option>\r\n          <option value={40}>40</option>\r\n          <option value={50}>50</option>\r\n          <option value={100}>100</option>\r\n          <option value={500}>500</option>\r\n          <option value={1000}>1000</option>\r\n        </select>\r\n        <Pagination\r\n          totalItems={rows.length}\r\n          itemsPerPage={itemsPerPage}\r\n          currentPage={currentPage}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Pagination = ({\r\n  totalItems,\r\n  itemsPerPage,\r\n  currentPage,\r\n  onPageChange,\r\n}: any) => {\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n  const maxVisibleButtons = 6;\r\n\r\n  let startPage = 0,\r\n    endPage = 0;\r\n\r\n  if (totalPages <= maxVisibleButtons) {\r\n    startPage = 1;\r\n    endPage = totalPages;\r\n  } else {\r\n    const maxPagesBeforeCurrentPage = Math.floor(maxVisibleButtons / 2);\r\n    const maxPagesAfterCurrentPage = Math.ceil(maxVisibleButtons / 2) - 1;\r\n\r\n    if (currentPage <= maxPagesBeforeCurrentPage) {\r\n      startPage = 1;\r\n      endPage = maxVisibleButtons;\r\n    } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\r\n      startPage = totalPages - maxVisibleButtons + 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      startPage = currentPage - maxPagesBeforeCurrentPage;\r\n      endPage = currentPage + maxPagesAfterCurrentPage;\r\n    }\r\n  }\r\n\r\n  const paginationButtons = Array.from(\r\n    Array(endPage - startPage + 1),\r\n    (_, i) => startPage + i\r\n  );\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        columnGap: \"5px\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <button\r\n        style={{\r\n          padding: \"10px\",\r\n          textAlign: \"center\",\r\n          fontSize: \"11px\",\r\n        }}\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        Previous\r\n      </button>\r\n      {startPage > 1 && (\r\n        <>\r\n          <button\r\n            onClick={() => onPageChange(1)}\r\n            style={{\r\n              padding: \"10px\",\r\n              textAlign: \"center\",\r\n              fontSize: \"11px\",\r\n              borderRadius: \"50%\",\r\n              background: currentPage === startPage ? \"#1e293b\" : \"\",\r\n              minWidth: \"30px\",\r\n              minHeight: \"30px\",\r\n            }}\r\n          >\r\n            1\r\n          </button>\r\n          {startPage > 2 && <span>...</span>}\r\n        </>\r\n      )}\r\n      {paginationButtons.map((page) => (\r\n        <button\r\n          style={{\r\n            padding: \"10px\",\r\n            textAlign: \"center\",\r\n            fontSize: \"11px\",\r\n            borderRadius: \"50%\",\r\n            background: page === currentPage ? \"#1e293b\" : \"\",\r\n            minWidth: \"30px\",\r\n            minHeight: \"30px\",\r\n          }}\r\n          key={page}\r\n          onClick={() => onPageChange(page)}\r\n          className={page === currentPage ? \"active\" : \"\"}\r\n        >\r\n          {page}\r\n        </button>\r\n      ))}\r\n      {endPage < totalPages && (\r\n        <>\r\n          {endPage < totalPages - 1 && <span>...</span>}\r\n          <button\r\n            style={{\r\n              padding: \"10px\",\r\n              textAlign: \"center\",\r\n              fontSize: \"11px\",\r\n              borderRadius: \"50%\",\r\n              background: currentPage === totalPages ? \"#1e293b\" : \"\",\r\n              minWidth: \"30px\",\r\n              minHeight: \"30px\",\r\n            }}\r\n            onClick={() => onPageChange(totalPages)}\r\n          >\r\n            {totalPages}\r\n          </button>\r\n        </>\r\n      )}\r\n      <button\r\n        style={{\r\n          padding: \"10px\",\r\n          textAlign: \"center\",\r\n          fontSize: \"11px\",\r\n        }}\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["buttons","title","index","initialState","name","email","contact","username","department","accountType","password","confirmPassword","confirmationCode","confirm_confirmationCode","profile","reducer","state","action","type","_objectSpread","_defineProperty","field","value","MasterAdminDashboard","_queryFn","_useMultipleComponent","useMultipleComponent","_jsx","User","children","currentStepIndex","step","goTo","_useContext","useContext","AuthContext","setUser","myAxios","user","_useState","useState","_useState2","_slicedToArray","openCircularLoader","setOpenCircularLoader","navigate","useNavigate","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","abrupt","wait","then","_callee","_context","Logout","sent","stop","apply","arguments","enabled","refetchOnWindowFocus","onSuccess","res","data","success","Swal","position","icon","message","showConfirmButton","timer","refetch","_jsxs","className","style","width","height","background","display","alignItems","RippleButton","onClick","overflow","transform","cursor","border","padding","margin","xmlns","viewBox","fill","d","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","strokeLinejoin","map","item","idx","outline","backgroundColor","borderWidth","color","fontFamily","fontSize","fontWeight","lineHeight","listStyle","textAlign","transition","verticalAlign","whiteSpace","userSelect","touchAction","top","left","right","bottom","justifyContent","zIndex","CircularProgress","columns","datakey","header","_mutationFn","_queryFn2","_useContext2","_useReducer","useReducer","_useReducer2","dispatch","fileInput","useRef","_useState3","_useState4","openAddModal","setOpenAddModal","_useState5","_useState6","selectedImage","setSelectedImage","_useState7","_useState8","dragging","setDragging","_useState9","_useState10","hover","setHover","_useState11","_useState12","userRow","setUserRow","useEffect","_urlToFile","_callee3","response","buffer","file","reader","_context3","fetch","arrayBuffer","File","FileReader","onloadend","result","readAsDataURL","urlToFile","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee4","variable","_context4","post","headers","Authorization","concat","accessToken","mutateAddUser","mutate","isLoadingAddUser","isLoading","_useQuery2","_callee5","_context5","get","_response$data","users","isLoadingUser","handleInputChange","e","_e$target","target","React","borderRadius","CustomTable","rows","isLoadingRow","onSelectionChange","row","console","log","Modal","isOpen","onCLose","marginBottom","_fileInput$current","current","click","onDrop","event","preventDefault","dataTransfer","files","onDragOver","onDragLeave","onMouseEnter","onMouseLeave","pointerEvents","fillRule","clipRule","alt","src","accept","ref","onChange","push","fileName","fileContent","fileType","gridTemplateColumns","columnGap","rowGap","flexWrap","htmlFor","id","flex","borderLeft","borderRight","borderTop","borderBottom","textTransform","autoComplete","marginTop","gridColumn","_ref2","cx","cy","r","_ref3","rest","_objectWithoutProperties","_excluded","button","currentTarget","existingRipple","querySelector","remove","rect","getBoundingClientRect","size","Math","max","x","clientX","y","clientY","ripple","document","createElement","classList","add","appendChild","TD","forwardRef","_ref4","itm","isActive","handleRowClick","onDoubleClickSelected","selectedRowIndexOnKey","handleMouseEnter","handleMouseLeave","handleResizeStart","onDoubleClick","UserId","colItm","readOnly","defaultValue","ColumnResizer","onResizeStart","_ref5","resizerRef","onMouseDown","_ref6","_tableContainerRef$cu4","_tableContainerRef$cu5","_tableContainerRef$cu6","_ref6$onSelectionChan","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","activeRowId","setActiveRowId","_useState17","_useState18","selectedRowIndex","setSelectedRowIndex","_useState19","_useState20","itemsPerPage","setItemsPerPage","tableContainerRef","startIndex","currentItems","slice","rowRefs","_useState21","parseInt","replace","_useState22","columnWidths","setColumnWidths","handleKeyDown","key","_tableContainerRef$cu","contains","activeElement","prevIndex","maxIndex","min","length","nextIndex","scrollIntoView","behavior","block","_tableContainerRef$cu2","window","addEventListener","removeEventListener","_tableContainerRef$cu3","selectedItem","resizer","startX","startWidth","parentElement","offsetWidth","columnIndex","Array","from","indexOf","handleMouseMove","newWidth","prevWidths","newWidths","_toConsumableArray","handleMouseUp","hoveredIndex","findIndex","i","minWidth","colSpan","el","Pagination","totalItems","onPageChange","page","_ref7","totalPages","ceil","startPage","endPage","maxPagesBeforeCurrentPage","floor","maxVisibleButtons","maxPagesAfterCurrentPage","paginationButtons","_","disabled","_Fragment","minHeight","steps","setCurrentStepIndex","back","isFirstStep","isLastStep","source","excluded","Object","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}